{"ast":null,"code":"import{INDIA_ISO_SUFFIX,ISO_DATE_REGEX,LOCALE_SHORTHANDS,STATISTIC_CONFIGS,TESTED_EXPIRING_DAYS}from'../constants';import{differenceInDays,format,formatDistance,formatISO,subDays}from'date-fns';import{utcToZonedTime}from'date-fns-tz';import i18n from'i18next';var locale=null;var numberFormatter=new Intl.NumberFormat('en-IN',{maximumFractionDigits:1});var getLocale=function getLocale(){import('date-fns/locale/').then(function(localePackage){locale=localePackage[LOCALE_SHORTHANDS[i18n.language||window.localStorage.i18nextLng]];});};export var isDevelopmentOrTest=function isDevelopmentOrTest(){if(process.env.NODE_ENV==='development'||process.env.NODE_ENV==='test')return true;return false;};export var getIndiaDate=function getIndiaDate(){return utcToZonedTime(new Date(),'Asia/Kolkata');};export var getIndiaDateISO=function getIndiaDateISO(){return formatISO(getIndiaDate(),{representation:'date'});};export var getIndiaDateYesterday=function getIndiaDateYesterday(){return subDays(getIndiaDate(),1);};export var getIndiaDateYesterdayISO=function getIndiaDateYesterdayISO(){return formatISO(getIndiaDateYesterday(),{representation:'date'});};export var formatLastUpdated=function formatLastUpdated(unformattedDate){getLocale();return formatDistance(new Date(unformattedDate),new Date(),{locale:locale});};export var parseIndiaDate=function parseIndiaDate(unformattedDate){if(!unformattedDate){return getIndiaDate();}if(typeof unformattedDate==='string'&&unformattedDate.match(ISO_DATE_REGEX)){unformattedDate+=INDIA_ISO_SUFFIX;}return utcToZonedTime(new Date(unformattedDate),'Asia/Kolkata');};export var formatDate=function formatDate(unformattedDate,formatString){if(!unformattedDate)return'';if(typeof unformattedDate==='string'&&unformattedDate.match(ISO_DATE_REGEX))unformattedDate+=INDIA_ISO_SUFFIX;var date=utcToZonedTime(new Date(unformattedDate),'Asia/Kolkata');return format(date,formatString,{locale:locale});};export var formatDateObjIndia=function formatDateObjIndia(dateObj){return format(dateObj,\"yyyy-MM-dd'T'HH:mm:ss+05:30\",{locale:locale});};export var abbreviateNumber=function abbreviateNumber(number){var numberCleaned=Math.round(Math.abs(number));if(numberCleaned<1e3)return numberFormatter.format(Math.floor(number));else if(numberCleaned>=1e3&&numberCleaned<1e5)return numberFormatter.format(number/1e3)+'K';else if(numberCleaned>=1e5&&numberCleaned<1e7)return numberFormatter.format(number/1e5)+'L';else if(numberCleaned>=1e7&&numberCleaned<1e10)return numberFormatter.format(number/1e7)+'Cr';else if(numberCleaned>=1e10&&numberCleaned<1e14)return numberFormatter.format(number/1e10)+'K Cr';else if(numberCleaned>=1e14)return numberFormatter.format(number/1e14)+'L Cr';};export var formatNumber=function formatNumber(value){var _STATISTIC_CONFIGS$st;var option=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var statistic=arguments.length>2?arguments[2]:undefined;if(isNaN(value)||statistic&&((_STATISTIC_CONFIGS$st=STATISTIC_CONFIGS[statistic])===null||_STATISTIC_CONFIGS$st===void 0?void 0:_STATISTIC_CONFIGS$st.hideZero)&&value===0){return'-';}else if(option==='long'){return numberFormatter.format(Math.abs(value)<1?value:Math.round(value));}else if(option==='short'){return abbreviateNumber(value);}else if(option==='%'){return\"\".concat(numberFormatter.format(value),\"%\");}else if(option===''){return numberFormatter.format(value);}};export var capitalize=function capitalize(s){if(typeof s!=='string')return'';return s.charAt(0).toUpperCase()+s.slice(1);};export var toTitleCase=function toTitleCase(str){return str.replace(/\\w\\S*/g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase();});};export var getStatistic=function getStatistic(data,type,statistic){var _ref=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{},_ref$expiredDate=_ref.expiredDate,expiredDate=_ref$expiredDate===void 0?null:_ref$expiredDate,_ref$normalizedByPopu=_ref.normalizedByPopulationPer,normalizedByPopulationPer=_ref$normalizedByPopu===void 0?null:_ref$normalizedByPopu,_ref$movingAverage=_ref.movingAverage,movingAverage=_ref$movingAverage===void 0?false:_ref$movingAverage,_ref$canBeNaN=_ref.canBeNaN,canBeNaN=_ref$canBeNaN===void 0?false:_ref$canBeNaN;// TODO: Replace delta with daily to remove ambiguity\n//       Or add another type for daily/delta\nif(expiredDate!==null){var _STATISTIC_CONFIGS$st2;if(((_STATISTIC_CONFIGS$st2=STATISTIC_CONFIGS[statistic])===null||_STATISTIC_CONFIGS$st2===void 0?void 0:_STATISTIC_CONFIGS$st2.category)==='tested'){var _data$meta,_data$meta$tested;if(!(data===null||data===void 0?void 0:(_data$meta=data.meta)===null||_data$meta===void 0?void 0:(_data$meta$tested=_data$meta.tested)===null||_data$meta$tested===void 0?void 0:_data$meta$tested.date)||differenceInDays(parseIndiaDate(expiredDate),parseIndiaDate(data.meta.tested.date))>TESTED_EXPIRING_DAYS){return 0;}}}var multiplyFactor=1;if(type==='delta'&&movingAverage){type='delta7';multiplyFactor*=1/7;}if(normalizedByPopulationPer==='million'){var _data$meta2;multiplyFactor*=1e6/(data===null||data===void 0?void 0:(_data$meta2=data.meta)===null||_data$meta2===void 0?void 0:_data$meta2.population);}else if(normalizedByPopulationPer==='lakh'){var _data$meta3;multiplyFactor*=1e5/(data===null||data===void 0?void 0:(_data$meta3=data.meta)===null||_data$meta3===void 0?void 0:_data$meta3.population);}else if(normalizedByPopulationPer==='hundred'){var _data$meta4;multiplyFactor*=1e2/(data===null||data===void 0?void 0:(_data$meta4=data.meta)===null||_data$meta4===void 0?void 0:_data$meta4.population);}var val;if(statistic==='active'||statistic==='activeRatio'){var _data$type,_data$type2,_data$type3,_data$type4;var confirmed=(data===null||data===void 0?void 0:(_data$type=data[type])===null||_data$type===void 0?void 0:_data$type.confirmed)||0;var deceased=(data===null||data===void 0?void 0:(_data$type2=data[type])===null||_data$type2===void 0?void 0:_data$type2.deceased)||0;var recovered=(data===null||data===void 0?void 0:(_data$type3=data[type])===null||_data$type3===void 0?void 0:_data$type3.recovered)||0;var other=(data===null||data===void 0?void 0:(_data$type4=data[type])===null||_data$type4===void 0?void 0:_data$type4.other)||0;var active=confirmed-deceased-recovered-other;if(statistic==='active'){val=active;}else if(statistic==='activeRatio'){val=100*(active/confirmed);}}else if(statistic==='vaccinated'){var _data$type5,_data$type6;var dose1=(data===null||data===void 0?void 0:(_data$type5=data[type])===null||_data$type5===void 0?void 0:_data$type5.vaccinated1)||0;var dose2=(data===null||data===void 0?void 0:(_data$type6=data[type])===null||_data$type6===void 0?void 0:_data$type6.vaccinated2)||0;val=dose1+dose2;}else if(statistic==='tpr'){var _data$type7,_data$type8;var _confirmed=(data===null||data===void 0?void 0:(_data$type7=data[type])===null||_data$type7===void 0?void 0:_data$type7.confirmed)||0;var tested=(data===null||data===void 0?void 0:(_data$type8=data[type])===null||_data$type8===void 0?void 0:_data$type8.tested)||0;val=100*(_confirmed/tested);}else if(statistic==='cfr'){var _data$type9,_data$type10;var _deceased=(data===null||data===void 0?void 0:(_data$type9=data[type])===null||_data$type9===void 0?void 0:_data$type9.deceased)||0;var _confirmed2=(data===null||data===void 0?void 0:(_data$type10=data[type])===null||_data$type10===void 0?void 0:_data$type10.confirmed)||0;val=100*(_deceased/_confirmed2);}else if(statistic==='recoveryRatio'){var _data$type11,_data$type12;var _recovered=(data===null||data===void 0?void 0:(_data$type11=data[type])===null||_data$type11===void 0?void 0:_data$type11.recovered)||0;var _confirmed3=(data===null||data===void 0?void 0:(_data$type12=data[type])===null||_data$type12===void 0?void 0:_data$type12.confirmed)||0;val=100*(_recovered/_confirmed3);}else if(statistic==='caseGrowth'){var _data$delta,_data$delta21_;var confirmedDeltaLastWeek=(data===null||data===void 0?void 0:(_data$delta=data.delta7)===null||_data$delta===void 0?void 0:_data$delta.confirmed)||0;var confirmedDeltaTwoWeeksAgo=(data===null||data===void 0?void 0:(_data$delta21_=data.delta21_14)===null||_data$delta21_===void 0?void 0:_data$delta21_.confirmed)||0;val=type==='total'?100*((confirmedDeltaLastWeek-confirmedDeltaTwoWeeksAgo)/confirmedDeltaTwoWeeksAgo):0;}else if(statistic==='population'){var _data$meta5;val=type==='total'?data===null||data===void 0?void 0:(_data$meta5=data.meta)===null||_data$meta5===void 0?void 0:_data$meta5.population:0;}else{var _data$type13;val=data===null||data===void 0?void 0:(_data$type13=data[type])===null||_data$type13===void 0?void 0:_data$type13[statistic];}var statisticConfig=STATISTIC_CONFIGS[statistic];multiplyFactor=(statisticConfig===null||statisticConfig===void 0?void 0:statisticConfig.nonLinear)&&1||multiplyFactor;var result=multiplyFactor*val;if(!canBeNaN){result=!isNaN(result)&&result||0;}if(!(statisticConfig===null||statisticConfig===void 0?void 0:statisticConfig.canBeInfinite)){result=(isNaN(result)||isFinite(result))&&result||0;}return result;};export var fetcher=function fetcher(url){return fetch(url).then(function(response){return response.json();});};export function retry(fn){var retriesLeft=arguments.length>1&&arguments[1]!==undefined?arguments[1]:5;var interval=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1000;return new Promise(function(resolve,reject){fn().then(resolve).catch(function(error){setTimeout(function(){if(retriesLeft===1){// reject('maximum retries exceeded');\nreject(error);return;}// Passing on \"reject\" is the important part\nretry(fn,retriesLeft-1,interval).then(resolve,reject);},interval);});});}export var spike=function spike(length){var width=arguments.length>1&&arguments[1]!==undefined?arguments[1]:8;return\"M\".concat(-width/2,\",0L0,\").concat(-length,\"L\").concat(width/2,\",0\");};","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/utils/commonFunctions.js"],"names":["INDIA_ISO_SUFFIX","ISO_DATE_REGEX","LOCALE_SHORTHANDS","STATISTIC_CONFIGS","TESTED_EXPIRING_DAYS","differenceInDays","format","formatDistance","formatISO","subDays","utcToZonedTime","i18n","locale","numberFormatter","Intl","NumberFormat","maximumFractionDigits","getLocale","then","localePackage","language","window","localStorage","i18nextLng","isDevelopmentOrTest","process","env","NODE_ENV","getIndiaDate","Date","getIndiaDateISO","representation","getIndiaDateYesterday","getIndiaDateYesterdayISO","formatLastUpdated","unformattedDate","parseIndiaDate","match","formatDate","formatString","date","formatDateObjIndia","dateObj","abbreviateNumber","number","numberCleaned","Math","round","abs","floor","formatNumber","value","option","statistic","isNaN","hideZero","capitalize","s","charAt","toUpperCase","slice","toTitleCase","str","replace","txt","substr","toLowerCase","getStatistic","data","type","expiredDate","normalizedByPopulationPer","movingAverage","canBeNaN","category","meta","tested","multiplyFactor","population","val","confirmed","deceased","recovered","other","active","dose1","vaccinated1","dose2","vaccinated2","confirmedDeltaLastWeek","delta7","confirmedDeltaTwoWeeksAgo","delta21_14","statisticConfig","nonLinear","result","canBeInfinite","isFinite","fetcher","url","fetch","response","json","retry","fn","retriesLeft","interval","Promise","resolve","reject","catch","error","setTimeout","spike","length","width"],"mappings":"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","sourcesContent":["import {\n  INDIA_ISO_SUFFIX,\n  ISO_DATE_REGEX,\n  LOCALE_SHORTHANDS,\n  STATISTIC_CONFIGS,\n  TESTED_EXPIRING_DAYS,\n} from '../constants';\n\nimport {\n  differenceInDays,\n  format,\n  formatDistance,\n  formatISO,\n  subDays,\n} from 'date-fns';\nimport {utcToZonedTime} from 'date-fns-tz';\nimport i18n from 'i18next';\n\nlet locale = null;\nconst numberFormatter = new Intl.NumberFormat('en-IN', {\n  maximumFractionDigits: 1,\n});\n\nconst getLocale = () => {\n  import('date-fns/locale/').then((localePackage) => {\n    locale =\n      localePackage[\n        LOCALE_SHORTHANDS[i18n.language || window.localStorage.i18nextLng]\n      ];\n  });\n};\n\nexport const isDevelopmentOrTest = () => {\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\n    return true;\n  return false;\n};\n\nexport const getIndiaDate = () => {\n  return utcToZonedTime(new Date(), 'Asia/Kolkata');\n};\n\nexport const getIndiaDateISO = () => {\n  return formatISO(getIndiaDate(), {representation: 'date'});\n};\n\nexport const getIndiaDateYesterday = () => {\n  return subDays(getIndiaDate(), 1);\n};\n\nexport const getIndiaDateYesterdayISO = () => {\n  return formatISO(getIndiaDateYesterday(), {representation: 'date'});\n};\n\nexport const formatLastUpdated = (unformattedDate) => {\n  getLocale();\n  return formatDistance(new Date(unformattedDate), new Date(), {\n    locale: locale,\n  });\n};\n\nexport const parseIndiaDate = (unformattedDate) => {\n  if (!unformattedDate) {\n    return getIndiaDate();\n  }\n  if (\n    typeof unformattedDate === 'string' &&\n    unformattedDate.match(ISO_DATE_REGEX)\n  ) {\n    unformattedDate += INDIA_ISO_SUFFIX;\n  }\n  return utcToZonedTime(new Date(unformattedDate), 'Asia/Kolkata');\n};\n\nexport const formatDate = (unformattedDate, formatString) => {\n  if (!unformattedDate) return '';\n  if (\n    typeof unformattedDate === 'string' &&\n    unformattedDate.match(ISO_DATE_REGEX)\n  )\n    unformattedDate += INDIA_ISO_SUFFIX;\n  const date = utcToZonedTime(new Date(unformattedDate), 'Asia/Kolkata');\n  return format(date, formatString, {\n    locale: locale,\n  });\n};\n\nexport const formatDateObjIndia = (dateObj) => {\n  return format(dateObj, \"yyyy-MM-dd'T'HH:mm:ss+05:30\", {\n    locale: locale,\n  });\n};\n\nexport const abbreviateNumber = (number) => {\n  const numberCleaned = Math.round(Math.abs(number));\n  if (numberCleaned < 1e3) return numberFormatter.format(Math.floor(number));\n  else if (numberCleaned >= 1e3 && numberCleaned < 1e5)\n    return numberFormatter.format(number / 1e3) + 'K';\n  else if (numberCleaned >= 1e5 && numberCleaned < 1e7)\n    return numberFormatter.format(number / 1e5) + 'L';\n  else if (numberCleaned >= 1e7 && numberCleaned < 1e10)\n    return numberFormatter.format(number / 1e7) + 'Cr';\n  else if (numberCleaned >= 1e10 && numberCleaned < 1e14)\n    return numberFormatter.format(number / 1e10) + 'K Cr';\n  else if (numberCleaned >= 1e14)\n    return numberFormatter.format(number / 1e14) + 'L Cr';\n};\n\nexport const formatNumber = (value, option = '', statistic) => {\n  if (\n    isNaN(value) ||\n    (statistic && STATISTIC_CONFIGS[statistic]?.hideZero && value === 0)\n  ) {\n    return '-';\n  } else if (option === 'long') {\n    return numberFormatter.format(\n      Math.abs(value) < 1 ? value : Math.round(value)\n    );\n  } else if (option === 'short') {\n    return abbreviateNumber(value);\n  } else if (option === '%') {\n    return `${numberFormatter.format(value)}%`;\n  } else if (option === '') {\n    return numberFormatter.format(value);\n  }\n};\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const toTitleCase = (str) => {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\nexport const getStatistic = (\n  data,\n  type,\n  statistic,\n  {\n    expiredDate = null,\n    normalizedByPopulationPer = null,\n    movingAverage = false,\n    canBeNaN = false,\n  } = {}\n) => {\n  // TODO: Replace delta with daily to remove ambiguity\n  //       Or add another type for daily/delta\n\n  if (expiredDate !== null) {\n    if (STATISTIC_CONFIGS[statistic]?.category === 'tested') {\n      if (\n        !data?.meta?.tested?.date ||\n        differenceInDays(\n          parseIndiaDate(expiredDate),\n          parseIndiaDate(data.meta.tested.date)\n        ) > TESTED_EXPIRING_DAYS\n      ) {\n        return 0;\n      }\n    }\n  }\n\n  let multiplyFactor = 1;\n  if (type === 'delta' && movingAverage) {\n    type = 'delta7';\n    multiplyFactor *= 1 / 7;\n  }\n\n  if (normalizedByPopulationPer === 'million') {\n    multiplyFactor *= 1e6 / data?.meta?.population;\n  } else if (normalizedByPopulationPer === 'lakh') {\n    multiplyFactor *= 1e5 / data?.meta?.population;\n  } else if (normalizedByPopulationPer === 'hundred') {\n    multiplyFactor *= 1e2 / data?.meta?.population;\n  }\n\n  let val;\n  if (statistic === 'active' || statistic === 'activeRatio') {\n    const confirmed = data?.[type]?.confirmed || 0;\n    const deceased = data?.[type]?.deceased || 0;\n    const recovered = data?.[type]?.recovered || 0;\n    const other = data?.[type]?.other || 0;\n    const active = confirmed - deceased - recovered - other;\n    if (statistic === 'active') {\n      val = active;\n    } else if (statistic === 'activeRatio') {\n      val = 100 * (active / confirmed);\n    }\n  } else if (statistic === 'vaccinated') {\n    const dose1 = data?.[type]?.vaccinated1 || 0;\n    const dose2 = data?.[type]?.vaccinated2 || 0;\n    val = dose1 + dose2;\n  } else if (statistic === 'tpr') {\n    const confirmed = data?.[type]?.confirmed || 0;\n    const tested = data?.[type]?.tested || 0;\n    val = 100 * (confirmed / tested);\n  } else if (statistic === 'cfr') {\n    const deceased = data?.[type]?.deceased || 0;\n    const confirmed = data?.[type]?.confirmed || 0;\n    val = 100 * (deceased / confirmed);\n  } else if (statistic === 'recoveryRatio') {\n    const recovered = data?.[type]?.recovered || 0;\n    const confirmed = data?.[type]?.confirmed || 0;\n    val = 100 * (recovered / confirmed);\n  } else if (statistic === 'caseGrowth') {\n    const confirmedDeltaLastWeek = data?.delta7?.confirmed || 0;\n    const confirmedDeltaTwoWeeksAgo = data?.delta21_14?.confirmed || 0;\n    val =\n      type === 'total'\n        ? 100 *\n          ((confirmedDeltaLastWeek - confirmedDeltaTwoWeeksAgo) /\n            confirmedDeltaTwoWeeksAgo)\n        : 0;\n  } else if (statistic === 'population') {\n    val = type === 'total' ? data?.meta?.population : 0;\n  } else {\n    val = data?.[type]?.[statistic];\n  }\n\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n  multiplyFactor = (statisticConfig?.nonLinear && 1) || multiplyFactor;\n\n  let result = multiplyFactor * val;\n  if (!canBeNaN) {\n    result = (!isNaN(result) && result) || 0;\n  }\n  if (!statisticConfig?.canBeInfinite) {\n    result = ((isNaN(result) || isFinite(result)) && result) || 0;\n  }\n  return result;\n};\n\nexport const fetcher = (url) => {\n  return fetch(url).then((response) => {\n    return response.json();\n  });\n};\n\nexport function retry(fn, retriesLeft = 5, interval = 1000) {\n  return new Promise((resolve, reject) => {\n    fn()\n      .then(resolve)\n      .catch((error) => {\n        setTimeout(() => {\n          if (retriesLeft === 1) {\n            // reject('maximum retries exceeded');\n            reject(error);\n            return;\n          }\n\n          // Passing on \"reject\" is the important part\n          retry(fn, retriesLeft - 1, interval).then(resolve, reject);\n        }, interval);\n      });\n  });\n}\n\nexport const spike = (length, width = 8) =>\n  `M${-width / 2},0L0,${-length}L${width / 2},0`;\n"]},"metadata":{},"sourceType":"module"}