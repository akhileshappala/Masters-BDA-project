"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _classnames = _interopRequireDefault(require("classnames"));
var _Dropdown = _interopRequireDefault(require("./Dropdown"));
var _jsxRuntime = require("react/jsx-runtime");
let _ = t => t,
  _t;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const ContextMenuStyled = _styledComponents.default.div(_t || (_t = _`
  position: fixed;
  z-index: 9999;
  left: 0;
  top: 0;
  min-width: 150px;
  cursor: pointer;

  .list-group-item + .dropdown-menu {
    padding: 0;
  }
`));
function ContextMenu(props) {
  const {
    menu,
    anchorPointX,
    anchorPointY,
    size,
    onClose,
    ...rest
  } = props;
  const ref = _react.default.useRef(null);
  const handleClickOutside = (0, _react.useCallback)(e => {
    if (ref.current && !ref.current.contains(e.target)) {
      onClose(e);
    }
  }, [onClose]);
  (0, _react.useEffect)(() => {
    if (!(typeof window === 'undefined' || !window.document)) {
      window.document.addEventListener('mousedown', handleClickOutside);
    }
    return () => {
      if (!(typeof window === 'undefined' || !window.document)) {
        window.document.removeEventListener('mousedown', handleClickOutside);
      }
    };
  }, [handleClickOutside]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(ContextMenuStyled, {
    className: (0, _classnames.default)('context-menu list-group', size === 'sm' && 'list-group-condensed'),
    ref: ref,
    style: {
      transform: `translate(calc(${anchorPointX}px), calc(${anchorPointY}px))`
    },
    ...rest,
    children: menu.map((item, index) => item.children ? /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Dropdown.default, {
      drop: "right",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Dropdown.default.Toggle, {
        as: "li",
        className: "list-group-item",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          style: {
            marginRight: '10%'
          },
          children: item.title
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_Dropdown.default.Menu, {
        className: "dropdown-menu-md",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("ul", {
          className: "list-group dropdown-item p-0 m-0",
          children: item.children.map((childItem, childIndex) => /*#__PURE__*/(0, _jsxRuntime.jsx)("li", {
            className: "list-group-item",
            onClick: childItem.onClick,
            style: {
              wordWrap: 'break-word'
            },
            children: childItem.title
          }, `child_list_item_${childIndex}`))
        })
      })]
    }, `list_item_${index}`) : /*#__PURE__*/(0, _jsxRuntime.jsx)("li", {
      className: "list-group-item",
      onClick: item.onClick,
      children: item.title
    }, `list_item_${index}`))
  });
}
var _default = ContextMenu;
exports.default = _default;
module.exports = exports.default;