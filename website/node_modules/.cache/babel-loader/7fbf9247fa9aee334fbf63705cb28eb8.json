{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/MapLegend.js\",\n    _s = $RefreshSig$();\n\nimport { D3_TRANSITION_DURATION, MAP_DIMENSIONS, MAP_LEGEND_HEIGHT, MAP_VIZS, STATISTIC_CONFIGS } from '../constants';\nimport { formatNumber, spike } from '../utils/commonFunctions';\nimport { range, quantile } from 'd3-array';\nimport { axisRight, axisBottom } from 'd3-axis';\nimport { format } from 'd3-format';\nimport { interpolate, interpolateRound, quantize } from 'd3-interpolate';\nimport { scaleLinear, scaleOrdinal, scaleBand } from 'd3-scale';\nimport { select } from 'd3-selection';\nimport { transition } from 'd3-transition';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMeasure } from 'react-use';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MapLegend({\n  data,\n  statistic,\n  mapViz,\n  mapScale\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const svgLegendRef = useRef(null);\n  const svgLegendChoroRef = useRef(null);\n  const [wrapperRef, {\n    width\n  }] = useMeasure();\n  useEffect(() => {\n    const t = transition().duration(D3_TRANSITION_DURATION);\n\n    if (mapViz !== MAP_VIZS.CHOROPLETH) {\n      const svg = select(svgLegendChoroRef.current);\n      svg.select('.ramp').transition(t).attr('opacity', 0).attr('display', 'none').attr('xlink:href', null);\n      svg.select('.bars').selectAll('rect').transition(t).attr('opacity', 0).remove();\n      svg.selectAll('.axis > *:not(.axistext)').remove();\n      svg.select('.axistext').text('');\n    }\n\n    if (mapViz !== MAP_VIZS.BUBBLE) {\n      const svg = select(svgLegendRef.current);\n      svg.select('.circles').selectAll('circle').transition(t).attr('r', 0).attr('cy', 0).remove();\n      svg.selectAll('.circle-axis > *').remove();\n    }\n\n    if (mapViz !== MAP_VIZS.SPIKES) {\n      const svg = select(svgLegendRef.current);\n      svg.select('.spikes').call(g => g.selectAll('path').transition(t).attr('d', spike(0)).remove()).call(g => g.selectAll('text').remove()).transition(t).selectAll('g').remove();\n      svg.selectAll('.spike-axis > *').remove();\n    }\n  }, [mapViz]);\n  useEffect(() => {\n    if (!width) return;\n    const statisticConfig = STATISTIC_CONFIGS[statistic];\n    const zoom = width / MAP_DIMENSIONS[0];\n\n    if (mapViz === MAP_VIZS.BUBBLE) {\n      const svg = select(svgLegendRef.current);\n      const [, domainMax] = mapScale.domain();\n      const legend = svg.select('.circles').attr('transform', `translate(48,40)`).attr('text-anchor', 'middle');\n      const legendRadius = [0.1, 0.4, 1].map(d => d * domainMax);\n      legend.selectAll('circle').data(legendRadius).join('circle').attr('fill', 'none').attr('stroke', statisticConfig.color + '70').transition(t).attr('cy', d => -mapScale(d)).attr('r', d => mapScale(d));\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\n      svg.select('.circle-axis').attr('transform', `translate(48,50)`).transition(t).call(axisRight(yScale).tickSize(0).tickPadding(0).tickValues(legendRadius).tickFormat(num => formatNumber(num, statisticConfig.format === 'long' ? 'short' : statisticConfig.format))).selectAll('.tick text').style('text-anchor', 'middle').attr('font-size', 10 / zoom);\n      svg.select('.circle-axis').call(g => g.select('.domain').remove());\n    } else if (mapViz === MAP_VIZS.SPIKE) {\n      const svg = select(svgLegendRef.current);\n      const ticks = mapScale.ticks(3).slice(1).reverse();\n      const gap = 28 / zoom;\n      svg.select('.spikes').attr('transform', `translate(32,24)`).selectAll('g').data(ticks).join(enter => enter.append('g').call(g => g.append('path').attr('fill-opacity', 0.3).attr('d', d => spike(0)))).attr('transform', (d, i) => `translate(${i * gap},0)`).call(g => g.select('path').transition(t).attr('d', d => spike(mapScale(d))).attr('fill', statisticConfig.color + '70').attr('stroke', statisticConfig.color + '70'));\n      const xScale = mapScale.copy().range([gap * ticks.length, 0]);\n      svg.select('.spike-axis').attr('transform', `translate(32,32)`).transition(t).call(axisBottom(xScale).tickSize(0).tickPadding(0).tickValues(ticks).tickFormat(num => formatNumber(num, statisticConfig.format === 'long' ? 'short' : statisticConfig.format))).selectAll('.tick text').style('text-anchor', 'middle').attr('font-size', 10 / zoom);\n      svg.select('.spike-axis').call(g => g.select('.domain').remove());\n    } else {\n      var _statisticConfig$mapC2;\n\n      const svg = select(svgLegendChoroRef.current);\n      svg.call(() => legend({\n        svg: svg,\n        color: mapScale,\n        width: width,\n        height: MAP_LEGEND_HEIGHT,\n        ticks: 5,\n        tickFormat: function (d, i, n) {\n          var _statisticConfig$mapC;\n\n          if (statisticConfig === null || statisticConfig === void 0 ? void 0 : (_statisticConfig$mapC = statisticConfig.mapConfig) === null || _statisticConfig$mapC === void 0 ? void 0 : _statisticConfig$mapC.colorScale) {\n            return d;\n          } else if (mapViz === MAP_VIZS.CHOROPLETH && !Number.isInteger(d)) {\n            return '';\n          } else if (i === n.length - 1) {\n            return formatNumber(d, statisticConfig.format) + '+';\n          } else {\n            return formatNumber(d, statisticConfig.format);\n          }\n        },\n        marginLeft: 2,\n        marginRight: 0\n      }));\n      svg.attr('class', (statisticConfig === null || statisticConfig === void 0 ? void 0 : (_statisticConfig$mapC2 = statisticConfig.mapConfig) === null || _statisticConfig$mapC2 === void 0 ? void 0 : _statisticConfig$mapC2.colorScale) ? 'zone' : '');\n    }\n  }, [t, width, statistic, mapScale, mapViz]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"svg-parent maplegend\",\n    ref: wrapperRef,\n    style: {\n      height: 2 * MAP_LEGEND_HEIGHT\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"legend\",\n      preserveAspectRatio: \"xMinYMid meet\",\n      ref: svgLegendRef,\n      viewBox: `0 0 ${MAP_DIMENSIONS[0]} ${MAP_LEGEND_HEIGHT}`,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"circles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"spikes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"circle-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"spike-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"axis\",\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"axistext\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"legend-choro\",\n      preserveAspectRatio: \"xMinYMid meet\",\n      ref: svgLegendChoroRef,\n      children: [/*#__PURE__*/_jsxDEV(\"image\", {\n        className: \"ramp\",\n        preserveAspectRatio: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"bars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"axis\",\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"axistext\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"color-scale\",\n      style: {\n        position: 'absolute',\n        height: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MapLegend, \"hlecsRfH5ckdp8oP8c1Vu+xvXsg=\", false, function () {\n  return [useTranslation, useMeasure];\n});\n\n_c = MapLegend;\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights\n} = {}) {\n  const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n  let tickAdjust = g => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height); // select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n\n  let x; // Continuous\n\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n    x = color.copy().rangeRound(quantize(interpolate(marginLeft, width - marginRight), n));\n    svg.select('.ramp').attr('x', marginLeft).attr('y', marginTop).attr('width', width - marginLeft - marginRight).attr('height', height - marginTop - marginBottom).attr('xlink:href', ramp(color.copy().domain(quantize(interpolate(0, 1), n))).toDataURL());\n  } // Sequential\n  else if (color.interpolator) {\n      svg.select('.bars').selectAll('rect').transition(t).attr('opacity', 0).remove();\n      x = Object.assign(color.copy().interpolator(interpolateRound(marginLeft, width - marginRight)), {\n        range() {\n          return [marginLeft, width - marginRight];\n        }\n\n      });\n      svg.select('.ramp').attr('x', marginLeft).attr('y', marginTop).attr('width', width - marginLeft - marginRight).attr('height', height - marginTop - marginBottom).attr('xlink:href', ramp(color.interpolator()).toDataURL()).attr('display', 'visible').transition(t).attr('opacity', 1); // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n\n      if (!x.ticks) {\n        if (tickValues === undefined) {\n          const n = Math.round(ticks + 1);\n          tickValues = range(n).map(i => quantile(color.domain(), i / (n - 1)));\n        }\n\n        if (typeof tickFormat !== 'function') {\n          tickFormat = format(tickFormat === undefined ? ',f' : tickFormat);\n        }\n      }\n    } // Threshold\n    else if (color.invertExtent) {\n        const thresholds = color.thresholds ? color.thresholds() // scaleQuantize\n        : color.quantiles ? color.quantiles() // scaleQuantile\n        : color.domain(); // scaleThreshold\n\n        const thresholdFormat = tickFormat === undefined ? d => d : typeof tickFormat === 'string' ? format(tickFormat) : tickFormat;\n        x = scaleLinear().domain([-1, color.range().length - 1]).rangeRound([marginLeft, width - marginRight]);\n        svg.append('g').selectAll('rect').data(color.range()).join('rect').attr('x', (d, i) => x(i - 1)).attr('y', marginTop).attr('width', (d, i) => x(i) - x(i - 1)).attr('height', height - marginTop - marginBottom).attr('fill', d => d);\n        tickValues = range(-1, thresholds.length);\n\n        tickFormat = i => {\n          if (i === -1) return thresholdFormat(1);else if (i === thresholds.length - 1) return;else if (i === thresholds.length - 2) return thresholdFormat(thresholds[i] + '+', i);\n          return thresholdFormat(thresholds[i], i);\n        };\n      } // Ordinal\n      else {\n          svg.select('.ramp').transition(t).attr('opacity', 0).attr('xlink:href', null);\n\n          if (!ordinalWeights) {\n            x = scaleBand().domain(color.domain().filter(d => d)).rangeRound([marginLeft, width - marginRight]);\n            svg.select('.bars').selectAll('rect').data(color.domain().filter(d => d)).join('rect').attr('x', x).attr('y', marginTop).attr('width', Math.max(0, x.bandwidth() - 1)).attr('height', height - marginTop - marginBottom).attr('fill', color);\n          } else {\n            const widthScale = scaleLinear().domain([0, ordinalWeights.reduce((a, b) => a + b)]).rangeRound([0, width - marginLeft - marginRight]);\n            const xPos = ordinalWeights.map((w, i) => ordinalWeights.slice(0, i).reduce((acc, w) => acc + widthScale(w), marginLeft));\n            x = scaleOrdinal().domain(color.domain()).range(xPos);\n            svg.select('.bars').selectAll('rect').data(color.domain()).join(enter => enter.append('rect').attr('x', x).attr('width', (d, i) => widthScale(ordinalWeights[i]))).attr('y', marginTop).attr('height', height - marginTop - marginBottom).attr('fill', color).transition(t).attr('x', x).attr('width', (d, i) => widthScale(ordinalWeights[i])).attr('opacity', 1);\n          }\n\n          tickAdjust = () => {};\n        }\n\n  svg.select('.axis').attr('transform', `translate(0,${height - marginBottom})`).transition(t).attr('class', 'axis').call(axisBottom(x).ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined).tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined).tickSize(tickSize).tickValues(tickValues)).on('start', () => {\n    svg.call(tickAdjust).call(svg => svg.select('.domain').remove());\n  }).call(g => g.select('.axistext').attr('class', 'axistext').attr('x', marginLeft).attr('y', marginTop + marginBottom - height - 6).attr('fill', 'currentColor').attr('text-anchor', 'start').attr('font-weight', 'bold').text(title));\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  const canvas = select('.color-scale').node();\n  const context = (canvas.width = n, canvas.height = 1, canvas).getContext('2d');\n\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n\n  return canvas;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"MapLegend\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/MapLegend.js"],"names":["D3_TRANSITION_DURATION","MAP_DIMENSIONS","MAP_LEGEND_HEIGHT","MAP_VIZS","STATISTIC_CONFIGS","formatNumber","spike","range","quantile","axisRight","axisBottom","format","interpolate","interpolateRound","quantize","scaleLinear","scaleOrdinal","scaleBand","select","transition","useEffect","useRef","useTranslation","useMeasure","MapLegend","data","statistic","mapViz","mapScale","t","svgLegendRef","svgLegendChoroRef","wrapperRef","width","duration","CHOROPLETH","svg","current","attr","selectAll","remove","text","BUBBLE","SPIKES","call","g","statisticConfig","zoom","domainMax","domain","legend","legendRadius","map","d","join","color","yScale","copy","tickSize","tickPadding","tickValues","tickFormat","num","style","SPIKE","ticks","slice","reverse","gap","enter","append","i","xScale","length","height","n","mapConfig","colorScale","Number","isInteger","marginLeft","marginRight","position","title","marginTop","marginBottom","ordinalWeights","tickAdjust","x","Math","min","rangeRound","ramp","toDataURL","interpolator","Object","assign","undefined","round","invertExtent","thresholds","quantiles","thresholdFormat","filter","max","bandwidth","widthScale","reduce","a","b","xPos","w","acc","on","node","canvas","context","getContext","fillStyle","fillRect"],"mappings":"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","sourcesContent":["import {\n  D3_TRANSITION_DURATION,\n  MAP_DIMENSIONS,\n  MAP_LEGEND_HEIGHT,\n  MAP_VIZS,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {formatNumber, spike} from '../utils/commonFunctions';\n\nimport {range, quantile} from 'd3-array';\nimport {axisRight, axisBottom} from 'd3-axis';\nimport {format} from 'd3-format';\nimport {interpolate, interpolateRound, quantize} from 'd3-interpolate';\nimport {scaleLinear, scaleOrdinal, scaleBand} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport {transition} from 'd3-transition';\nimport {useEffect, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useMeasure} from 'react-use';\n\nfunction MapLegend({data, statistic, mapViz, mapScale}) {\n  const {t} = useTranslation();\n  const svgLegendRef = useRef(null);\n  const svgLegendChoroRef = useRef(null);\n  const [wrapperRef, {width}] = useMeasure();\n\n  useEffect(() => {\n    const t = transition().duration(D3_TRANSITION_DURATION);\n\n    if (mapViz !== MAP_VIZS.CHOROPLETH) {\n      const svg = select(svgLegendChoroRef.current);\n      svg\n        .select('.ramp')\n        .transition(t)\n        .attr('opacity', 0)\n        .attr('display', 'none')\n        .attr('xlink:href', null);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .transition(t)\n        .attr('opacity', 0)\n        .remove();\n      svg.selectAll('.axis > *:not(.axistext)').remove();\n      svg.select('.axistext').text('');\n    }\n\n    if (mapViz !== MAP_VIZS.BUBBLE) {\n      const svg = select(svgLegendRef.current);\n      svg\n        .select('.circles')\n        .selectAll('circle')\n        .transition(t)\n        .attr('r', 0)\n        .attr('cy', 0)\n        .remove();\n      svg.selectAll('.circle-axis > *').remove();\n    }\n\n    if (mapViz !== MAP_VIZS.SPIKES) {\n      const svg = select(svgLegendRef.current);\n      svg\n        .select('.spikes')\n        .call((g) =>\n          g.selectAll('path').transition(t).attr('d', spike(0)).remove()\n        )\n        .call((g) => g.selectAll('text').remove())\n        .transition(t)\n        .selectAll('g')\n        .remove();\n      svg.selectAll('.spike-axis > *').remove();\n    }\n  }, [mapViz]);\n\n  useEffect(() => {\n    if (!width) return;\n\n    const statisticConfig = STATISTIC_CONFIGS[statistic];\n    const zoom = width / MAP_DIMENSIONS[0];\n\n    if (mapViz === MAP_VIZS.BUBBLE) {\n      const svg = select(svgLegendRef.current);\n\n      const [, domainMax] = mapScale.domain();\n\n      const legend = svg\n        .select('.circles')\n        .attr('transform', `translate(48,40)`)\n        .attr('text-anchor', 'middle');\n\n      const legendRadius = [0.1, 0.4, 1].map((d) => d * domainMax);\n\n      legend\n        .selectAll('circle')\n        .data(legendRadius)\n        .join('circle')\n        .attr('fill', 'none')\n        .attr('stroke', statisticConfig.color + '70')\n        .transition(t)\n        .attr('cy', (d) => -mapScale(d))\n        .attr('r', (d) => mapScale(d));\n\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\n\n      svg\n        .select('.circle-axis')\n        .attr('transform', `translate(48,50)`)\n        .transition(t)\n        .call(\n          axisRight(yScale)\n            .tickSize(0)\n            .tickPadding(0)\n            .tickValues(legendRadius)\n            .tickFormat((num) =>\n              formatNumber(\n                num,\n                statisticConfig.format === 'long'\n                  ? 'short'\n                  : statisticConfig.format\n              )\n            )\n        )\n        .selectAll('.tick text')\n        .style('text-anchor', 'middle')\n        .attr('font-size', 10 / zoom);\n\n      svg.select('.circle-axis').call((g) => g.select('.domain').remove());\n    } else if (mapViz === MAP_VIZS.SPIKE) {\n      const svg = select(svgLegendRef.current);\n      const ticks = mapScale.ticks(3).slice(1).reverse();\n\n      const gap = 28 / zoom;\n\n      svg\n        .select('.spikes')\n        .attr('transform', `translate(32,24)`)\n        .selectAll('g')\n        .data(ticks)\n        .join((enter) =>\n          enter.append('g').call((g) =>\n            g\n              .append('path')\n              .attr('fill-opacity', 0.3)\n              .attr('d', (d) => spike(0))\n          )\n        )\n        .attr('transform', (d, i) => `translate(${i * gap},0)`)\n        .call((g) =>\n          g\n            .select('path')\n            .transition(t)\n            .attr('d', (d) => spike(mapScale(d)))\n            .attr('fill', statisticConfig.color + '70')\n            .attr('stroke', statisticConfig.color + '70')\n        );\n\n      const xScale = mapScale.copy().range([gap * ticks.length, 0]);\n      svg\n        .select('.spike-axis')\n        .attr('transform', `translate(32,32)`)\n        .transition(t)\n        .call(\n          axisBottom(xScale)\n            .tickSize(0)\n            .tickPadding(0)\n            .tickValues(ticks)\n            .tickFormat((num) =>\n              formatNumber(\n                num,\n                statisticConfig.format === 'long'\n                  ? 'short'\n                  : statisticConfig.format\n              )\n            )\n        )\n        .selectAll('.tick text')\n        .style('text-anchor', 'middle')\n        .attr('font-size', 10 / zoom);\n\n      svg.select('.spike-axis').call((g) => g.select('.domain').remove());\n    } else {\n      const svg = select(svgLegendChoroRef.current);\n      svg.call(() =>\n        legend({\n          svg: svg,\n          color: mapScale,\n          width: width,\n          height: MAP_LEGEND_HEIGHT,\n          ticks: 5,\n          tickFormat: function (d, i, n) {\n            if (statisticConfig?.mapConfig?.colorScale) {\n              return d;\n            } else if (mapViz === MAP_VIZS.CHOROPLETH && !Number.isInteger(d)) {\n              return '';\n            } else if (i === n.length - 1) {\n              return formatNumber(d, statisticConfig.format) + '+';\n            } else {\n              return formatNumber(d, statisticConfig.format);\n            }\n          },\n          marginLeft: 2,\n          marginRight: 0,\n        })\n      );\n      svg.attr('class', statisticConfig?.mapConfig?.colorScale ? 'zone' : '');\n    }\n  }, [t, width, statistic, mapScale, mapViz]);\n\n  return (\n    <div\n      className=\"svg-parent maplegend\"\n      ref={wrapperRef}\n      style={{height: 2 * MAP_LEGEND_HEIGHT}}\n    >\n      <svg\n        id=\"legend\"\n        preserveAspectRatio=\"xMinYMid meet\"\n        ref={svgLegendRef}\n        viewBox={`0 0 ${MAP_DIMENSIONS[0]} ${MAP_LEGEND_HEIGHT}`}\n      >\n        <g className=\"circles\"></g>\n        <g className=\"spikes\"></g>\n        <g className=\"circle-axis\"></g>\n        <g className=\"spike-axis\"></g>\n        <g className=\"axis\">\n          <text className=\"axistext\" />\n        </g>\n      </svg>\n      <svg\n        id=\"legend-choro\"\n        preserveAspectRatio=\"xMinYMid meet\"\n        ref={svgLegendChoroRef}\n      >\n        <image className=\"ramp\" preserveAspectRatio=\"none\" />\n        <g className=\"bars\"></g>\n        <g className=\"axis\">\n          <text className=\"axistext\" />\n        </g>\n      </svg>\n      <canvas\n        className=\"color-scale\"\n        style={{position: 'absolute', height: 0}}\n      />\n    </div>\n  );\n}\n\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights,\n} = {}) {\n  const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(quantize(interpolate(marginLeft, width - marginRight), n));\n\n    svg\n      .select('.ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr(\n        'xlink:href',\n        ramp(color.copy().domain(quantize(interpolate(0, 1), n))).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    svg\n      .select('.bars')\n      .selectAll('rect')\n      .transition(t)\n      .attr('opacity', 0)\n      .remove();\n\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .select('.ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\n      .attr('display', 'visible')\n      .transition(t)\n      .attr('opacity', 1);\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = range(n).map((i) => quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? format(tickFormat)\n        : tickFormat;\n\n    x = scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    svg\n      .select('.ramp')\n      .transition(t)\n      .attr('opacity', 0)\n      .attr('xlink:href', null);\n    if (!ordinalWeights) {\n      x = scaleBand()\n        .domain(color.domain().filter((d) => d))\n        .rangeRound([marginLeft, width - marginRight]);\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .data(color.domain().filter((d) => d))\n        .join('rect')\n        .attr('x', x)\n        .attr('y', marginTop)\n        .attr('width', Math.max(0, x.bandwidth() - 1))\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color);\n    } else {\n      const widthScale = scaleLinear()\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\n        .rangeRound([0, width - marginLeft - marginRight]);\n\n      const xPos = ordinalWeights.map((w, i) =>\n        ordinalWeights\n          .slice(0, i)\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\n      );\n\n      x = scaleOrdinal().domain(color.domain()).range(xPos);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .data(color.domain())\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('x', x)\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        )\n        .attr('y', marginTop)\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color)\n        .transition(t)\n        .attr('x', x)\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        .attr('opacity', 1);\n    }\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .select('.axis')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .transition(t)\n    .attr('class', 'axis')\n    .call(\n      axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .on('start', () => {\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\n    })\n    .call((g) =>\n      g\n        .select('.axistext')\n        .attr('class', 'axistext')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  const canvas = select('.color-scale').node();\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n"]},"metadata":{},"sourceType":"module"}