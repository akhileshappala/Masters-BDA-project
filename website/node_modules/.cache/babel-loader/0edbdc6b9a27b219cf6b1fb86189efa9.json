{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/LanguageSwitcher.js\",\n    _s = $RefreshSig$();\n\nimport { ENTER_IN, ENTER_OUT } from '../animations';\nimport locales from '../i18n/locales.json';\nimport { ArrowUpIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport { memo, useRef, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useTransition, animated } from 'react-spring';\nimport { useClickAway } from 'react-use';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LanguageSwitcher({\n  showLanguageSwitcher,\n  setShowLanguageSwitcher\n}) {\n  _s();\n\n  var _i18n$options;\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const currentLanguage = Object.keys(locales).includes(i18n === null || i18n === void 0 ? void 0 : i18n.language) ? i18n === null || i18n === void 0 ? void 0 : i18n.language : i18n === null || i18n === void 0 ? void 0 : (_i18n$options = i18n.options) === null || _i18n$options === void 0 ? void 0 : _i18n$options.fallbackLng[0];\n  const transitions = useTransition(showLanguageSwitcher, {\n    from: ENTER_OUT,\n    enter: ENTER_IN,\n    leave: ENTER_OUT,\n    config: {\n      mass: 1,\n      tension: 100,\n      friction: 15\n    }\n  });\n  const languageSwitcherRef = useRef();\n  useClickAway(languageSwitcherRef, e => {\n    if (e.target.className !== 'navbar-left') {\n      setShowLanguageSwitcher(false);\n    }\n  });\n  const switchLanguage = useCallback(languageKey => {\n    if (i18n) i18n.changeLanguage(languageKey);\n  }, [i18n]);\n  return transitions((style, item) => item && /*#__PURE__*/_jsxDEV(animated.div, {\n    className: \"LanguageSwitcher\",\n    ref: languageSwitcherRef,\n    style,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: t('We speak the following languages')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"languages\",\n      children: Object.keys(locales).map(languageKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('language', {\n          'is-highlighted': currentLanguage === languageKey\n        }),\n        onClick: switchLanguage.bind(this, languageKey),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: locales[languageKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, languageKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close-button\",\n      onClick: setShowLanguageSwitcher.bind(this, false),\n      children: /*#__PURE__*/_jsxDEV(ArrowUpIcon, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this));\n}\n\n_s(LanguageSwitcher, \"egM2l74zW6hUqoOF6ssYGirDYHU=\", false, function () {\n  return [useTranslation, useTransition, useClickAway];\n});\n\n_c = LanguageSwitcher;\nexport default _c2 = /*#__PURE__*/memo(LanguageSwitcher);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LanguageSwitcher\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/LanguageSwitcher.js"],"names":["ENTER_IN","ENTER_OUT","locales","ArrowUpIcon","classnames","memo","useRef","useCallback","useTranslation","useTransition","animated","useClickAway","LanguageSwitcher","showLanguageSwitcher","setShowLanguageSwitcher","t","i18n","currentLanguage","Object","keys","includes","language","options","fallbackLng","transitions","from","enter","leave","config","mass","tension","friction","languageSwitcherRef","e","target","className","switchLanguage","languageKey","changeLanguage","style","item","map","bind"],"mappings":"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","sourcesContent":["import {ENTER_IN, ENTER_OUT} from '../animations';\nimport locales from '../i18n/locales.json';\n\nimport {ArrowUpIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport {memo, useRef, useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useTransition, animated} from 'react-spring';\nimport {useClickAway} from 'react-use';\n\nfunction LanguageSwitcher({showLanguageSwitcher, setShowLanguageSwitcher}) {\n  const {t, i18n} = useTranslation();\n\n  const currentLanguage = Object.keys(locales).includes(i18n?.language)\n    ? i18n?.language\n    : i18n?.options?.fallbackLng[0];\n\n  const transitions = useTransition(showLanguageSwitcher, {\n    from: ENTER_OUT,\n    enter: ENTER_IN,\n    leave: ENTER_OUT,\n    config: {\n      mass: 1,\n      tension: 100,\n      friction: 15,\n    },\n  });\n\n  const languageSwitcherRef = useRef();\n  useClickAway(languageSwitcherRef, (e) => {\n    if (e.target.className !== 'navbar-left') {\n      setShowLanguageSwitcher(false);\n    }\n  });\n\n  const switchLanguage = useCallback(\n    (languageKey) => {\n      if (i18n) i18n.changeLanguage(languageKey);\n    },\n    [i18n]\n  );\n\n  return transitions(\n    (style, item) =>\n      item && (\n        <animated.div\n          className=\"LanguageSwitcher\"\n          ref={languageSwitcherRef}\n          {...{style}}\n        >\n          <h3>{t('We speak the following languages')}</h3>\n\n          <div className=\"languages\">\n            {Object.keys(locales).map((languageKey) => (\n              <div\n                key={languageKey}\n                className={classnames('language', {\n                  'is-highlighted': currentLanguage === languageKey,\n                })}\n                onClick={switchLanguage.bind(this, languageKey)}\n              >\n                <span>{locales[languageKey]}</span>\n              </div>\n            ))}\n          </div>\n\n          <div\n            className=\"close-button\"\n            onClick={setShowLanguageSwitcher.bind(this, false)}\n          >\n            <ArrowUpIcon size={16} />\n          </div>\n        </animated.div>\n      )\n  );\n}\n\nexport default memo(LanguageSwitcher);\n"]},"metadata":{},"sourceType":"module"}