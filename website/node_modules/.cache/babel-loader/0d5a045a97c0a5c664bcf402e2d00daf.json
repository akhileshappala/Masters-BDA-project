{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/TimeseriesExplorer.js\",\n    _s = $RefreshSig$();\n\nimport TimeseriesLoader from './loaders/Timeseries';\nimport { STATE_NAMES, STATISTIC_CONFIGS, TIMESERIES_CHART_TYPES, TIMESERIES_LOOKBACK_DAYS, TIMESERIES_STATISTICS } from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport { getIndiaDateYesterdayISO, parseIndiaDate, retry } from '../utils/commonFunctions';\nimport { PinIcon, ReplyIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport { min } from 'd3-array';\nimport { formatISO, subDays } from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport { memo, useCallback, useEffect, useMemo, useRef, useState, lazy, Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocalStorage, useWindowSize } from 'react-use';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeseries = /*#__PURE__*/lazy(_c = () => retry(() => import('./Timeseries')));\n_c2 = Timeseries;\nconst TimeseriesBrush = /*#__PURE__*/lazy(_c3 = () => retry(() => import('./TimeseriesBrush')));\n_c4 = TimeseriesBrush;\n\nfunction TimeseriesExplorer({\n  stateCode,\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  expandTable = false,\n  hideVaccinated = false,\n  noRegionHighlightedDistrictData\n}) {\n  _s();\n\n  var _timeseries$stateCode;\n\n  const {\n    t\n  } = useTranslation();\n  const [lookback, setLookback] = useLocalStorage('timeseriesLookbackDays', 90);\n  const [chartType, setChartType] = useLocalStorage('chartType', 'delta');\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', false);\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\n  const [isMovingAverage, setIsMovingAverage] = useLocalStorage('isMovingAverage', false);\n  const stateCodeDateRange = Object.keys((timeseries === null || timeseries === void 0 ? void 0 : (_timeseries$stateCode = timeseries[stateCode]) === null || _timeseries$stateCode === void 0 ? void 0 : _timeseries$stateCode.dates) || {});\n  const beginningDate = stateCodeDateRange[0] || timelineDate || getIndiaDateYesterdayISO();\n  const endDate = min([stateCodeDateRange[stateCodeDateRange.length - 1], timelineDate || getIndiaDateYesterdayISO()]);\n  const [brushSelectionEnd, setBrushSelectionEnd] = useState(endDate);\n  useEffect(() => {\n    setBrushSelectionEnd(endDate);\n  }, [endDate]);\n  const brushSelectionStart = lookback !== null ? formatISO(subDays(parseIndiaDate(brushSelectionEnd), lookback), {\n    representation: 'date'\n  }) : beginningDate;\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {\n    once: true\n  });\n  const {\n    width\n  } = useWindowSize();\n  const selectedRegion = useMemo(() => {\n    var _timeseries$regionHig;\n\n    if (timeseries === null || timeseries === void 0 ? void 0 : (_timeseries$regionHig = timeseries[regionHighlighted.stateCode]) === null || _timeseries$regionHig === void 0 ? void 0 : _timeseries$regionHig.districts) {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName\n      };\n    } else {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: null\n      };\n    }\n  }, [timeseries, regionHighlighted.stateCode, regionHighlighted.districtName]);\n  const selectedTimeseries = useMemo(() => {\n    if (selectedRegion.districtName) {\n      var _timeseries$selectedR, _timeseries$selectedR2, _timeseries$selectedR3;\n\n      return timeseries === null || timeseries === void 0 ? void 0 : (_timeseries$selectedR = timeseries[selectedRegion.stateCode]) === null || _timeseries$selectedR === void 0 ? void 0 : (_timeseries$selectedR2 = _timeseries$selectedR.districts) === null || _timeseries$selectedR2 === void 0 ? void 0 : (_timeseries$selectedR3 = _timeseries$selectedR2[selectedRegion.districtName]) === null || _timeseries$selectedR3 === void 0 ? void 0 : _timeseries$selectedR3.dates;\n    } else {\n      var _timeseries$selectedR4;\n\n      return timeseries === null || timeseries === void 0 ? void 0 : (_timeseries$selectedR4 = timeseries[selectedRegion.stateCode]) === null || _timeseries$selectedR4 === void 0 ? void 0 : _timeseries$selectedR4.dates;\n    }\n  }, [timeseries, selectedRegion.stateCode, selectedRegion.districtName]);\n  const regions = useMemo(() => {\n    const states = Object.keys(timeseries || {}).filter(code => code !== stateCode).sort((code1, code2) => STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])).map(code => {\n      return {\n        stateCode: code,\n        districtName: null\n      };\n    });\n    const districts = Object.keys(timeseries || {}).reduce((acc1, code) => {\n      var _timeseries$code;\n\n      return [...acc1, ...Object.keys((timeseries === null || timeseries === void 0 ? void 0 : (_timeseries$code = timeseries[code]) === null || _timeseries$code === void 0 ? void 0 : _timeseries$code.districts) || {}).reduce((acc2, districtName) => {\n        return [...acc2, {\n          stateCode: code,\n          districtName: districtName\n        }];\n      }, [])];\n    }, []);\n    return [{\n      stateCode: stateCode,\n      districtName: null\n    }, ...states, ...districts];\n  }, [timeseries, stateCode]);\n  const dropdownRegions = useMemo(() => {\n    if (regions.find(region => region.stateCode === regionHighlighted.stateCode && region.districtName === regionHighlighted.districtName)) return regions;\n    return [...regions, {\n      stateCode: regionHighlighted.stateCode,\n      districtName: regionHighlighted.districtName\n    }];\n  }, [regionHighlighted.stateCode, regionHighlighted.districtName, regions]);\n  const dates = useMemo(() => Object.keys(selectedTimeseries || {}).filter(date => date <= endDate), [selectedTimeseries, endDate]);\n  const brushSelectionDates = useMemo(() => dates.filter(date => brushSelectionStart <= date && date <= brushSelectionEnd), [dates, brushSelectionStart, brushSelectionEnd]);\n  const handleChange = useCallback(({\n    target\n  }) => {\n    setRegionHighlighted(JSON.parse(target.value));\n  }, [setRegionHighlighted]);\n  const resetDropdown = useCallback(() => {\n    setRegionHighlighted({\n      stateCode: stateCode,\n      districtName: null\n    });\n  }, [stateCode, setRegionHighlighted]);\n  const statistics = useMemo(() => TIMESERIES_STATISTICS.filter(statistic => {\n    var _STATISTIC_CONFIGS$st;\n\n    return (!(((_STATISTIC_CONFIGS$st = STATISTIC_CONFIGS[statistic]) === null || _STATISTIC_CONFIGS$st === void 0 ? void 0 : _STATISTIC_CONFIGS$st.category) === 'vaccinated') || !hideVaccinated) && ( // (chartType === 'total' || statistic !== 'active') &&\n    chartType === 'delta' || statistic !== 'tpr');\n  }), [chartType, hideVaccinated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames('TimeseriesExplorer fadeInUp', {\n      stickied: anchor === 'timeseries'\n    }, {\n      expanded: expandTable\n    }),\n    style: {\n      display: anchor && anchor !== 'timeseries' && (!expandTable || width < 769) ? 'none' : ''\n    },\n    ref: explorerElement,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeseries-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('anchor', 'fadeInUp', {\n          stickied: anchor === 'timeseries'\n        }),\n        style: {\n          display: expandTable && width >= 769 ? 'none' : ''\n        },\n        onClick: setAnchor && setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries'),\n        children: /*#__PURE__*/_jsxDEV(PinIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: t('Spread Trends')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: Object.entries(TIMESERIES_CHART_TYPES).map(([ctype, value], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tab ${chartType === ctype ? 'focused' : ''}`,\n          onClick: setChartType.bind(this, ctype),\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: t(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)\n        }, ctype, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeseries-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scale-modes\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"main\",\n            children: `${t('Scale Modes')}:`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeseries-mode\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"timeseries-mode\",\n              children: t('Uniform')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"timeseries-mode\",\n              type: \"checkbox\",\n              className: \"switch\",\n              checked: isUniform,\n              \"aria-label\": t('Checked by default to scale uniformly.'),\n              onChange: setIsUniform.bind(this, !isUniform)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `timeseries-mode ${chartType !== 'total' ? 'disabled' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"timeseries-logmode\",\n              children: t('Logarithmic')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"timeseries-logmode\",\n              type: \"checkbox\",\n              checked: chartType === 'total' && isLog,\n              className: \"switch\",\n              disabled: chartType !== 'total',\n              onChange: setIsLog.bind(this, !isLog)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `timeseries-mode ${chartType === 'total' ? 'disabled' : ''} moving-average`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"timeseries-moving-average\",\n            children: t('7 day Moving Average')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"timeseries-moving-average\",\n            type: \"checkbox\",\n            checked: chartType === 'delta' && isMovingAverage,\n            className: \"switch\",\n            disabled: chartType !== 'delta',\n            onChange: setIsMovingAverage.bind(this, !isMovingAverage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), dropdownRegions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: JSON.stringify(selectedRegion),\n          onChange: handleChange,\n          children: dropdownRegions.filter(region => STATE_NAMES[region.stateCode] !== region.districtName).map(region => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: JSON.stringify(region),\n              children: region.districtName ? t(region.districtName) : t(STATE_NAMES[region.stateCode])\n            }, `${region.stateCode}-${region.districtName}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-icon\",\n        onClick: resetDropdown,\n        children: /*#__PURE__*/_jsxDEV(ReplyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(TimeseriesLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 29\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Timeseries, {\n        timeseries: selectedTimeseries,\n        regionHighlighted: selectedRegion,\n        dates: brushSelectionDates,\n        statistics,\n        endDate,\n        chartType,\n        isUniform,\n        isLog,\n        isMovingAverage,\n        noRegionHighlightedDistrictData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TimeseriesBrush, {\n        timeseries: selectedTimeseries,\n        regionHighlighted: selectedRegion,\n        currentBrushSelection: [brushSelectionStart, brushSelectionEnd],\n        animationIndex: statistics.length,\n        dates,\n        endDate,\n        lookback,\n        setBrushSelectionEnd,\n        setLookback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this), !isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '50rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pills fadeInUp\",\n      style: {\n        animationDelay: `${(1 + statistics.length) * 250}ms`\n      },\n      children: TIMESERIES_LOOKBACK_DAYS.map(numDays => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classnames({\n          selected: numDays === lookback\n        }),\n        onClick: setLookback.bind(this, numDays),\n        children: numDays !== null ? `${numDays} ${t('days')}` : t('Beginning')\n      }, numDays, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TimeseriesExplorer, \"9Mpdk06CCDp3KFs7iK1kXLSyVcQ=\", false, function () {\n  return [useTranslation, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useIsVisible, useWindowSize];\n});\n\n_c5 = TimeseriesExplorer;\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (!equal(currProps.regionHighlighted.stateCode, prevProps.regionHighlighted.stateCode)) {\n    return false;\n  } else if (!equal(currProps.regionHighlighted.districtName, prevProps.regionHighlighted.districtName)) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  } else if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  } else if (!equal(currProps.expandTable, prevProps.expandTable)) {\n    return false;\n  } else if (!equal(currProps.hideVaccinated, prevProps.hideVaccinated)) {\n    return false;\n  } else if (!equal(currProps.noRegionHighlightedDistrictData, prevProps.noRegionHighlightedDistrictData)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default _c6 = /*#__PURE__*/memo(TimeseriesExplorer, isEqual);\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Timeseries$lazy\");\n$RefreshReg$(_c2, \"Timeseries\");\n$RefreshReg$(_c3, \"TimeseriesBrush$lazy\");\n$RefreshReg$(_c4, \"TimeseriesBrush\");\n$RefreshReg$(_c5, \"TimeseriesExplorer\");\n$RefreshReg$(_c6, \"%default%\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/TimeseriesExplorer.js"],"names":["TimeseriesLoader","STATE_NAMES","STATISTIC_CONFIGS","TIMESERIES_CHART_TYPES","TIMESERIES_LOOKBACK_DAYS","TIMESERIES_STATISTICS","useIsVisible","getIndiaDateYesterdayISO","parseIndiaDate","retry","PinIcon","ReplyIcon","classnames","min","formatISO","subDays","equal","memo","useCallback","useEffect","useMemo","useRef","useState","lazy","Suspense","useTranslation","useLocalStorage","useWindowSize","Timeseries","TimeseriesBrush","TimeseriesExplorer","stateCode","timeseries","date","timelineDate","regionHighlighted","setRegionHighlighted","anchor","setAnchor","expandTable","hideVaccinated","noRegionHighlightedDistrictData","t","lookback","setLookback","chartType","setChartType","isUniform","setIsUniform","isLog","setIsLog","isMovingAverage","setIsMovingAverage","stateCodeDateRange","Object","keys","dates","beginningDate","endDate","length","brushSelectionEnd","setBrushSelectionEnd","brushSelectionStart","representation","explorerElement","isVisible","once","width","selectedRegion","districts","districtName","selectedTimeseries","regions","states","filter","code","sort","code1","code2","localeCompare","map","reduce","acc1","acc2","dropdownRegions","find","region","brushSelectionDates","handleChange","target","JSON","parse","value","resetDropdown","statistics","statistic","category","stickied","expanded","display","bind","entries","ctype","index","stringify","height","animationDelay","numDays","selected","isEqual","prevProps","currProps","forceRender"],"mappings":"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","sourcesContent":["import TimeseriesLoader from './loaders/Timeseries';\n\nimport {\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  TIMESERIES_CHART_TYPES,\n  TIMESERIES_LOOKBACK_DAYS,\n  TIMESERIES_STATISTICS,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {\n  getIndiaDateYesterdayISO,\n  parseIndiaDate,\n  retry,\n} from '../utils/commonFunctions';\n\nimport {PinIcon, ReplyIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport {min} from 'd3-array';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  lazy,\n  Suspense,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage, useWindowSize} from 'react-use';\n\nconst Timeseries = lazy(() => retry(() => import('./Timeseries')));\nconst TimeseriesBrush = lazy(() => retry(() => import('./TimeseriesBrush')));\n\nfunction TimeseriesExplorer({\n  stateCode,\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  expandTable = false,\n  hideVaccinated = false,\n  noRegionHighlightedDistrictData,\n}) {\n  const {t} = useTranslation();\n  const [lookback, setLookback] = useLocalStorage('timeseriesLookbackDays', 90);\n  const [chartType, setChartType] = useLocalStorage('chartType', 'delta');\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', false);\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\n  const [isMovingAverage, setIsMovingAverage] = useLocalStorage(\n    'isMovingAverage',\n    false\n  );\n\n  const stateCodeDateRange = Object.keys(timeseries?.[stateCode]?.dates || {});\n  const beginningDate =\n    stateCodeDateRange[0] || timelineDate || getIndiaDateYesterdayISO();\n  const endDate = min([\n    stateCodeDateRange[stateCodeDateRange.length - 1],\n    timelineDate || getIndiaDateYesterdayISO(),\n  ]);\n\n  const [brushSelectionEnd, setBrushSelectionEnd] = useState(endDate);\n  useEffect(() => {\n    setBrushSelectionEnd(endDate);\n  }, [endDate]);\n\n  const brushSelectionStart =\n    lookback !== null\n      ? formatISO(subDays(parseIndiaDate(brushSelectionEnd), lookback), {\n          representation: 'date',\n        })\n      : beginningDate;\n\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {once: true});\n  const {width} = useWindowSize();\n\n  const selectedRegion = useMemo(() => {\n    if (timeseries?.[regionHighlighted.stateCode]?.districts) {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      };\n    } else {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: null,\n      };\n    }\n  }, [timeseries, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const selectedTimeseries = useMemo(() => {\n    if (selectedRegion.districtName) {\n      return timeseries?.[selectedRegion.stateCode]?.districts?.[\n        selectedRegion.districtName\n      ]?.dates;\n    } else {\n      return timeseries?.[selectedRegion.stateCode]?.dates;\n    }\n  }, [timeseries, selectedRegion.stateCode, selectedRegion.districtName]);\n\n  const regions = useMemo(() => {\n    const states = Object.keys(timeseries || {})\n      .filter((code) => code !== stateCode)\n      .sort((code1, code2) =>\n        STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\n      )\n      .map((code) => {\n        return {\n          stateCode: code,\n          districtName: null,\n        };\n      });\n    const districts = Object.keys(timeseries || {}).reduce((acc1, code) => {\n      return [\n        ...acc1,\n        ...Object.keys(timeseries?.[code]?.districts || {}).reduce(\n          (acc2, districtName) => {\n            return [\n              ...acc2,\n              {\n                stateCode: code,\n                districtName: districtName,\n              },\n            ];\n          },\n          []\n        ),\n      ];\n    }, []);\n\n    return [\n      {\n        stateCode: stateCode,\n        districtName: null,\n      },\n      ...states,\n      ...districts,\n    ];\n  }, [timeseries, stateCode]);\n\n  const dropdownRegions = useMemo(() => {\n    if (\n      regions.find(\n        (region) =>\n          region.stateCode === regionHighlighted.stateCode &&\n          region.districtName === regionHighlighted.districtName\n      )\n    )\n      return regions;\n    return [\n      ...regions,\n      {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      },\n    ];\n  }, [regionHighlighted.stateCode, regionHighlighted.districtName, regions]);\n\n  const dates = useMemo(\n    () =>\n      Object.keys(selectedTimeseries || {}).filter((date) => date <= endDate),\n    [selectedTimeseries, endDate]\n  );\n\n  const brushSelectionDates = useMemo(\n    () =>\n      dates.filter(\n        (date) => brushSelectionStart <= date && date <= brushSelectionEnd\n      ),\n    [dates, brushSelectionStart, brushSelectionEnd]\n  );\n\n  const handleChange = useCallback(\n    ({target}) => {\n      setRegionHighlighted(JSON.parse(target.value));\n    },\n    [setRegionHighlighted]\n  );\n\n  const resetDropdown = useCallback(() => {\n    setRegionHighlighted({\n      stateCode: stateCode,\n      districtName: null,\n    });\n  }, [stateCode, setRegionHighlighted]);\n\n  const statistics = useMemo(\n    () =>\n      TIMESERIES_STATISTICS.filter(\n        (statistic) =>\n          (!(STATISTIC_CONFIGS[statistic]?.category === 'vaccinated') ||\n            !hideVaccinated) &&\n          // (chartType === 'total' || statistic !== 'active') &&\n          (chartType === 'delta' || statistic !== 'tpr')\n      ),\n    [chartType, hideVaccinated]\n  );\n\n  return (\n    <div\n      className={classnames(\n        'TimeseriesExplorer fadeInUp',\n        {\n          stickied: anchor === 'timeseries',\n        },\n        {expanded: expandTable}\n      )}\n      style={{\n        display:\n          anchor && anchor !== 'timeseries' && (!expandTable || width < 769)\n            ? 'none'\n            : '',\n      }}\n      ref={explorerElement}\n    >\n      <div className=\"timeseries-header\">\n        <div\n          className={classnames('anchor', 'fadeInUp', {\n            stickied: anchor === 'timeseries',\n          })}\n          style={{\n            display: expandTable && width >= 769 ? 'none' : '',\n          }}\n          onClick={\n            setAnchor &&\n            setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries')\n          }\n        >\n          <PinIcon />\n        </div>\n\n        <h1>{t('Spread Trends')}</h1>\n        <div className=\"tabs\">\n          {Object.entries(TIMESERIES_CHART_TYPES).map(\n            ([ctype, value], index) => (\n              <div\n                className={`tab ${chartType === ctype ? 'focused' : ''}`}\n                key={ctype}\n                onClick={setChartType.bind(this, ctype)}\n              >\n                <h4>{t(value)}</h4>\n              </div>\n            )\n          )}\n        </div>\n\n        <div className=\"timeseries-options\">\n          <div className=\"scale-modes\">\n            <label className=\"main\">{`${t('Scale Modes')}:`}</label>\n            <div className=\"timeseries-mode\">\n              <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\n              <input\n                id=\"timeseries-mode\"\n                type=\"checkbox\"\n                className=\"switch\"\n                checked={isUniform}\n                aria-label={t('Checked by default to scale uniformly.')}\n                onChange={setIsUniform.bind(this, !isUniform)}\n              />\n            </div>\n            <div\n              className={`timeseries-mode ${\n                chartType !== 'total' ? 'disabled' : ''\n              }`}\n            >\n              <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\n              <input\n                id=\"timeseries-logmode\"\n                type=\"checkbox\"\n                checked={chartType === 'total' && isLog}\n                className=\"switch\"\n                disabled={chartType !== 'total'}\n                onChange={setIsLog.bind(this, !isLog)}\n              />\n            </div>\n          </div>\n\n          <div\n            className={`timeseries-mode ${\n              chartType === 'total' ? 'disabled' : ''\n            } moving-average`}\n          >\n            <label htmlFor=\"timeseries-moving-average\">\n              {t('7 day Moving Average')}\n            </label>\n            <input\n              id=\"timeseries-moving-average\"\n              type=\"checkbox\"\n              checked={chartType === 'delta' && isMovingAverage}\n              className=\"switch\"\n              disabled={chartType !== 'delta'}\n              onChange={setIsMovingAverage.bind(this, !isMovingAverage)}\n            />\n          </div>\n        </div>\n      </div>\n      {dropdownRegions && (\n        <div className=\"state-selection\">\n          <div className=\"dropdown\">\n            <select\n              value={JSON.stringify(selectedRegion)}\n              onChange={handleChange}\n            >\n              {dropdownRegions\n                .filter(\n                  (region) =>\n                    STATE_NAMES[region.stateCode] !== region.districtName\n                )\n                .map((region) => {\n                  return (\n                    <option\n                      value={JSON.stringify(region)}\n                      key={`${region.stateCode}-${region.districtName}`}\n                    >\n                      {region.districtName\n                        ? t(region.districtName)\n                        : t(STATE_NAMES[region.stateCode])}\n                    </option>\n                  );\n                })}\n            </select>\n          </div>\n          <div className=\"reset-icon\" onClick={resetDropdown}>\n            <ReplyIcon />\n          </div>\n        </div>\n      )}\n      {isVisible && (\n        <Suspense fallback={<TimeseriesLoader />}>\n          <Timeseries\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            dates={brushSelectionDates}\n            {...{\n              statistics,\n              endDate,\n              chartType,\n              isUniform,\n              isLog,\n              isMovingAverage,\n              noRegionHighlightedDistrictData,\n            }}\n          />\n          <TimeseriesBrush\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            currentBrushSelection={[brushSelectionStart, brushSelectionEnd]}\n            animationIndex={statistics.length}\n            {...{dates, endDate, lookback, setBrushSelectionEnd, setLookback}}\n          />\n        </Suspense>\n      )}\n      {!isVisible && <div style={{height: '50rem'}} />}\n      <div\n        className=\"pills fadeInUp\"\n        style={{animationDelay: `${(1 + statistics.length) * 250}ms`}}\n      >\n        {TIMESERIES_LOOKBACK_DAYS.map((numDays) => (\n          <button\n            key={numDays}\n            type=\"button\"\n            className={classnames({\n              selected: numDays === lookback,\n            })}\n            onClick={setLookback.bind(this, numDays)}\n          >\n            {numDays !== null ? `${numDays} ${t('days')}` : t('Beginning')}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.districtName,\n      prevProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  } else if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  } else if (!equal(currProps.expandTable, prevProps.expandTable)) {\n    return false;\n  } else if (!equal(currProps.hideVaccinated, prevProps.hideVaccinated)) {\n    return false;\n  } else if (\n    !equal(\n      currProps.noRegionHighlightedDistrictData,\n      prevProps.noRegionHighlightedDistrictData\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(TimeseriesExplorer, isEqual);\n"]},"metadata":{},"sourceType":"module"}