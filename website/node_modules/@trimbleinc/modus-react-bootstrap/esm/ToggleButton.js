import classNames from 'classnames';
import React, { useCallback, useState } from 'react';
import Button from './Button';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const noop = () => undefined;
const ToggleButton = /*#__PURE__*/React.forwardRef(({
  children,
  name,
  className,
  checked,
  type,
  onChange,
  value,
  disabled,
  inputRef,
  ...props
}, ref) => {
  const [focused, setFocused] = useState(false);
  const handleFocus = useCallback(e => {
    if (e.target.tagName === 'INPUT') setFocused(true);
  }, []);
  const handleBlur = useCallback(e => {
    if (e.target.tagName === 'INPUT') setFocused(false);
  }, []);
  return /*#__PURE__*/_jsxs(Button, {
    ...props,
    ref: ref,
    className: classNames(className, focused && 'focus', disabled && 'disabled'),
    type: undefined,
    active: !!checked,
    as: "label",
    children: [/*#__PURE__*/_jsx("input", {
      name: name,
      type: type,
      value: value,
      ref: inputRef,
      autoComplete: "off",
      checked: !!checked,
      disabled: !!disabled,
      onFocus: handleFocus,
      onBlur: handleBlur,
      onChange: onChange || noop
    }), children]
  });
});
ToggleButton.displayName = 'ToggleButton';
export default ToggleButton;