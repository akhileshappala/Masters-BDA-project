{"ast":null,"code":"import _defineProperty from\"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";export var API_DOMAIN='https://data.covid19india.org';export var DATA_API_ROOT=\"\".concat(API_DOMAIN,\"/v4/min\");export var API_REFRESH_INTERVAL=100000;// seconds\nexport var LOCALE_SHORTHANDS={english:'en-US'};export var STATISTIC_CONFIGS={confirmed:{displayName:'confirmed',color:'#ff073a',format:'long',showDelta:true,hasPrimary:true},active:{displayName:'active',color:'#007bff',format:'long',hasPrimary:true},recovered:{displayName:'recovered',color:'#28a745',format:'long',showDelta:true,hasPrimary:true},deceased:{displayName:'deceased',color:'#6c757d',format:'long',showDelta:true,hasPrimary:true},other:{displayName:'other',format:'long',color:'#fd7e14',showDelta:true,tableConfig:{notes:'Migrated cases or non-COVID deaths'},hasPrimary:true},tested:{displayName:'tested',color:'#4b1eaa',format:'short',showDelta:true,hideZero:true,category:'tested'},recoveryRatio:{displayName:'recovery ratio',format:'%',nonLinear:true,tableConfig:{hide:true},hasPrimary:true},activeRatio:{displayName:'active ratio',format:'%',nonLinear:true,tableConfig:{hide:true},hasPrimary:true},population:{displayName:'population',format:'short',color:'#b6854d',hideZero:true,mapConfig:{spike:true}}};export var PRIMARY_STATISTICS=['confirmed','active','recovered','deceased'];export var LEVEL_STATISTICS=[].concat(PRIMARY_STATISTICS);export var TABLE_STATISTICS=[].concat(PRIMARY_STATISTICS,['tested','vaccinated']);export var TABLE_STATISTICS_EXPANDED=Object.keys(STATISTIC_CONFIGS).filter(function(statistic){var _STATISTIC_CONFIGS$st,_STATISTIC_CONFIGS$st2;return!((_STATISTIC_CONFIGS$st=STATISTIC_CONFIGS[statistic])===null||_STATISTIC_CONFIGS$st===void 0?void 0:(_STATISTIC_CONFIGS$st2=_STATISTIC_CONFIGS$st.tableConfig)===null||_STATISTIC_CONFIGS$st2===void 0?void 0:_STATISTIC_CONFIGS$st2.hide);});export var MAP_STATISTICS=[].concat(PRIMARY_STATISTICS);export var TIMESERIES_STATISTICS=[].concat(PRIMARY_STATISTICS,['tested','vaccinated','tpr']);export var BRUSH_STATISTICS=['confirmed'];export var UPDATES_COUNT=5;export var DISTRICT_TABLE_COUNT=40;export var D3_TRANSITION_DURATION=300;export var MINIGRAPH_LOOKBACK_DAYS=21;export var TESTED_EXPIRING_DAYS=7;export var UNASSIGNED_STATE_CODE='UN';export var UNKNOWN_DISTRICT_KEY='Unknown';export var DISTRICT_START_DATE='2020-04-26';export var DISTRICT_TEST_END_DATE='2021-02-02';export var ISO_DATE_REGEX=/^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/g;export var INDIA_ISO_SUFFIX='T00:00:00+05:30';export var SPRING_CONFIG_NUMBERS={clamp:true,precision:1};export var TIMESERIES_CHART_TYPES={total:'Cumulative',delta:'Daily'};export var TIMESERIES_LOOKBACK_DAYS=[null,90,30];export var MAP_VIZS={CHOROPLETH:0,BUBBLE:1,SPIKE:2};export var MAP_VIEWS={STATES:0,DISTRICTS:1};export var MAP_TYPES={COUNTRY:0,STATE:1};export var MAPS_DIR=process.env.NODE_ENV==='production'?'/mini_maps':'/projected_maps';export var MAP_META={AP:{geoDataFile:\"\".concat(MAPS_DIR,\"/andhrapradesh.json\"),mapType:MAP_TYPES.STATE},AR:{geoDataFile:\"\".concat(MAPS_DIR,\"/arunachalpradesh.json\"),mapType:MAP_TYPES.STATE},AS:{geoDataFile:\"\".concat(MAPS_DIR,\"/assam.json\"),mapType:MAP_TYPES.STATE},BR:{geoDataFile:\"\".concat(MAPS_DIR,\"/bihar.json\"),mapType:MAP_TYPES.STATE},CT:{geoDataFile:\"\".concat(MAPS_DIR,\"/chhattisgarh.json\"),mapType:MAP_TYPES.STATE},GA:{geoDataFile:\"\".concat(MAPS_DIR,\"/goa.json\"),mapType:MAP_TYPES.STATE},GJ:{geoDataFile:\"\".concat(MAPS_DIR,\"/gujarat.json\"),mapType:MAP_TYPES.STATE},HR:{geoDataFile:\"\".concat(MAPS_DIR,\"/haryana.json\"),mapType:MAP_TYPES.STATE},HP:{geoDataFile:\"\".concat(MAPS_DIR,\"/himachalpradesh.json\"),mapType:MAP_TYPES.STATE},JK:{geoDataFile:\"\".concat(MAPS_DIR,\"/jammukashmir.json\"),mapType:MAP_TYPES.STATE},JH:{geoDataFile:\"\".concat(MAPS_DIR,\"/jharkhand.json\"),mapType:MAP_TYPES.STATE},KA:{geoDataFile:\"\".concat(MAPS_DIR,\"/karnataka.json\"),mapType:MAP_TYPES.STATE},KL:{geoDataFile:\"\".concat(MAPS_DIR,\"/kerala.json\"),mapType:MAP_TYPES.STATE},MP:{geoDataFile:\"\".concat(MAPS_DIR,\"/madhyapradesh.json\"),mapType:MAP_TYPES.STATE},MH:{geoDataFile:\"\".concat(MAPS_DIR,\"/maharashtra.json\"),mapType:MAP_TYPES.STATE},MN:{geoDataFile:\"\".concat(MAPS_DIR,\"/manipur.json\"),mapType:MAP_TYPES.STATE},ML:{geoDataFile:\"\".concat(MAPS_DIR,\"/meghalaya.json\"),mapType:MAP_TYPES.STATE},MZ:{geoDataFile:\"\".concat(MAPS_DIR,\"/mizoram.json\"),mapType:MAP_TYPES.STATE},NL:{geoDataFile:\"\".concat(MAPS_DIR,\"/nagaland.json\"),mapType:MAP_TYPES.STATE},OR:{geoDataFile:\"\".concat(MAPS_DIR,\"/odisha.json\"),mapType:MAP_TYPES.STATE},PB:{geoDataFile:\"\".concat(MAPS_DIR,\"/punjab.json\"),mapType:MAP_TYPES.STATE},RJ:{geoDataFile:\"\".concat(MAPS_DIR,\"/rajasthan.json\"),mapType:MAP_TYPES.STATE},SK:{geoDataFile:\"\".concat(MAPS_DIR,\"/sikkim.json\"),mapType:MAP_TYPES.STATE},TN:{geoDataFile:\"\".concat(MAPS_DIR,\"/tamilnadu.json\"),mapType:MAP_TYPES.STATE},TG:{geoDataFile:\"\".concat(MAPS_DIR,\"/telangana.json\"),mapType:MAP_TYPES.STATE},TR:{geoDataFile:\"\".concat(MAPS_DIR,\"/tripura.json\"),mapType:MAP_TYPES.STATE},UT:{geoDataFile:\"\".concat(MAPS_DIR,\"/uttarakhand.json\"),mapType:MAP_TYPES.STATE},UP:{geoDataFile:\"\".concat(MAPS_DIR,\"/uttarpradesh.json\"),mapType:MAP_TYPES.STATE},WB:{geoDataFile:\"\".concat(MAPS_DIR,\"/westbengal.json\"),mapType:MAP_TYPES.STATE},AN:{geoDataFile:\"\".concat(MAPS_DIR,\"/andamannicobarislands.json\"),mapType:MAP_TYPES.STATE},CH:{geoDataFile:\"\".concat(MAPS_DIR,\"/chandigarh.json\"),mapType:MAP_TYPES.STATE},DN:{geoDataFile:\"\".concat(MAPS_DIR,\"/dnh-and-dd.json\"),mapType:MAP_TYPES.STATE},DL:{geoDataFile:\"\".concat(MAPS_DIR,\"/delhi.json\"),mapType:MAP_TYPES.STATE},LA:{geoDataFile:\"\".concat(MAPS_DIR,\"/ladakh.json\"),mapType:MAP_TYPES.STATE},LD:{geoDataFile:\"\".concat(MAPS_DIR,\"/lakshadweep.json\"),mapType:MAP_TYPES.STATE},PY:{geoDataFile:\"\".concat(MAPS_DIR,\"/puducherry.json\"),mapType:MAP_TYPES.STATE},TT:{geoDataFile:\"\".concat(MAPS_DIR,\"/india.json\"),mapType:MAP_TYPES.COUNTRY}};export var MAP_DIMENSIONS=[432,488];export var MAP_LEGEND_HEIGHT=50;export var STATE_NAMES=_defineProperty({AP:'Andhra Pradesh',AR:'Arunachal Pradesh',AS:'Assam',BR:'Bihar',CT:'Chhattisgarh',GA:'Goa',GJ:'Gujarat',HR:'Haryana',HP:'Himachal Pradesh',JH:'Jharkhand',KA:'Karnataka',KL:'Kerala',MP:'Madhya Pradesh',MH:'Maharashtra',MN:'Manipur',ML:'Meghalaya',MZ:'Mizoram',NL:'Nagaland',OR:'Odisha',PB:'Punjab',RJ:'Rajasthan',SK:'Sikkim',TN:'Tamil Nadu',TG:'Telangana',TR:'Tripura',UT:'Uttarakhand',UP:'Uttar Pradesh',WB:'West Bengal',AN:'Andaman and Nicobar Islands',CH:'Chandigarh',DN:'Dadra and Nagar Haveli and Daman and Diu',DL:'Delhi',JK:'Jammu and Kashmir',LA:'Ladakh',LD:'Lakshadweep',PY:'Puducherry',TT:'India'},UNASSIGNED_STATE_CODE,'Unassigned');var stateCodes=[];var stateCodesMap={};Object.keys(STATE_NAMES).map(function(key,index){stateCodesMap[STATE_NAMES[key]]=key;stateCodes.push({code:key,name:STATE_NAMES[key]});return null;});export var STATE_CODES=stateCodesMap;export var STATE_CODES_ARRAY=stateCodes;","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/constants.js"],"names":["API_DOMAIN","DATA_API_ROOT","API_REFRESH_INTERVAL","LOCALE_SHORTHANDS","english","STATISTIC_CONFIGS","confirmed","displayName","color","format","showDelta","hasPrimary","active","recovered","deceased","other","tableConfig","notes","tested","hideZero","category","recoveryRatio","nonLinear","hide","activeRatio","population","mapConfig","spike","PRIMARY_STATISTICS","LEVEL_STATISTICS","TABLE_STATISTICS","TABLE_STATISTICS_EXPANDED","Object","keys","filter","statistic","MAP_STATISTICS","TIMESERIES_STATISTICS","BRUSH_STATISTICS","UPDATES_COUNT","DISTRICT_TABLE_COUNT","D3_TRANSITION_DURATION","MINIGRAPH_LOOKBACK_DAYS","TESTED_EXPIRING_DAYS","UNASSIGNED_STATE_CODE","UNKNOWN_DISTRICT_KEY","DISTRICT_START_DATE","DISTRICT_TEST_END_DATE","ISO_DATE_REGEX","INDIA_ISO_SUFFIX","SPRING_CONFIG_NUMBERS","clamp","precision","TIMESERIES_CHART_TYPES","total","delta","TIMESERIES_LOOKBACK_DAYS","MAP_VIZS","CHOROPLETH","BUBBLE","SPIKE","MAP_VIEWS","STATES","DISTRICTS","MAP_TYPES","COUNTRY","STATE","MAPS_DIR","process","env","NODE_ENV","MAP_META","AP","geoDataFile","mapType","AR","AS","BR","CT","GA","GJ","HR","HP","JK","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","LA","LD","PY","TT","MAP_DIMENSIONS","MAP_LEGEND_HEIGHT","STATE_NAMES","stateCodes","stateCodesMap","map","key","index","push","code","name","STATE_CODES","STATE_CODES_ARRAY"],"mappings":"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","sourcesContent":["export const API_DOMAIN = 'https://data.covid19india.org';\n\nexport const DATA_API_ROOT = `${API_DOMAIN}/v4/min`;\nexport const API_REFRESH_INTERVAL = 100000; // seconds\n\nexport const LOCALE_SHORTHANDS = {\n  english: 'en-US',\n};\n\nexport const STATISTIC_CONFIGS = {\n  confirmed: {\n    displayName: 'confirmed',\n    color: '#ff073a',\n    format: 'long',\n    showDelta: true,\n    hasPrimary: true,\n  },\n  active: {\n    displayName: 'active',\n    color: '#007bff',\n    format: 'long',\n    hasPrimary: true,\n  },\n  recovered: {\n    displayName: 'recovered',\n    color: '#28a745',\n    format: 'long',\n    showDelta: true,\n    hasPrimary: true,\n  },\n  deceased: {\n    displayName: 'deceased',\n    color: '#6c757d',\n    format: 'long',\n    showDelta: true,\n    hasPrimary: true,\n  },\n  other: {\n    displayName: 'other',\n    format: 'long',\n    color: '#fd7e14',\n    showDelta: true,\n    tableConfig: {\n      notes: 'Migrated cases or non-COVID deaths',\n    },\n    hasPrimary: true,\n  },\n  tested: {\n    displayName: 'tested',\n    color: '#4b1eaa',\n    format: 'short',\n    showDelta: true,\n    hideZero: true,\n    category: 'tested',\n  },\n  recoveryRatio: {\n    displayName: 'recovery ratio',\n    format: '%',\n    nonLinear: true,\n    tableConfig: {\n      hide: true,\n    },\n    hasPrimary: true,\n  },\n  activeRatio: {\n    displayName: 'active ratio',\n    format: '%',\n    nonLinear: true,\n    tableConfig: {\n      hide: true,\n    },\n    hasPrimary: true,\n  },\n  population: {\n    displayName: 'population',\n    format: 'short',\n    color: '#b6854d',\n    hideZero: true,\n    mapConfig: {\n      spike: true,\n    },\n  },\n};\n\nexport const PRIMARY_STATISTICS = [\n  'confirmed',\n  'active',\n  'recovered',\n  'deceased',\n];\n\nexport const LEVEL_STATISTICS = [...PRIMARY_STATISTICS];\n\nexport const TABLE_STATISTICS = [...PRIMARY_STATISTICS, 'tested', 'vaccinated'];\n\nexport const TABLE_STATISTICS_EXPANDED = Object.keys(STATISTIC_CONFIGS).filter(\n  (statistic) => !STATISTIC_CONFIGS[statistic]?.tableConfig?.hide\n);\n\nexport const MAP_STATISTICS = [...PRIMARY_STATISTICS];\n\nexport const TIMESERIES_STATISTICS = [\n  ...PRIMARY_STATISTICS,\n  'tested',\n  'vaccinated',\n  'tpr',\n];\n\nexport const BRUSH_STATISTICS = ['confirmed'];\n\nexport const UPDATES_COUNT = 5;\n\nexport const DISTRICT_TABLE_COUNT = 40;\n\nexport const D3_TRANSITION_DURATION = 300;\n\nexport const MINIGRAPH_LOOKBACK_DAYS = 21;\n\nexport const TESTED_EXPIRING_DAYS = 7;\n\nexport const UNASSIGNED_STATE_CODE = 'UN';\n\nexport const UNKNOWN_DISTRICT_KEY = 'Unknown';\n\nexport const DISTRICT_START_DATE = '2020-04-26';\n\nexport const DISTRICT_TEST_END_DATE = '2021-02-02';\n\nexport const ISO_DATE_REGEX = /^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/g;\n\nexport const INDIA_ISO_SUFFIX = 'T00:00:00+05:30';\n\nexport const SPRING_CONFIG_NUMBERS = {clamp: true, precision: 1};\n\nexport const TIMESERIES_CHART_TYPES = {\n  total: 'Cumulative',\n  delta: 'Daily',\n};\n\nexport const TIMESERIES_LOOKBACK_DAYS = [null, 90, 30];\n\nexport const MAP_VIZS = {\n  CHOROPLETH: 0,\n  BUBBLE: 1,\n  SPIKE: 2,\n};\n\nexport const MAP_VIEWS = {\n  STATES: 0,\n  DISTRICTS: 1,\n};\n\nexport const MAP_TYPES = {\n  COUNTRY: 0,\n  STATE: 1,\n};\n\nexport const MAPS_DIR =\n  process.env.NODE_ENV === 'production' ? '/mini_maps' : '/projected_maps';\n\nexport const MAP_META = {\n  AP: {\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AR: {\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AS: {\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  BR: {\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  CT: {\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  GA: {\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  GJ: {\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  HR: {\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  HP: {\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  JK: {\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  JH: {\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  KA: {\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  KL: {\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MP: {\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MH: {\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MN: {\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  ML: {\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MZ: {\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  NL: {\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  OR: {\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  PB: {\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  RJ: {\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  SK: {\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TN: {\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TG: {\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TR: {\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  UT: {\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  UP: {\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  WB: {\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AN: {\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  CH: {\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  DN: {\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  DL: {\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  LA: {\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  LD: {\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  PY: {\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TT: {\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n  },\n};\n\nexport const MAP_DIMENSIONS = [432, 488];\nexport const MAP_LEGEND_HEIGHT = 50;\n\nexport const STATE_NAMES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n  TT: 'India',\n  [UNASSIGNED_STATE_CODE]: 'Unassigned',\n};\n\nconst stateCodes = [];\nconst stateCodesMap = {};\nObject.keys(STATE_NAMES).map((key, index) => {\n  stateCodesMap[STATE_NAMES[key]] = key;\n  stateCodes.push({code: key, name: STATE_NAMES[key]});\n  return null;\n});\nexport const STATE_CODES = stateCodesMap;\nexport const STATE_CODES_ARRAY = stateCodes;\n"]},"metadata":{},"sourceType":"module"}