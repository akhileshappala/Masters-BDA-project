{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/Row.js\",\n    _s = $RefreshSig$();\n\nimport Cell from './Cell';\nimport DistrictRow from './DistrictRow';\nimport HeaderCell from './HeaderCell';\nimport Tooltip from './Tooltip';\nimport { STATE_NAMES, STATISTIC_CONFIGS, UNKNOWN_DISTRICT_KEY } from '../constants';\nimport { capitalize, formatLastUpdated } from '../utils/commonFunctions';\nimport { AlertIcon, ClockIcon, SortAscIcon, SortDescIcon, FoldUpIcon, GraphIcon, InfoIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport { memo, useCallback, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport { useSessionStorage } from 'react-use';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Row({\n  data,\n  tableStatistics,\n  stateCode,\n  districtName,\n  regionHighlighted,\n  setRegionHighlighted,\n  expandTable,\n  getTableStatistic,\n  tableWidth,\n  noDistrictData\n}) {\n  _s();\n\n  var _data$meta;\n\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useSessionStorage('districtSortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n    delta: false\n  });\n  const history = useHistory();\n  const {\n    t\n  } = useTranslation();\n  const rowElement = useRef();\n  const handleSortClick = useCallback(statistic => {\n    if (sortData.sortColumn !== statistic) {\n      setSortData(produce(sortData, draftSortData => {\n        if (sortData.sortColumn === 'districtName' || statistic === 'districtName') {\n          draftSortData.isAscending = !sortData.isAscending;\n        }\n\n        draftSortData.sortColumn = statistic;\n      }));\n    } else {\n      setSortData(produce(sortData, draftSortData => {\n        draftSortData.isAscending = !sortData.isAscending;\n      }));\n    }\n  }, [sortData, setSortData]);\n  const sortingFunction = useCallback((districtNameA, districtNameB) => {\n    if (sortData.sortColumn !== 'districtName') {\n      const statisticConfig = STATISTIC_CONFIGS[sortData.sortColumn];\n      const dataType = sortData.delta && (statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.showDelta) ? 'delta' : 'total';\n      const statisticA = getTableStatistic(data.districts[districtNameA], sortData.sortColumn, dataType);\n      const statisticB = getTableStatistic(data.districts[districtNameB], sortData.sortColumn, dataType);\n      return sortData.isAscending ? statisticA - statisticB : statisticB - statisticA;\n    } else {\n      return sortData.isAscending ? districtNameA.localeCompare(districtNameB) : districtNameB.localeCompare(districtNameA);\n    }\n  }, [sortData, data, getTableStatistic]);\n  const highlightState = useCallback(() => {\n    if (stateCode) {\n      if (regionHighlighted.stateCode !== stateCode) {\n        setRegionHighlighted(produce(regionHighlighted, draftRegionHighlighted => {\n          draftRegionHighlighted.stateCode = stateCode;\n          draftRegionHighlighted.districtName = null;\n        }));\n      }\n    } else if (districtName) {\n      if (regionHighlighted.districtName !== districtName || regionHighlighted.stateCode !== data.stateCode) {\n        setRegionHighlighted(produce(regionHighlighted, draftRegionHighlighted => {\n          draftRegionHighlighted.stateCode = data.stateCode;\n          draftRegionHighlighted.districtName = districtName;\n        }));\n      }\n    }\n  }, [data.stateCode, districtName, regionHighlighted, setRegionHighlighted, stateCode]);\n\n  const _setShowDistrict = useCallback(() => {\n    if (data.districts) {\n      setShowDistricts(!showDistricts);\n    }\n  }, [showDistricts, data]);\n\n  let districtNameStr = t(districtName);\n\n  if (districtName === UNKNOWN_DISTRICT_KEY) {\n    districtNameStr = `${t(UNKNOWN_DISTRICT_KEY)} [${t(STATE_NAMES[data.stateCode])}]`;\n  }\n\n  const handleStatePageClick = useCallback(stateCode => {\n    history.push(`state/${stateCode}`);\n  }, [history]);\n  const handleCollapse = useCallback(() => {\n    setShowDistricts(false);\n    rowElement.current.scrollIntoView({\n      block: 'start'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('row', {\n        'is-total': stateCode === 'TT'\n      }, {\n        'is-highlighted': stateCode && (regionHighlighted === null || regionHighlighted === void 0 ? void 0 : regionHighlighted.stateCode) === stateCode || districtName && (regionHighlighted === null || regionHighlighted === void 0 ? void 0 : regionHighlighted.districtName) === districtName && (regionHighlighted === null || regionHighlighted === void 0 ? void 0 : regionHighlighted.stateCode) === data.stateCode\n      }),\n      onMouseEnter: highlightState,\n      onClick: _setShowDistrict,\n      ref: rowElement,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"state-name fadeInUp\",\n          children: t(STATE_NAMES[stateCode]) || districtNameStr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), (data === null || data === void 0 ? void 0 : (_data$meta = data.meta) === null || _data$meta === void 0 ? void 0 : _data$meta.notes) && /*#__PURE__*/_jsxDEV(Tooltip, {\n          message: data.meta.notes,\n          children: /*#__PURE__*/_jsxDEV(InfoIcon, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), tableStatistics.map(statistic => /*#__PURE__*/_jsxDEV(Cell, {\n        noDistrictData: !stateCode && districtName !== UNKNOWN_DISTRICT_KEY && noDistrictData,\n        data,\n        statistic,\n        getTableStatistic\n      }, statistic, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), showDistricts && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state-meta\",\n        style: {\n          width: tableWidth\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"state-meta-top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('row', 'heading'),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell heading\",\n          onClick: handleSortClick.bind(this, 'districtName'),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"district-name\",\n            children: t('District')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), sortData.sortColumn === 'districtName' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'sort-icon',\n            children: sortData.isAscending ? /*#__PURE__*/_jsxDEV(SortAscIcon, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(SortDescIcon, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), tableStatistics.map(statistic => /*#__PURE__*/_jsxDEV(HeaderCell, {\n          statistic,\n          sortData,\n          setSortData,\n          handleSort: handleSortClick.bind(this, statistic)\n        }, statistic, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showDistricts && Object.keys(data.districts || {}).sort((a, b) => sortingFunction(a, b)).map(districtName => /*#__PURE__*/_jsxDEV(DistrictRow, {\n      data: data.districts[districtName],\n      noDistrictData: districtName !== UNKNOWN_DISTRICT_KEY && noDistrictData,\n      tableStatistics,\n      districtName,\n      regionHighlighted,\n      setRegionHighlighted,\n      stateCode,\n      expandTable,\n      getTableStatistic\n    }, districtName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this)), showDistricts && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spacer-row\",\n      style: {\n        width: tableWidth\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `End of ${t(STATE_NAMES[stateCode])}'s districts`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fold\",\n          onClick: handleCollapse,\n          children: /*#__PURE__*/_jsxDEV(FoldUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Row, \"06eNQ3u+iS1aICYnTIBLNWquZCU=\", false, function () {\n  return [useSessionStorage, useHistory, useTranslation];\n});\n\n_c = Row;\n\nconst isEqual = (prevProps, currProps) => {\n  var _prevProps$data, _currProps$data, _prevProps$data2, _currProps$data2;\n\n  if (!equal((_prevProps$data = prevProps.data) === null || _prevProps$data === void 0 ? void 0 : _prevProps$data.total, (_currProps$data = currProps.data) === null || _currProps$data === void 0 ? void 0 : _currProps$data.total)) {\n    return false;\n  } else if (!equal((_prevProps$data2 = prevProps.data) === null || _prevProps$data2 === void 0 ? void 0 : _prevProps$data2.delta, (_currProps$data2 = currProps.data) === null || _currProps$data2 === void 0 ? void 0 : _currProps$data2.delta)) {\n    return false;\n  } else if (!equal(prevProps.regionHighlighted.stateCode, currProps.regionHighlighted.stateCode) && equal(prevProps.regionHighlighted.stateCode, prevProps.stateCode) || equal(currProps.regionHighlighted.stateCode, currProps.stateCode)) {\n    return false;\n  } else if (!equal(prevProps.regionHighlighted.districtName, currProps.regionHighlighted.districtName) && equal(prevProps.regionHighlighted.districtName, prevProps.districtName) || equal(currProps.regionHighlighted.districtName, currProps.districtName)) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else if (!equal(prevProps.noDistrictData, currProps.noDistrictData)) {\n    return false;\n  } else if (!equal(prevProps.tableWidth, currProps.tableWidth)) {\n    return false;\n  } else if (!equal(prevProps.getTableStatistic, currProps.getTableStatistic)) {\n    return false;\n  } else if (!equal(prevProps.tableStatistics, currProps.tableStatistics)) {\n    return false;\n  } else return true;\n};\n\nexport default _c2 = /*#__PURE__*/memo(Row, isEqual);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/Row.js"],"names":["Cell","DistrictRow","HeaderCell","Tooltip","STATE_NAMES","STATISTIC_CONFIGS","UNKNOWN_DISTRICT_KEY","capitalize","formatLastUpdated","AlertIcon","ClockIcon","SortAscIcon","SortDescIcon","FoldUpIcon","GraphIcon","InfoIcon","classnames","equal","produce","memo","useCallback","useRef","useState","useTranslation","useHistory","useSessionStorage","Row","data","tableStatistics","stateCode","districtName","regionHighlighted","setRegionHighlighted","expandTable","getTableStatistic","tableWidth","noDistrictData","showDistricts","setShowDistricts","sortData","setSortData","sortColumn","isAscending","delta","history","t","rowElement","handleSortClick","statistic","draftSortData","sortingFunction","districtNameA","districtNameB","statisticConfig","dataType","showDelta","statisticA","districts","statisticB","localeCompare","highlightState","draftRegionHighlighted","_setShowDistrict","districtNameStr","handleStatePageClick","push","handleCollapse","current","scrollIntoView","block","meta","notes","map","width","bind","Object","keys","sort","a","b","isEqual","prevProps","currProps","total"],"mappings":"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","sourcesContent":["import Cell from './Cell';\nimport DistrictRow from './DistrictRow';\nimport HeaderCell from './HeaderCell';\nimport Tooltip from './Tooltip';\n\nimport {\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {capitalize, formatLastUpdated} from '../utils/commonFunctions';\n\nimport {\n  AlertIcon,\n  ClockIcon,\n  SortAscIcon,\n  SortDescIcon,\n  FoldUpIcon,\n  GraphIcon,\n  InfoIcon,\n} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport {memo, useCallback, useRef, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {useSessionStorage} from 'react-use';\n\nfunction Row({\n  data,\n  tableStatistics,\n  stateCode,\n  districtName,\n  regionHighlighted,\n  setRegionHighlighted,\n  expandTable,\n  getTableStatistic,\n  tableWidth,\n  noDistrictData,\n}) {\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useSessionStorage('districtSortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n    delta: false,\n  });\n\n  const history = useHistory();\n  const {t} = useTranslation();\n\n  const rowElement = useRef();\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      if (sortData.sortColumn !== statistic) {\n        setSortData(\n          produce(sortData, (draftSortData) => {\n            if (\n              sortData.sortColumn === 'districtName' ||\n              statistic === 'districtName'\n            ) {\n              draftSortData.isAscending = !sortData.isAscending;\n            }\n            draftSortData.sortColumn = statistic;\n          })\n        );\n      } else {\n        setSortData(\n          produce(sortData, (draftSortData) => {\n            draftSortData.isAscending = !sortData.isAscending;\n          })\n        );\n      }\n    },\n    [sortData, setSortData]\n  );\n\n  const sortingFunction = useCallback(\n    (districtNameA, districtNameB) => {\n      if (sortData.sortColumn !== 'districtName') {\n        const statisticConfig = STATISTIC_CONFIGS[sortData.sortColumn];\n        const dataType =\n          sortData.delta && statisticConfig?.showDelta ? 'delta' : 'total';\n\n        const statisticA = getTableStatistic(\n          data.districts[districtNameA],\n          sortData.sortColumn,\n          dataType\n        );\n        const statisticB = getTableStatistic(\n          data.districts[districtNameB],\n          sortData.sortColumn,\n          dataType\n        );\n        return sortData.isAscending\n          ? statisticA - statisticB\n          : statisticB - statisticA;\n      } else {\n        return sortData.isAscending\n          ? districtNameA.localeCompare(districtNameB)\n          : districtNameB.localeCompare(districtNameA);\n      }\n    },\n    [sortData, data, getTableStatistic]\n  );\n\n  const highlightState = useCallback(() => {\n    if (stateCode) {\n      if (regionHighlighted.stateCode !== stateCode) {\n        setRegionHighlighted(\n          produce(regionHighlighted, (draftRegionHighlighted) => {\n            draftRegionHighlighted.stateCode = stateCode;\n            draftRegionHighlighted.districtName = null;\n          })\n        );\n      }\n    } else if (districtName) {\n      if (\n        regionHighlighted.districtName !== districtName ||\n        regionHighlighted.stateCode !== data.stateCode\n      ) {\n        setRegionHighlighted(\n          produce(regionHighlighted, (draftRegionHighlighted) => {\n            draftRegionHighlighted.stateCode = data.stateCode;\n            draftRegionHighlighted.districtName = districtName;\n          })\n        );\n      }\n    }\n  }, [\n    data.stateCode,\n    districtName,\n    regionHighlighted,\n    setRegionHighlighted,\n    stateCode,\n  ]);\n\n  const _setShowDistrict = useCallback(() => {\n    if (data.districts) {\n      setShowDistricts(!showDistricts);\n    }\n  }, [showDistricts, data]);\n\n  let districtNameStr = t(districtName);\n  if (districtName === UNKNOWN_DISTRICT_KEY) {\n    districtNameStr = `${t(UNKNOWN_DISTRICT_KEY)} [${t(\n      STATE_NAMES[data.stateCode]\n    )}]`;\n  }\n\n  const handleStatePageClick = useCallback(\n    (stateCode) => {\n      history.push(`state/${stateCode}`);\n    },\n    [history]\n  );\n\n  const handleCollapse = useCallback(() => {\n    setShowDistricts(false);\n    rowElement.current.scrollIntoView({\n      block: 'start',\n    });\n  }, []);\n\n  return (\n    <>\n      <div\n        className={classnames(\n          'row',\n          {'is-total': stateCode === 'TT'},\n          {\n            'is-highlighted':\n              (stateCode && regionHighlighted?.stateCode === stateCode) ||\n              (districtName &&\n                regionHighlighted?.districtName === districtName &&\n                regionHighlighted?.stateCode === data.stateCode),\n          }\n        )}\n        onMouseEnter={highlightState}\n        onClick={_setShowDistrict}\n        ref={rowElement}\n      >\n        <div className=\"cell\">\n          <div className=\"state-name fadeInUp\">\n            {t(STATE_NAMES[stateCode]) || districtNameStr}\n          </div>\n          {data?.meta?.notes && (\n            <Tooltip message={data.meta.notes}>\n              <InfoIcon size={16} />\n            </Tooltip>\n          )}\n        </div>\n\n        {tableStatistics.map((statistic) => (\n          <Cell\n            key={statistic}\n            noDistrictData={\n              !stateCode &&\n              districtName !== UNKNOWN_DISTRICT_KEY &&\n              noDistrictData\n            }\n            {...{\n              data,\n              statistic,\n              getTableStatistic,\n            }}\n          />\n        ))}\n      </div>\n\n      {showDistricts && (\n        <>\n          <div className=\"state-meta\" style={{width: tableWidth}}>\n            <div className=\"state-meta-top\"></div>\n          </div>\n\n          <div className={classnames('row', 'heading')}>\n            <div\n              className=\"cell heading\"\n              onClick={handleSortClick.bind(this, 'districtName')}\n            >\n              <div className=\"district-name\">{t('District')}</div>\n              {sortData.sortColumn === 'districtName' && (\n                <div className={'sort-icon'}>\n                  {sortData.isAscending ? (\n                    <SortAscIcon size={12} />\n                  ) : (\n                    <SortDescIcon size={12} />\n                  )}\n                </div>\n              )}\n            </div>\n\n            {tableStatistics.map((statistic) => (\n              <HeaderCell\n                key={statistic}\n                {...{statistic, sortData, setSortData}}\n                handleSort={handleSortClick.bind(this, statistic)}\n              />\n            ))}\n          </div>\n        </>\n      )}\n\n      {showDistricts &&\n        Object.keys(data.districts || {})\n          .sort((a, b) => sortingFunction(a, b))\n          .map((districtName) => (\n            <DistrictRow\n              data={data.districts[districtName]}\n              key={districtName}\n              noDistrictData={\n                districtName !== UNKNOWN_DISTRICT_KEY && noDistrictData\n              }\n              {...{\n                tableStatistics,\n                districtName,\n                regionHighlighted,\n                setRegionHighlighted,\n                stateCode,\n                expandTable,\n                getTableStatistic,\n              }}\n            />\n          ))}\n\n      {showDistricts && (\n        <div className=\"spacer-row\" style={{width: tableWidth}}>\n          <div className=\"spacer\">\n            <p>{`End of ${t(STATE_NAMES[stateCode])}'s districts`}</p>\n            <div className=\"fold\" onClick={handleCollapse}>\n              <FoldUpIcon />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data?.total, currProps.data?.total)) {\n    return false;\n  } else if (!equal(prevProps.data?.delta, currProps.data?.delta)) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.stateCode,\n      currProps.regionHighlighted.stateCode\n    ) &&\n      equal(prevProps.regionHighlighted.stateCode, prevProps.stateCode)) ||\n    equal(currProps.regionHighlighted.stateCode, currProps.stateCode)\n  ) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    ) &&\n      equal(\n        prevProps.regionHighlighted.districtName,\n        prevProps.districtName\n      )) ||\n    equal(currProps.regionHighlighted.districtName, currProps.districtName)\n  ) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else if (!equal(prevProps.noDistrictData, currProps.noDistrictData)) {\n    return false;\n  } else if (!equal(prevProps.tableWidth, currProps.tableWidth)) {\n    return false;\n  } else if (!equal(prevProps.getTableStatistic, currProps.getTableStatistic)) {\n    return false;\n  } else if (!equal(prevProps.tableStatistics, currProps.tableStatistics)) {\n    return false;\n  } else return true;\n};\n\nexport default memo(Row, isEqual);\n"]},"metadata":{},"sourceType":"module"}