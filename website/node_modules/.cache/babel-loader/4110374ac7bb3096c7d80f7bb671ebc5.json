{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/MapSwitcher.js\",\n    _s = $RefreshSig$();\n\nimport { LEVEL_STATISTICS, STATISTIC_CONFIGS } from '../constants';\nimport classnames from 'classnames';\nimport { memo, useState, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSpring, animated, config } from 'react-spring';\nimport { useMeasure } from 'react-use';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapSwitcher = ({\n  mapStatistic,\n  setMapStatistic\n}) => {\n  _s();\n\n  const [mapSwitcher, {\n    width\n  }] = useMeasure();\n  const [clicked, setClicked] = useState(false);\n  const [count, setCount] = useState(0);\n  const isPresent = LEVEL_STATISTICS.indexOf(mapStatistic) >= 0;\n  const [spring, springApi] = useSpring(() => ({\n    opacity: 0,\n    background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\n    transform: isPresent ? `translate3d(${width * LEVEL_STATISTICS.indexOf(mapStatistic) / LEVEL_STATISTICS.length}px, 0, 0)` : null,\n    width: `calc(${100 / LEVEL_STATISTICS.length}%)`,\n    config: config.gentle\n  }));\n  useEffect(() => {\n    if (width > 0) {\n      const isPresent = LEVEL_STATISTICS.indexOf(mapStatistic) >= 0;\n      ReactDOM.unstable_batchedUpdates(() => {\n        var _STATISTIC_CONFIGS$ma;\n\n        springApi.start({\n          transform: isPresent ? `translate3d(${width * LEVEL_STATISTICS.indexOf(mapStatistic) / LEVEL_STATISTICS.length}px, 0, 0)` : null,\n          opacity: isPresent ? 1 : 0,\n          background: isPresent ? `${(_STATISTIC_CONFIGS$ma = STATISTIC_CONFIGS[mapStatistic]) === null || _STATISTIC_CONFIGS$ma === void 0 ? void 0 : _STATISTIC_CONFIGS$ma.color}20` : null,\n          delay: count === 0 ? 1500 : 0,\n          onStart: setClicked.bind(this, true),\n          onRest: setClicked.bind(this, false)\n        });\n      });\n    }\n  }, [count, mapStatistic, springApi, width]);\n  const handleClick = useCallback(statistic => {\n    setCount(prevCount => prevCount + 1);\n    setMapStatistic(statistic);\n  }, [setMapStatistic]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MapSwitcher\",\n    ref: mapSwitcher,\n    children: [/*#__PURE__*/_jsxDEV(animated.div, {\n      className: \"highlight\",\n      style: spring\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), LEVEL_STATISTICS.map((statistic, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('clickable', {\n        [`is-${statistic}`]: !clicked\n      }),\n      onClick: handleClick.bind(this, statistic),\n      style: {\n        width: `calc(${100 / LEVEL_STATISTICS.length}%)`\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapSwitcher, \"ZcIzmS223cjHbhSFU7NypMxcrCI=\", false, function () {\n  return [useMeasure, useSpring];\n});\n\n_c = MapSwitcher;\n\nconst isEqual = (prevProps, currProps) => {\n  if (prevProps.mapStatistic !== currProps.mapStatistic) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default _c2 = /*#__PURE__*/memo(MapSwitcher, isEqual);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapSwitcher\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/MapSwitcher.js"],"names":["LEVEL_STATISTICS","STATISTIC_CONFIGS","classnames","memo","useState","useCallback","useEffect","ReactDOM","useSpring","animated","config","useMeasure","MapSwitcher","mapStatistic","setMapStatistic","mapSwitcher","width","clicked","setClicked","count","setCount","isPresent","indexOf","spring","springApi","opacity","background","color","transform","length","gentle","unstable_batchedUpdates","start","delay","onStart","bind","onRest","handleClick","statistic","prevCount","map","index","isEqual","prevProps","currProps"],"mappings":"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","sourcesContent":["import {LEVEL_STATISTICS, STATISTIC_CONFIGS} from '../constants';\n\nimport classnames from 'classnames';\nimport {memo, useState, useCallback, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useSpring, animated, config} from 'react-spring';\nimport {useMeasure} from 'react-use';\n\nconst MapSwitcher = ({mapStatistic, setMapStatistic}) => {\n  const [mapSwitcher, {width}] = useMeasure();\n  const [clicked, setClicked] = useState(false);\n  const [count, setCount] = useState(0);\n\n  const isPresent = LEVEL_STATISTICS.indexOf(mapStatistic) >= 0;\n\n  const [spring, springApi] = useSpring(() => ({\n    opacity: 0,\n    background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\n    transform: isPresent\n      ? `translate3d(${\n          (width * LEVEL_STATISTICS.indexOf(mapStatistic)) /\n          LEVEL_STATISTICS.length\n        }px, 0, 0)`\n      : null,\n    width: `calc(${100 / LEVEL_STATISTICS.length}%)`,\n    config: config.gentle,\n  }));\n\n  useEffect(() => {\n    if (width > 0) {\n      const isPresent = LEVEL_STATISTICS.indexOf(mapStatistic) >= 0;\n      ReactDOM.unstable_batchedUpdates(() => {\n        springApi.start({\n          transform: isPresent\n            ? `translate3d(${\n                (width * LEVEL_STATISTICS.indexOf(mapStatistic)) /\n                LEVEL_STATISTICS.length\n              }px, 0, 0)`\n            : null,\n          opacity: isPresent ? 1 : 0,\n          background: isPresent\n            ? `${STATISTIC_CONFIGS[mapStatistic]?.color}20`\n            : null,\n          delay: count === 0 ? 1500 : 0,\n          onStart: setClicked.bind(this, true),\n          onRest: setClicked.bind(this, false),\n        });\n      });\n    }\n  }, [count, mapStatistic, springApi, width]);\n\n  const handleClick = useCallback(\n    (statistic) => {\n      setCount((prevCount) => prevCount + 1);\n      setMapStatistic(statistic);\n    },\n    [setMapStatistic]\n  );\n\n  return (\n    <div className=\"MapSwitcher\" ref={mapSwitcher}>\n      <animated.div className=\"highlight\" style={spring}></animated.div>\n\n      {LEVEL_STATISTICS.map((statistic, index) => (\n        <div\n          key={index}\n          className={classnames('clickable', {[`is-${statistic}`]: !clicked})}\n          onClick={handleClick.bind(this, statistic)}\n          style={{width: `calc(${100 / LEVEL_STATISTICS.length}%)`}}\n        ></div>\n      ))}\n    </div>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  if (prevProps.mapStatistic !== currProps.mapStatistic) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(MapSwitcher, isEqual);\n"]},"metadata":{},"sourceType":"module"}