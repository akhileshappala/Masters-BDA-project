{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/VaccinationHeader.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { SPRING_CONFIG_NUMBERS, STATISTIC_CONFIGS } from '../constants.js';\nimport { formatNumber, getStatistic } from '../utils/commonFunctions';\nimport { ShieldCheckIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport { useEffect, useRef, useState, memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { animated, useSpring, Globals } from 'react-spring'; // Disable react-spring color string interpolation\n// It renders administered => administergba(255, 0, 0, 1)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGlobals.assign({\n  colors: null\n});\n\nfunction ProgressBar({\n  dose1,\n  dose2\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [highlightedDose, setHighlightedDose] = useState(2);\n  const isMounted = useRef(false);\n  const doseSpring = useSpring({\n    dose1,\n    dose2,\n    from: {\n      dose1: 0,\n      dose2: 0\n    },\n    delay: isMounted.current ? 0 : 2000\n  });\n  useEffect(() => {\n    isMounted.current = true;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar-wrapper fadeInUp\",\n    style: {\n      animationDelay: `${750 + 5 * 250}ms`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('legend', {\n        highlighted: highlightedDose === 1\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(animated.div, {\n          style: {\n            width: doseSpring.dose1.to(n => `calc(${n}% - 3rem)`)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label\",\n          onMouseEnter: setHighlightedDose.bind(this, 1),\n          onMouseLeave: setHighlightedDose.bind(this, 2),\n          children: t('At least one dose')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n        className: \"arrow\",\n        style: {\n          marginLeft: doseSpring.dose1.to(n => `calc(${n}% - 0.3ch)`)\n        },\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: [/*#__PURE__*/_jsxDEV(animated.div, {\n        className: classnames('progress-bar', 'value', {\n          highlighted: highlightedDose === 1\n        }),\n        style: {\n          width: doseSpring.dose1.to(n => `${n}%`)\n        },\n        onMouseEnter: setHighlightedDose.bind(this, 1),\n        onMouseLeave: setHighlightedDose.bind(this, 2),\n        children: /*#__PURE__*/_jsxDEV(animated.span, {\n          children: doseSpring.dose1.to(n => formatNumber(n, '%'))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n        className: classnames('progress-bar', 'value', 'opaque', {\n          highlighted: highlightedDose === 2\n        }),\n        style: {\n          width: doseSpring.dose2.to(n => `${n}%`)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), dose2 > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('legend', {\n        highlighted: highlightedDose === 2\n      }),\n      children: [/*#__PURE__*/_jsxDEV(animated.div, {\n        className: \"arrow\",\n        style: {\n          marginLeft: doseSpring.dose2.to(n => `calc(${n}% - 0.3ch)`)\n        },\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(animated.div, {\n          style: {\n            width: doseSpring.dose2.to(n => `calc(${n}% - 4rem)`)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n          className: \"label\",\n          children: doseSpring.dose2.to(n => `${t('Fully vaccinated')} (${formatNumber(n, '%')})`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressBar, \"pUrccivJHA4QCw+Y3CCGiTRgTyo=\", false, function () {\n  return [useTranslation, useSpring];\n});\n\n_c = ProgressBar;\n\nfunction Level({\n  data\n}) {\n  _s2();\n\n  const {\n    t\n  } = useTranslation();\n  const spring = useSpring({\n    total: getStatistic(data, 'total', 'vaccinated'),\n    // delta: getStatistic(data, 'delta', 'vaccinated'),\n    config: SPRING_CONFIG_NUMBERS\n  });\n  const statisticConfig = STATISTIC_CONFIGS.vaccinated;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"level-vaccinated fadeInUp\",\n    style: {\n      animationDelay: `${750 + 4 * 250}ms`\n    },\n    children: [/*#__PURE__*/_jsxDEV(ShieldCheckIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      children: spring.total.to(total => formatNumber(total, 'long'))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: t(statisticConfig.displayName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Level, \"O2ZOpipK9BgoaMYEXbhwIegGVx0=\", false, function () {\n  return [useTranslation, useSpring];\n});\n\n_c2 = Level;\n\nfunction VaccinationHeader({\n  data\n}) {\n  const dose1 = getStatistic(data, 'total', 'vaccinated1', {\n    normalizedByPopulationPer: 'hundred'\n  });\n  const dose2 = getStatistic(data, 'total', 'vaccinated2', {\n    normalizedByPopulationPer: 'hundred'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VaccinationHeader\",\n    children: [/*#__PURE__*/_jsxDEV(Level, {\n      data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      dose1,\n      dose2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = VaccinationHeader;\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data, currProps.data)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default _c4 = /*#__PURE__*/memo(VaccinationHeader, isEqual);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"Level\");\n$RefreshReg$(_c3, \"VaccinationHeader\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/VaccinationHeader.js"],"names":["SPRING_CONFIG_NUMBERS","STATISTIC_CONFIGS","formatNumber","getStatistic","ShieldCheckIcon","classnames","equal","useEffect","useRef","useState","memo","useTranslation","animated","useSpring","Globals","assign","colors","ProgressBar","dose1","dose2","t","highlightedDose","setHighlightedDose","isMounted","doseSpring","from","delay","current","animationDelay","highlighted","width","to","n","bind","marginLeft","Level","data","spring","total","config","statisticConfig","vaccinated","displayName","VaccinationHeader","normalizedByPopulationPer","isEqual","prevProps","currProps"],"mappings":"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","sourcesContent":["import {SPRING_CONFIG_NUMBERS, STATISTIC_CONFIGS} from '../constants.js';\nimport {formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport {ShieldCheckIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport {useEffect, useRef, useState, memo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring, Globals} from 'react-spring';\n\n// Disable react-spring color string interpolation\n// It renders administered => administergba(255, 0, 0, 1)\nGlobals.assign({colors: null});\n\nfunction ProgressBar({dose1, dose2}) {\n  const {t} = useTranslation();\n  const [highlightedDose, setHighlightedDose] = useState(2);\n  const isMounted = useRef(false);\n\n  const doseSpring = useSpring({\n    dose1,\n    dose2,\n    from: {\n      dose1: 0,\n      dose2: 0,\n    },\n    delay: isMounted.current ? 0 : 2000,\n  });\n\n  useEffect(() => {\n    isMounted.current = true;\n  }, []);\n\n  return (\n    <div\n      className=\"progress-bar-wrapper fadeInUp\"\n      style={{animationDelay: `${750 + 5 * 250}ms`}}\n    >\n      <div\n        className={classnames('legend', {highlighted: highlightedDose === 1})}\n      >\n        <div className=\"label-wrapper\">\n          <animated.div\n            style={{width: doseSpring.dose1.to((n) => `calc(${n}% - 3rem)`)}}\n          />\n          <div\n            className=\"label\"\n            onMouseEnter={setHighlightedDose.bind(this, 1)}\n            onMouseLeave={setHighlightedDose.bind(this, 2)}\n          >\n            {t('At least one dose')}\n          </div>\n        </div>\n        <animated.div\n          className=\"arrow\"\n          style={{\n            marginLeft: doseSpring.dose1.to((n) => `calc(${n}% - 0.3ch)`),\n          }}\n        >\n          |\n        </animated.div>\n      </div>\n      <div className=\"progress-bar\">\n        <animated.div\n          className={classnames('progress-bar', 'value', {\n            highlighted: highlightedDose === 1,\n          })}\n          style={{width: doseSpring.dose1.to((n) => `${n}%`)}}\n          onMouseEnter={setHighlightedDose.bind(this, 1)}\n          onMouseLeave={setHighlightedDose.bind(this, 2)}\n        >\n          <animated.span>\n            {doseSpring.dose1.to((n) => formatNumber(n, '%'))}\n          </animated.span>\n        </animated.div>\n        <animated.div\n          className={classnames('progress-bar', 'value', 'opaque', {\n            highlighted: highlightedDose === 2,\n          })}\n          style={{width: doseSpring.dose2.to((n) => `${n}%`)}}\n        />\n      </div>\n      {dose2 > 0 && (\n        <div\n          className={classnames('legend', {\n            highlighted: highlightedDose === 2,\n          })}\n        >\n          <animated.div\n            className=\"arrow\"\n            style={{\n              marginLeft: doseSpring.dose2.to((n) => `calc(${n}% - 0.3ch)`),\n            }}\n          >\n            |\n          </animated.div>\n          <div className=\"label-wrapper\">\n            <animated.div\n              style={{\n                width: doseSpring.dose2.to((n) => `calc(${n}% - 4rem)`),\n              }}\n            />\n            <animated.div className=\"label\">\n              {doseSpring.dose2.to(\n                (n) => `${t('Fully vaccinated')} (${formatNumber(n, '%')})`\n              )}\n            </animated.div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction Level({data}) {\n  const {t} = useTranslation();\n\n  const spring = useSpring({\n    total: getStatistic(data, 'total', 'vaccinated'),\n    // delta: getStatistic(data, 'delta', 'vaccinated'),\n    config: SPRING_CONFIG_NUMBERS,\n  });\n\n  const statisticConfig = STATISTIC_CONFIGS.vaccinated;\n\n  return (\n    <div\n      className=\"level-vaccinated fadeInUp\"\n      style={{animationDelay: `${750 + 4 * 250}ms`}}\n    >\n      <ShieldCheckIcon />\n      <animated.div>\n        {spring.total.to((total) => formatNumber(total, 'long'))}\n      </animated.div>\n      {/* <animated.div>\n        {spring.delta.to(\n          (delta) =>\n            `(+ ${formatNumber(delta, 'long')})`\n        )}\n      </animated.div> */}\n      <div>{t(statisticConfig.displayName)}</div>\n    </div>\n  );\n}\n\nfunction VaccinationHeader({data}) {\n  const dose1 = getStatistic(data, 'total', 'vaccinated1', {\n    normalizedByPopulationPer: 'hundred',\n  });\n  const dose2 = getStatistic(data, 'total', 'vaccinated2', {\n    normalizedByPopulationPer: 'hundred',\n  });\n\n  return (\n    <div className=\"VaccinationHeader\">\n      <Level {...{data}} />\n      <ProgressBar {...{dose1, dose2}} />\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data, currProps.data)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(VaccinationHeader, isEqual);\n"]},"metadata":{},"sourceType":"module"}