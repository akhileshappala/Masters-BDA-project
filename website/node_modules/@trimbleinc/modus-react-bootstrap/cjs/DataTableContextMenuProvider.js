"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.DataTableHeaderContextMenu = void 0;
exports.default = DataTableContextMenuProvider;
var _react = _interopRequireWildcard(require("react"));
var _Form = _interopRequireDefault(require("./Form"));
var _renderUsingPortal = _interopRequireDefault(require("./renderUsingPortal"));
var _ContextMenu = _interopRequireDefault(require("./ContextMenu"));
var _DataTableHelpers = require("./DataTableHelpers");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*!
  Modus React Bootstrap 
  A React-based component library developed as a common, open source platform for all of Trimbleâ€™s web applications built on React.
  Extends React-Bootstrap v1.6.5
  Copyright (c) 2022 Trimble Inc.
 */

const DataTableHeaderContextMenu = /*#__PURE__*/_react.default.createContext(null);
exports.DataTableHeaderContextMenu = DataTableHeaderContextMenu;
function DataTableContextMenuProvider({
  children,
  size,
  allColumns,
  toggleHideColumn,
  toggleHideAllColumns
}) {
  const [contextMenu, setContextMenu] = (0, _react.useState)(null);
  const handleHeaderContextMenu = (0, _react.useCallback)((event, columnId) => {
    const columns = allColumns.filter(col => col.id !== _DataTableHelpers.DATATABLE_CHECKBOX_SELECTOR_ID);
    const menu = {
      positionX: event.clientX,
      positionY: event.clientY,
      items: [{
        title: 'Hide',
        onClick: () => {
          toggleHideColumn(columnId, true);
          setContextMenu(null);
        }
      }, {
        title: 'Show Columns',
        children: columns.map(column => ({
          title: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Form.default.Check, {
            label: column.render('Header'),
            custom: true,
            id: column.id,
            "data-indeterminate": "false",
            ...(column.isVisible && {
              defaultChecked: true
            }),
            onChange: () => toggleHideColumn(column.id, column.isVisible)
          })
        }))
      }, {
        title: 'Show All Columns',
        onClick: () => {
          toggleHideAllColumns(false);
          setContextMenu(null);
        }
      }]
    };
    setContextMenu(menu);
  }, [allColumns, toggleHideColumn, toggleHideAllColumns]);
  const handleContextMenuClose = (0, _react.useCallback)(() => {
    setContextMenu(null);
  }, [setContextMenu]);
  const value = (0, _react.useMemo)(() => ({
    onHeaderContextMenu: handleHeaderContextMenu
  }), [handleHeaderContextMenu]);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(DataTableHeaderContextMenu.Provider, {
    value: value,
    children: [children, (0, _renderUsingPortal.default)(contextMenu ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_ContextMenu.default, {
      size: size,
      menu: contextMenu.items,
      anchorPointX: contextMenu.positionX,
      anchorPointY: contextMenu.positionY,
      onClose: handleContextMenuClose
    }) : null, document.body)]
  });
}