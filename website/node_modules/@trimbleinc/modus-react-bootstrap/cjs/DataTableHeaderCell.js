"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _merge = _interopRequireDefault(require("lodash/merge"));
var _classnames = _interopRequireDefault(require("classnames"));
var _DataTableDragdropProvider = require("./DataTableDragdropProvider");
var _DataTableContextMenuProvider = require("./DataTableContextMenuProvider");
var _DataTableHelpers = require("./DataTableHelpers");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*!
  Modus React Bootstrap 
  A React-based component library developed as a common, open source platform for all of Trimbleâ€™s web applications built on React.
  Extends React-Bootstrap v1.6.5
  Copyright (c) 2022 Trimble Inc.
 */

const modusSortArrows = {
  asc: {
    icon: 'sort_alpha_up',
    title: 'Sort Descending'
  },
  desc: {
    icon: 'sort_alpha_down',
    title: 'Sort Ascending'
  }
};
const SortIcon = ({
  sort,
  title,
  className
}) => /*#__PURE__*/(0, _jsxRuntime.jsx)("i", {
  className: (0, _classnames.default)('modus-icons material-icons', className),
  "data-toggle": "tooltip",
  "data-placement": "top",
  title: title || modusSortArrows[sort].title,
  children: modusSortArrows[sort].icon
});
const DataTableHeaderCell = /*#__PURE__*/_react.default.forwardRef(({
  header,
  onToggleHideColumn,
  className,
  ...props
}, ref) => {
  const defaultRef = (0, _react.useRef)(null);
  const resolvedRef = ref || defaultRef;
  const dragDropContext = (0, _react.useContext)(_DataTableDragdropProvider.DataTableDragDropContext);
  const contextMenu = (0, _react.useContext)(_DataTableContextMenuProvider.DataTableHeaderContextMenu);
  const {
    onHeaderDragStart,
    registerColumn
  } = dragDropContext || {};
  const {
    onHeaderContextMenu
  } = contextMenu || {};
  const allowDrag = header.allowDrag && header.id !== _DataTableHelpers.DATATABLE_CHECKBOX_SELECTOR_ID;
  (0, _react.useEffect)(() => {
    if (registerColumn && header.id && resolvedRef.current) {
      registerColumn(header.id, resolvedRef.current);
    }
  }, [header.id, registerColumn, resolvedRef]);

  // handle right-click
  const handleContextMenuClick = (0, _react.useCallback)(event => {
    event.preventDefault();
    if (onHeaderContextMenu) onHeaderContextMenu(event, header.id);
  }, [onHeaderContextMenu, header.id]);
  const handleShowHiddenColumn = (0, _react.useCallback)(() => {
    onToggleHideColumn(header.id, false);
  }, [onToggleHideColumn, header.id]);
  const handleMouseDown = (0, _react.useCallback)(event => {
    if (onHeaderDragStart && allowDrag) onHeaderDragStart(event, header);
  }, [onHeaderDragStart, allowDrag, header]);
  if (!header.isVisible) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("th", {
      className: "hidden-column",
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "d-flex flex-row align-items-center justify-content-center",
        onClick: handleShowHiddenColumn,
        role: "group",
        "aria-label": "Show hidden columns",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("i", {
          className: "modus-icons triangle_left",
          role: "button",
          children: "triangle_left"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("i", {
          className: "modus-icons triangle_right",
          role: "button",
          children: "triangle_right"
        })]
      })
    });
  }
  const headerLabel = header.render('Header');
  const headerProps = (0, _merge.default)(header.getHeaderProps(header.getSortByToggleProps && header.getSortByToggleProps()), {
    style: (0, _DataTableHelpers.getFlexColumnStyles)(header),
    title: ''
  });
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("th", {
    className: (0, _classnames.default)(header.id === _DataTableHelpers.DATATABLE_CHECKBOX_SELECTOR_ID ? 'icon-only checkbox-selector-cell' : 'pr-2', allowDrag && 'draggable', header.isResizing && 'resizing', className),
    ref: resolvedRef,
    onContextMenu: handleContextMenuClick,
    ...headerProps,
    ...props,
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "d-flex w-100 h-100 align-items-center th-content",
      onMouseDown: handleMouseDown,
      role: "columnheader",
      tabIndex: 0,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "flex-grow-1 overflow-hidden",
        style: {
          whiteSpace: 'nowrap',
          textOverflow: 'ellipsis'
        },
        "data-toggle": "tooltip",
        "data-placement": "top",
        title: headerLabel,
        children: headerLabel
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        children: header.canSort && /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
          children: header.isSorted ? /*#__PURE__*/(0, _jsxRuntime.jsx)(SortIcon, {
            className: "sorted",
            sort: header.isSortedDesc ? 'desc' : 'asc'
          }) : /*#__PURE__*/(0, _jsxRuntime.jsx)(SortIcon, {
            className: "unsorted",
            title: "Sort Ascending",
            sort: "asc"
          })
        })
      })]
    }), header.getResizerProps && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      ...header.getResizerProps(),
      className: "table-col-resizable"
    })]
  });
});
DataTableHeaderCell.displayName = 'DataTableHeaderCell';
var _default = DataTableHeaderCell;
exports.default = _default;
module.exports = exports.default;