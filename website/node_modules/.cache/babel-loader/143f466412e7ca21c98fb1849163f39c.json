{"ast":null,"code":"import _slicedToArray from\"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import TableLoader from'./loaders/Table';import{API_REFRESH_INTERVAL,DATA_API_ROOT,DISTRICT_START_DATE,DISTRICT_TEST_END_DATE,PRIMARY_STATISTICS,TESTED_EXPIRING_DAYS,UNKNOWN_DISTRICT_KEY}from'../constants';import useIsVisible from'../hooks/useIsVisible';import useStickySWR from'../hooks/useStickySWR';import{fetcher,formatDateObjIndia,getStatistic,parseIndiaDate,retry}from'../utils/commonFunctions';import classnames from'classnames';import{addDays,formatISO,max}from'date-fns';import{useMemo,useRef,useState,lazy,Suspense}from'react';import{Helmet}from'react-helmet';import{useLocation}from'react-router-dom';import{useLocalStorage,useSessionStorage,useWindowSize}from'react-use';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Actions=/*#__PURE__*/lazy(function(){return retry(function(){return import('./Actions');});});var Footer=/*#__PURE__*/lazy(function(){return retry(function(){return import('./Footer');});});var Level=/*#__PURE__*/lazy(function(){return retry(function(){return import('./Level');});});var VaccinationHeader=/*#__PURE__*/lazy(function(){return retry(function(){return import('./VaccinationHeader');});});var MapSwitcher=/*#__PURE__*/lazy(function(){return retry(function(){return import('./MapSwitcher');});});var Minigraphs=/*#__PURE__*/lazy(function(){return retry(function(){return import('./Minigraphs');});});var Search=/*#__PURE__*/lazy(function(){return retry(function(){return import('./Search');});});var Table=/*#__PURE__*/lazy(function(){return retry(function(){return import('./Table');});});function Home(){var _timeseries$TT;var _useState=useState({stateCode:'TT',districtName:null}),_useState2=_slicedToArray(_useState,2),regionHighlighted=_useState2[0],setRegionHighlighted=_useState2[1];var _useLocalStorage=useLocalStorage('anchor',null),_useLocalStorage2=_slicedToArray(_useLocalStorage,1),anchor=_useLocalStorage2[0];var _useLocalStorage3=useLocalStorage('expandTable',false),_useLocalStorage4=_slicedToArray(_useLocalStorage3,2),expandTable=_useLocalStorage4[0],setExpandTable=_useLocalStorage4[1];var _useSessionStorage=useSessionStorage('mapStatistic','active'),_useSessionStorage2=_slicedToArray(_useSessionStorage,2),mapStatistic=_useSessionStorage2[0],setMapStatistic=_useSessionStorage2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),date=_useState4[0],setDate=_useState4[1];var location=useLocation();var _useStickySWR=useStickySWR(\"\".concat(DATA_API_ROOT,\"/timeseries.min.json\"),fetcher,{revalidateOnMount:true,refreshInterval:API_REFRESH_INTERVAL}),timeseries=_useStickySWR.data;var _useStickySWR2=useStickySWR(\"\".concat(DATA_API_ROOT,\"/data\").concat(date?\"-\".concat(date):'',\".min.json\"),fetcher,{revalidateOnMount:true,refreshInterval:API_REFRESH_INTERVAL}),data=_useStickySWR2.data;var homeRightElement=useRef();var isVisible=useIsVisible(homeRightElement);var _useWindowSize=useWindowSize(),width=_useWindowSize.width;var hideDistrictData=date!==''&&date<DISTRICT_START_DATE;var hideDistrictTestData=date===''||date>formatISO(addDays(parseIndiaDate(DISTRICT_TEST_END_DATE),TESTED_EXPIRING_DAYS),{representation:'date'});var hideVaccinated=getStatistic(data===null||data===void 0?void 0:data['TT'],'total','vaccinated')===0;var lastDataDate=useMemo(function(){var _data$TT,_data$TT$meta,_data$TT2,_data$TT2$meta,_data$TT2$meta$tested,_data$TT3,_data$TT3$meta,_data$TT3$meta$vaccin;var updatedDates=[data===null||data===void 0?void 0:(_data$TT=data['TT'])===null||_data$TT===void 0?void 0:(_data$TT$meta=_data$TT.meta)===null||_data$TT$meta===void 0?void 0:_data$TT$meta.date,data===null||data===void 0?void 0:(_data$TT2=data['TT'])===null||_data$TT2===void 0?void 0:(_data$TT2$meta=_data$TT2.meta)===null||_data$TT2$meta===void 0?void 0:(_data$TT2$meta$tested=_data$TT2$meta.tested)===null||_data$TT2$meta$tested===void 0?void 0:_data$TT2$meta$tested.date,data===null||data===void 0?void 0:(_data$TT3=data['TT'])===null||_data$TT3===void 0?void 0:(_data$TT3$meta=_data$TT3.meta)===null||_data$TT3$meta===void 0?void 0:(_data$TT3$meta$vaccin=_data$TT3$meta.vaccinated)===null||_data$TT3$meta$vaccin===void 0?void 0:_data$TT3$meta$vaccin.date].filter(function(date){return date;});return updatedDates.length>0?formatISO(max(updatedDates.map(function(date){return parseIndiaDate(date);})),{representation:'date'}):null;},[data]);var lastUpdatedDate=useMemo(function(){var updatedDates=Object.keys(data||{}).map(function(stateCode){var _data$stateCode,_data$stateCode$meta;return data===null||data===void 0?void 0:(_data$stateCode=data[stateCode])===null||_data$stateCode===void 0?void 0:(_data$stateCode$meta=_data$stateCode.meta)===null||_data$stateCode$meta===void 0?void 0:_data$stateCode$meta['last_updated'];}).filter(function(datetime){return datetime;});return updatedDates.length>0?formatDateObjIndia(max(updatedDates.map(function(datetime){return parseIndiaDate(datetime);}))):null;},[data]);var noDistrictDataStates=useMemo(function(){return(// Heuristic: All cases are in Unknown\nObject.entries(data||{}).reduce(function(res,_ref){var _stateData$districts;var _ref2=_slicedToArray(_ref,2),stateCode=_ref2[0],stateData=_ref2[1];res[stateCode]=!!((stateData===null||stateData===void 0?void 0:stateData.districts)&&((_stateData$districts=stateData.districts)===null||_stateData$districts===void 0?void 0:_stateData$districts[UNKNOWN_DISTRICT_KEY])&&PRIMARY_STATISTICS.every(function(statistic){return getStatistic(stateData,'total',statistic)===getStatistic(stateData.districts[UNKNOWN_DISTRICT_KEY],'total',statistic);}));return res;},{}));},[data]);var noRegionHighlightedDistrictData=(regionHighlighted===null||regionHighlighted===void 0?void 0:regionHighlighted.stateCode)&&(regionHighlighted===null||regionHighlighted===void 0?void 0:regionHighlighted.districtName)&&regionHighlighted.districtName!==UNKNOWN_DISTRICT_KEY&&noDistrictDataStates[regionHighlighted.stateCode];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"Coronavirus Outbreak in India - covid19india.org\"}),/*#__PURE__*/_jsx(\"meta\",{name:\"title\",content:\"Coronavirus Outbreak in India: Latest Map and Case Count\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Home\",children:/*#__PURE__*/_jsxs(\"div\",{className:classnames('home-left',{expanded:expandTable}),children:[/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsx(_Fragment,{children:timeseries&&/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{style:{minHeight:'61px'}}),children:/*#__PURE__*/_jsx(Actions,{date:date,setDate:setDate,dates:Object.keys((_timeseries$TT=timeseries['TT'])===null||_timeseries$TT===void 0?void 0:_timeseries$TT.dates),lastUpdatedDate:lastUpdatedDate})})})}),/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative',marginTop:'1rem'},children:[data&&/*#__PURE__*/_jsxs(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{style:{height:'50rem'}}),children:[width>=769&&!expandTable&&/*#__PURE__*/_jsx(MapSwitcher,{mapStatistic:mapStatistic,setMapStatistic:setMapStatistic}),/*#__PURE__*/_jsx(Level,{data:data['TT']})]}),/*#__PURE__*/_jsx(_Fragment,{})]}),data&&/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(TableLoader,{}),children:/*#__PURE__*/_jsx(Table,{data:data,regionHighlighted:regionHighlighted,setRegionHighlighted:setRegionHighlighted,expandTable:expandTable,setExpandTable:setExpandTable,hideDistrictData:hideDistrictData,hideDistrictTestData:hideDistrictTestData,hideVaccinated:hideVaccinated,lastDataDate:lastDataDate,noDistrictDataStates:noDistrictDataStates})})]})}),isVisible&&/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{}),children:/*#__PURE__*/_jsx(Footer,{})})]});}export default Home;","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Home.js"],"names":["TableLoader","API_REFRESH_INTERVAL","DATA_API_ROOT","DISTRICT_START_DATE","DISTRICT_TEST_END_DATE","PRIMARY_STATISTICS","TESTED_EXPIRING_DAYS","UNKNOWN_DISTRICT_KEY","useIsVisible","useStickySWR","fetcher","formatDateObjIndia","getStatistic","parseIndiaDate","retry","classnames","addDays","formatISO","max","useMemo","useRef","useState","lazy","Suspense","Helmet","useLocation","useLocalStorage","useSessionStorage","useWindowSize","Actions","Footer","Level","VaccinationHeader","MapSwitcher","Minigraphs","Search","Table","Home","stateCode","districtName","regionHighlighted","setRegionHighlighted","anchor","expandTable","setExpandTable","mapStatistic","setMapStatistic","date","setDate","location","revalidateOnMount","refreshInterval","timeseries","data","homeRightElement","isVisible","width","hideDistrictData","hideDistrictTestData","representation","hideVaccinated","lastDataDate","updatedDates","meta","tested","vaccinated","filter","length","map","lastUpdatedDate","Object","keys","datetime","noDistrictDataStates","entries","reduce","res","stateData","districts","every","statistic","noRegionHighlightedDistrictData","expanded","minHeight","dates","position","marginTop","height"],"mappings":"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","sourcesContent":["import TableLoader from './loaders/Table';\n\nimport {\n  API_REFRESH_INTERVAL,\n  DATA_API_ROOT,\n  DISTRICT_START_DATE,\n  DISTRICT_TEST_END_DATE,\n  PRIMARY_STATISTICS,\n  TESTED_EXPIRING_DAYS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport useStickySWR from '../hooks/useStickySWR';\nimport {\n  fetcher,\n  formatDateObjIndia,\n  getStatistic,\n  parseIndiaDate,\n  retry,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {addDays, formatISO, max} from 'date-fns';\nimport {useMemo, useRef, useState, lazy, Suspense} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useLocation} from 'react-router-dom';\nimport {useLocalStorage, useSessionStorage, useWindowSize} from 'react-use';\n\nconst Actions = lazy(() => retry(() => import('./Actions')));\nconst Footer = lazy(() => retry(() => import('./Footer')));\nconst Level = lazy(() => retry(() => import('./Level')));\nconst VaccinationHeader = lazy(() =>\n  retry(() => import('./VaccinationHeader'))\n);\nconst MapSwitcher = lazy(() => retry(() => import('./MapSwitcher')));\nconst Minigraphs = lazy(() => retry(() => import('./Minigraphs')));\nconst Search = lazy(() => retry(() => import('./Search')));\nconst Table = lazy(() => retry(() => import('./Table')));\n\nfunction Home() {\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: 'TT',\n    districtName: null,\n  });\n\n  const [anchor] = useLocalStorage('anchor', null);\n  const [expandTable, setExpandTable] = useLocalStorage('expandTable', false);\n  const [mapStatistic, setMapStatistic] = useSessionStorage(\n    'mapStatistic',\n    'active'\n  );\n\n  const [date, setDate] = useState('');\n  const location = useLocation();\n\n  const {data: timeseries} = useStickySWR(\n    `${DATA_API_ROOT}/timeseries.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: API_REFRESH_INTERVAL,\n    }\n  );\n\n  const {data} = useStickySWR(\n    `${DATA_API_ROOT}/data${date ? `-${date}` : ''}.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: API_REFRESH_INTERVAL,\n    }\n  );\n\n  const homeRightElement = useRef();\n  const isVisible = useIsVisible(homeRightElement);\n  const {width} = useWindowSize();\n\n  const hideDistrictData = date !== '' && date < DISTRICT_START_DATE;\n  const hideDistrictTestData =\n    date === '' ||\n    date >\n      formatISO(\n        addDays(parseIndiaDate(DISTRICT_TEST_END_DATE), TESTED_EXPIRING_DAYS),\n        {representation: 'date'}\n      );\n\n  const hideVaccinated =\n    getStatistic(data?.['TT'], 'total', 'vaccinated') === 0;\n\n  const lastDataDate = useMemo(() => {\n    const updatedDates = [\n      data?.['TT']?.meta?.date,\n      data?.['TT']?.meta?.tested?.date,\n      data?.['TT']?.meta?.vaccinated?.date,\n    ].filter((date) => date);\n    return updatedDates.length > 0\n      ? formatISO(max(updatedDates.map((date) => parseIndiaDate(date))), {\n          representation: 'date',\n        })\n      : null;\n  }, [data]);\n\n  const lastUpdatedDate = useMemo(() => {\n    const updatedDates = Object.keys(data || {})\n      .map((stateCode) => data?.[stateCode]?.meta?.['last_updated'])\n      .filter((datetime) => datetime);\n    return updatedDates.length > 0\n      ? formatDateObjIndia(\n          max(updatedDates.map((datetime) => parseIndiaDate(datetime)))\n        )\n      : null;\n  }, [data]);\n\n  const noDistrictDataStates = useMemo(\n    () =>\n      // Heuristic: All cases are in Unknown\n      Object.entries(data || {}).reduce((res, [stateCode, stateData]) => {\n        res[stateCode] = !!(\n          stateData?.districts &&\n          stateData.districts?.[UNKNOWN_DISTRICT_KEY] &&\n          PRIMARY_STATISTICS.every(\n            (statistic) =>\n              getStatistic(stateData, 'total', statistic) ===\n              getStatistic(\n                stateData.districts[UNKNOWN_DISTRICT_KEY],\n                'total',\n                statistic\n              )\n          )\n        );\n        return res;\n      }, {}),\n    [data]\n  );\n\n  const noRegionHighlightedDistrictData =\n    regionHighlighted?.stateCode &&\n    regionHighlighted?.districtName &&\n    regionHighlighted.districtName !== UNKNOWN_DISTRICT_KEY &&\n    noDistrictDataStates[regionHighlighted.stateCode];\n\n  return (\n    <>\n      <Helmet>\n        <title>Coronavirus Outbreak in India - covid19india.org</title>\n        <meta\n          name=\"title\"\n          content=\"Coronavirus Outbreak in India: Latest Map and Case Count\"\n        />\n      </Helmet>\n\n      <div className=\"Home\">\n        <div className={classnames('home-left', {expanded: expandTable})}>\n          <div className=\"header\">\n            <>\n              {timeseries && (\n                <Suspense fallback={<div style={{minHeight: '61px'}} />}>\n                  <Actions\n                    {...{\n                      date,\n                      setDate,\n                      dates: Object.keys(timeseries['TT']?.dates),\n                      lastUpdatedDate,\n                    }}\n                  />\n                </Suspense>\n              )}\n            </>\n          </div>\n\n          <div style={{position: 'relative', marginTop: '1rem'}}>\n            {data && (\n              <Suspense fallback={<div style={{height: '50rem'}} />}>\n                {width >= 769 && !expandTable && (\n                  <MapSwitcher {...{mapStatistic, setMapStatistic}} />\n                )}\n                <Level data={data['TT']} />\n              </Suspense>\n            )}\n\n            <></>\n          </div>\n\n          {data && (\n            <Suspense fallback={<TableLoader />}>\n              <Table\n                {...{\n                  data,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  expandTable,\n                  setExpandTable,\n                  hideDistrictData,\n                  hideDistrictTestData,\n                  hideVaccinated,\n                  lastDataDate,\n                  noDistrictDataStates,\n                }}\n              />\n            </Suspense>\n          )}\n        </div>\n      </div>\n\n      {isVisible && (\n        <Suspense fallback={<div />}>\n          <Footer />\n        </Suspense>\n      )}\n    </>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}