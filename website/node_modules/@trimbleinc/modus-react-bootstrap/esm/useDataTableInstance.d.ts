/*!
  Modus React Bootstrap
  A React-based component library developed as a common, open source platform for all of Trimbleâ€™s web applications built on React.
  Extends React-Bootstrap v1.6.5
  Copyright (c) 2022 Trimble Inc.
 */
import { HeaderGroup, IdType } from 'react-table';
import { DataTableColumnInstance } from './DataTable.types';
declare function useDataTableInstance<T extends Record<string, unknown>>(columns: any, data: any, options: any, hooks: any): {
    getTableProps: (propGetter?: import("react-table").TablePropGetter<T> | undefined) => import("react-table").TableProps;
    getTableBodyProps: (propGetter?: import("react-table").TableBodyPropGetter<T> | undefined) => import("react-table").TableBodyProps;
    headerGroups: HeaderGroup<T>[];
    prepareRow: (row: import("react-table").Row<T>) => void;
    rows: import("react-table").Row<T>[];
    allColumns: import("react-table").ColumnInstance<T>[];
    filterColumns: DataTableColumnInstance<T>[];
    resetFilter: (columnId: IdType<T>) => void;
    resetAllFilters: () => void;
    setColumnOrder: (updater: ((columnOrder: IdType<T>[]) => IdType<T>[]) | IdType<T>[]) => void;
    visibleColumns: import("react-table").ColumnInstance<T>[];
    setGlobalFilter: (value: any) => void;
    toggleHideColumn: (columnId: IdType<T>, value?: boolean | undefined) => void;
    toggleHideAllColumns: (value?: boolean | undefined) => void;
    page: import("react-table").Row<T>[];
    pageOptions: number[];
    gotoPage: (updater: number | ((pageIndex: number) => number)) => void;
    setPageSize: (pageSize: number) => void;
    selectedFlatRows: import("react-table").Row<T>[];
    isResizing: HeaderGroup<T> | undefined;
    state: {
        pageIndex: number;
        pageSize: number;
        filters: import("react-table").Filters<T>;
        globalFilter: any;
    };
    getAllHeadersInAGroup: (curr: HeaderGroup<T>[], headerGroupid: any) => import("react-table").ColumnInstance<T>[];
};
export default useDataTableInstance;
