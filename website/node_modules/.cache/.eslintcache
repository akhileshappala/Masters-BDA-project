[{"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/index.js":"1","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/serviceWorker.js":"2","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/App.js":"3","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/utils/commonFunctions.js":"4","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/i18n/index.js":"5","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Banner.js":"6","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Home.js":"7","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Precausions.js":"8","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Navbar.js":"9","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/constants.js":"10","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/VaccinationHeader.js":"11","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Footer.js":"12","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/MapSwitcher.js":"13","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Actions.js":"14","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Level.js":"15","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Minigraphs.js":"16","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Search.js":"17","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Table.js":"18","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/animations.js":"19","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/hooks/useIsVisible.js":"20","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/loaders/Table.js":"21","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/hooks/useStickySWR.js":"22","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Updates.js":"23","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Row.js":"24","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/workers/getDistricts.js":"25","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/DistrictRow.js":"26","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Tooltip.js":"27","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/HeaderCell.js":"28","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Cell.js":"29","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/snippets/TableDeltaHelper.js":"30","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/snippets/Icons.js":"31","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/ActionsPanel.js":"32","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Timeline.js":"33","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Calendar.js":"34"},{"size":1188,"mtime":1635786773000,"results":"35","hashOfConfig":"36"},{"size":5165,"mtime":1635786773000,"results":"37","hashOfConfig":"36"},{"size":1426,"mtime":1683058367327,"results":"38","hashOfConfig":"36"},{"size":7604,"mtime":1635786773000,"results":"39","hashOfConfig":"36"},{"size":800,"mtime":1635786773000,"results":"40","hashOfConfig":"36"},{"size":226,"mtime":1683067935435,"results":"41","hashOfConfig":"36"},{"size":6236,"mtime":1683067935435,"results":"42","hashOfConfig":"36"},{"size":5076,"mtime":1683067935435,"results":"43","hashOfConfig":"36"},{"size":4571,"mtime":1683067935435,"results":"44","hashOfConfig":"36"},{"size":7805,"mtime":1683054384659,"results":"45","hashOfConfig":"36"},{"size":4741,"mtime":1635786773000,"results":"46","hashOfConfig":"36"},{"size":176,"mtime":1683067935435,"results":"47","hashOfConfig":"36"},{"size":2544,"mtime":1635786773000,"results":"48","hashOfConfig":"36"},{"size":2348,"mtime":1635786773000,"results":"49","hashOfConfig":"36"},{"size":2683,"mtime":1635786773000,"results":"50","hashOfConfig":"36"},{"size":6054,"mtime":1635786773000,"results":"51","hashOfConfig":"36"},{"size":10278,"mtime":1635786773000,"results":"52","hashOfConfig":"36"},{"size":14843,"mtime":1683067935436,"results":"53","hashOfConfig":"36"},{"size":934,"mtime":1635786773000,"results":"54","hashOfConfig":"36"},{"size":671,"mtime":1635786773000,"results":"55","hashOfConfig":"36"},{"size":895,"mtime":1635786773000,"results":"56","hashOfConfig":"36"},{"size":617,"mtime":1635786773000,"results":"57","hashOfConfig":"36"},{"size":2545,"mtime":1635786773000,"results":"58","hashOfConfig":"36"},{"size":9130,"mtime":1683067935435,"results":"59","hashOfConfig":"36"},{"size":626,"mtime":1635786773000,"results":"60","hashOfConfig":"36"},{"size":2740,"mtime":1635786773000,"results":"61","hashOfConfig":"36"},{"size":947,"mtime":1635786773000,"results":"62","hashOfConfig":"36"},{"size":2312,"mtime":1635786773000,"results":"63","hashOfConfig":"36"},{"size":2035,"mtime":1635786773000,"results":"64","hashOfConfig":"36"},{"size":809,"mtime":1635786773000,"results":"65","hashOfConfig":"36"},{"size":434,"mtime":1635786773000,"results":"66","hashOfConfig":"36"},{"size":1232,"mtime":1683067935435,"results":"67","hashOfConfig":"36"},{"size":7977,"mtime":1635786773000,"results":"68","hashOfConfig":"36"},{"size":3016,"mtime":1635786773000,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oj4tk2",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":9,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":12,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":11,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/index.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/serviceWorker.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/App.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/utils/commonFunctions.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/i18n/index.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Banner.js",["146"],"import {useTranslation} from 'react-i18next';\n\nfunction Banner(props) {\n  const {t} = useTranslation();\n\n  return (\n    <div className=\"Banner fadeInDown\" style={{animationDelay: '0.4s'}}></div>\n  );\n}\n\nexport default Banner;\n","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Home.js",["147","148","149","150","151","152"],"import TableLoader from './loaders/Table';\n\nimport {\n  API_REFRESH_INTERVAL,\n  DATA_API_ROOT,\n  DISTRICT_START_DATE,\n  DISTRICT_TEST_END_DATE,\n  PRIMARY_STATISTICS,\n  TESTED_EXPIRING_DAYS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport useStickySWR from '../hooks/useStickySWR';\nimport {\n  fetcher,\n  formatDateObjIndia,\n  getStatistic,\n  parseIndiaDate,\n  retry,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {addDays, formatISO, max} from 'date-fns';\nimport {useMemo, useRef, useState, lazy, Suspense} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useLocation} from 'react-router-dom';\nimport {useLocalStorage, useSessionStorage, useWindowSize} from 'react-use';\n\nconst Actions = lazy(() => retry(() => import('./Actions')));\nconst Footer = lazy(() => retry(() => import('./Footer')));\nconst Level = lazy(() => retry(() => import('./Level')));\nconst VaccinationHeader = lazy(() =>\n  retry(() => import('./VaccinationHeader'))\n);\nconst MapSwitcher = lazy(() => retry(() => import('./MapSwitcher')));\nconst Minigraphs = lazy(() => retry(() => import('./Minigraphs')));\nconst Search = lazy(() => retry(() => import('./Search')));\nconst Table = lazy(() => retry(() => import('./Table')));\n\nfunction Home() {\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: 'TT',\n    districtName: null,\n  });\n\n  const [anchor] = useLocalStorage('anchor', null);\n  const [expandTable, setExpandTable] = useLocalStorage('expandTable', false);\n  const [mapStatistic, setMapStatistic] = useSessionStorage(\n    'mapStatistic',\n    'active'\n  );\n\n  const [date, setDate] = useState('');\n  const location = useLocation();\n\n  const {data: timeseries} = useStickySWR(\n    `${DATA_API_ROOT}/timeseries.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: API_REFRESH_INTERVAL,\n    }\n  );\n\n  const {data} = useStickySWR(\n    `${DATA_API_ROOT}/data${date ? `-${date}` : ''}.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: API_REFRESH_INTERVAL,\n    }\n  );\n\n  const homeRightElement = useRef();\n  const isVisible = useIsVisible(homeRightElement);\n  const {width} = useWindowSize();\n\n  const hideDistrictData = date !== '' && date < DISTRICT_START_DATE;\n  const hideDistrictTestData =\n    date === '' ||\n    date >\n      formatISO(\n        addDays(parseIndiaDate(DISTRICT_TEST_END_DATE), TESTED_EXPIRING_DAYS),\n        {representation: 'date'}\n      );\n\n  const hideVaccinated =\n    getStatistic(data?.['TT'], 'total', 'vaccinated') === 0;\n\n  const lastDataDate = useMemo(() => {\n    const updatedDates = [\n      data?.['TT']?.meta?.date,\n      data?.['TT']?.meta?.tested?.date,\n      data?.['TT']?.meta?.vaccinated?.date,\n    ].filter((date) => date);\n    return updatedDates.length > 0\n      ? formatISO(max(updatedDates.map((date) => parseIndiaDate(date))), {\n          representation: 'date',\n        })\n      : null;\n  }, [data]);\n\n  const lastUpdatedDate = useMemo(() => {\n    const updatedDates = Object.keys(data || {})\n      .map((stateCode) => data?.[stateCode]?.meta?.['last_updated'])\n      .filter((datetime) => datetime);\n    return updatedDates.length > 0\n      ? formatDateObjIndia(\n          max(updatedDates.map((datetime) => parseIndiaDate(datetime)))\n        )\n      : null;\n  }, [data]);\n\n  const noDistrictDataStates = useMemo(\n    () =>\n      // Heuristic: All cases are in Unknown\n      Object.entries(data || {}).reduce((res, [stateCode, stateData]) => {\n        res[stateCode] = !!(\n          stateData?.districts &&\n          stateData.districts?.[UNKNOWN_DISTRICT_KEY] &&\n          PRIMARY_STATISTICS.every(\n            (statistic) =>\n              getStatistic(stateData, 'total', statistic) ===\n              getStatistic(\n                stateData.districts[UNKNOWN_DISTRICT_KEY],\n                'total',\n                statistic\n              )\n          )\n        );\n        return res;\n      }, {}),\n    [data]\n  );\n\n  const noRegionHighlightedDistrictData =\n    regionHighlighted?.stateCode &&\n    regionHighlighted?.districtName &&\n    regionHighlighted.districtName !== UNKNOWN_DISTRICT_KEY &&\n    noDistrictDataStates[regionHighlighted.stateCode];\n\n  return (\n    <>\n      <Helmet>\n        <title>Coronavirus Outbreak in India - covid19india.org</title>\n        <meta\n          name=\"title\"\n          content=\"Coronavirus Outbreak in India: Latest Map and Case Count\"\n        />\n      </Helmet>\n\n      <div className=\"Home\">\n        <div className={classnames('home-left', {expanded: expandTable})}>\n          <div className=\"header\">\n            <>\n              {timeseries && (\n                <Suspense fallback={<div style={{minHeight: '61px'}} />}>\n                  <Actions\n                    {...{\n                      date,\n                      setDate,\n                      dates: Object.keys(timeseries['TT']?.dates),\n                      lastUpdatedDate,\n                    }}\n                  />\n                </Suspense>\n              )}\n            </>\n          </div>\n\n          <div style={{position: 'relative', marginTop: '1rem'}}>\n            {data && (\n              <Suspense fallback={<div style={{height: '50rem'}} />}>\n                {width >= 769 && !expandTable && (\n                  <MapSwitcher {...{mapStatistic, setMapStatistic}} />\n                )}\n                <Level data={data['TT']} />\n              </Suspense>\n            )}\n\n            <></>\n          </div>\n\n          {data && (\n            <Suspense fallback={<TableLoader />}>\n              <Table\n                {...{\n                  data,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  expandTable,\n                  setExpandTable,\n                  hideDistrictData,\n                  hideDistrictTestData,\n                  hideVaccinated,\n                  lastDataDate,\n                  noDistrictDataStates,\n                }}\n              />\n            </Suspense>\n          )}\n        </div>\n      </div>\n\n      {isVisible && (\n        <Suspense fallback={<div />}>\n          <Footer />\n        </Suspense>\n      )}\n    </>\n  );\n}\n\nexport default Home;\n","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Precausions.js",["153","154","155","156","157","158","159","160","161"],"import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport {memo} from 'react';\nimport * as React from 'react';\nimport {useTranslation} from 'react-i18next';\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport {Margin} from '@mui/icons-material';\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{display: 'inline-block', mx: '2px', transform: 'scale(0.8)'}}\n  >\n    •\n  </Box>\n);\nfunction Precaustions() {\n  return (\n    <div className=\"precausions \">\n      <div className=\"pre-do col-6\">\n        <Card variant=\"outlined\" sx={{minWidth: 275}}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"div\">\n              Do's\n            </Typography>\n            <Typography variant=\"body2\">\n              <ol>\n                <li className=\"list-pre\">\n                  Wash your hands regularly for 20 seconds, with soap and water\n                  or alcohol-based hand rub\n                </li>\n                <hr />\n                <li>\n                  Cover your nose and mouth with a disposable tissue or flexed\n                  elbow when you cough or sneeze\n                </li>\n                <hr />\n                <li>Wear a mask when you are out of your house</li>\n                <hr />\n                <li>Stay at least 6 feet away from people when you go out</li>\n                <hr />\n                <li>If you feel sick stay home</li>\n                <hr />\n                <li>\n                  If you feel really sick call or email your doctor to ask if\n                  you should come in to the hospital\n                </li>\n                <hr />\n                <li>\n                  Cover your nose and mouth with a disposable tissue or flexed\n                  elbow when you cough or sneeze\n                </li>\n              </ol>\n            </Typography>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"col-6 pre-do\">\n        <Card variant=\"outlined\" sx={{minWidth: 275}}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"div\">\n              Dont's\n            </Typography>\n            <Typography variant=\"body2\">\n              <ol>\n                <li>Take medicine that you haven’t been prescribed</li>\n                <hr />\n                <li>\n                  Drink or otherwise ingest bleach or other household cleaning\n                  products; they will make you very sick!\n                </li>\n                <hr />\n                <li>Visit friends and family members in person</li>\n                <hr />\n                <li>Go to crowded locations like parks or beaches</li>\n                <hr />\n                <li>If you feel sick stay home</li>\n                <hr />\n              </ol>\n            </Typography>\n          </CardContent>\n        </Card>\n      </div>\n      <div className=\"symptoms\">\n        <Card variant=\"outlined\" sx={{minWidth: 275}}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"div\">\n              Symptoms\n            </Typography>\n\n            <Typography variant=\"body2\">\n              People may be sick with the virus for 1 to 14 days before\n              developing symptoms. The most common symptoms of coronavirus\n              disease (COVID-19) are fever, tiredness, and dry cough. Most\n              people (about 80%) recover from the disease without needing\n              special treatment. More rarely, the disease can be serious and\n              even fatal. Older people, and people with other medical conditions\n              (such as asthma, diabetes, or heart disease), may be more\n              vulnerable to becoming severely ill.\n            </Typography>\n            <Typography sx={{mb: 1.5}} color=\"text.secondary\">\n              Most people may have a symptoms with\n            </Typography>\n            <Typography variant=\"body2\">\n              <ol>\n                <li>cough</li>\n\n                <li>Fever</li>\n\n                <li>Tiredness</li>\n\n                <li> difficulty breathing (severe cases)</li>\n              </ol>\n            </Typography>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(Precaustions);\n\n// Wash your hands several times a day for at least 20 seconds, especially before and after going out of your house\n// Cover your mouth and nose with your elbow when you cough or sneeze\n// Wear a mask when you are out of your house\n// Stay at least 6 feet away from people when you go out\n// If you feel sick stay home\n// If you feel really sick call or email your doctor to ask if you should come in to the hospital\n// Continue taking all of the medicine that you have been prescribed just as you did before the pandemic unless your doctor tells you to stop\n","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Navbar.js",["162","163"],"import {\n  SLIDE_IN,\n  SLIDE_OUT,\n  SLIDE_IN_MOBILE,\n  SLIDE_OUT_MOBILE,\n} from '../animations';\nimport locales from '../i18n/locales.json';\n\nimport {useState, useCallback, useRef} from 'react';\nimport {Book, HelpCircle, Home, Moon, Sun, Users} from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useTransition, animated} from 'react-spring';\nimport {useLockBodyScroll, usePageLeave, useWindowSize} from 'react-use';\nimport useDarkMode from 'use-dark-mode';\n\nfunction Navbar({pages, showLanguageSwitcher, setShowLanguageSwitcher}) {\n  const {i18n, t} = useTranslation();\n  const currentLanguage = Object.keys(locales).includes(i18n?.language)\n    ? i18n?.language\n    : i18n?.options?.fallbackLng[0];\n\n  const [expand, setExpand] = useState(false);\n  const darkMode = useDarkMode(true);\n\n  useLockBodyScroll(expand);\n  const windowSize = useWindowSize();\n\n  usePageLeave(() => setExpand(false));\n\n  const navbarTransition = useTransition(true, {\n    from: {opacity: 0},\n    enter: {opacity: 1},\n  });\n\n  const expandTransition = useTransition(expand, {\n    from: windowSize.width < 769 ? SLIDE_IN_MOBILE : SLIDE_IN,\n    enter: windowSize.width < 769 ? SLIDE_OUT_MOBILE : SLIDE_OUT,\n    leave: windowSize.width < 769 ? SLIDE_IN_MOBILE : SLIDE_IN,\n    config: {mass: 1, tension: 210, friction: 26},\n  });\n\n  const handleMouseEnter = useCallback(() => {\n    if (windowSize.width >= 769) {\n      setExpand(true);\n    }\n  }, [windowSize.width]);\n\n  const handleLanguageSwitcher = useCallback(() => {\n    if (expand) setExpand(false);\n    setShowLanguageSwitcher(!showLanguageSwitcher);\n  }, [expand, showLanguageSwitcher, setExpand, setShowLanguageSwitcher]);\n\n  return navbarTransition((style, item) => (\n    <animated.div className=\"Navbar\" {...{style}}>\n      <div className=\"navbar-left\" onClick={handleLanguageSwitcher}>\n        {locales[currentLanguage]}\n      </div>\n\n      <div className=\"navbar-middle\">\n        <Link to=\"/\" onClick={setExpand.bind(this, false)}>\n          Covid19<span></span>\n        </Link>\n      </div>\n\n      <div\n        className=\"navbar-right\"\n        onMouseEnter={handleMouseEnter}\n        {...(windowSize.width < 769 && {\n          onClick: setExpand.bind(this, !expand),\n        })}\n      >\n        {windowSize.width < 769 && (\n          <span>{expand ? t('Close') : t('Menu')}</span>\n        )}\n\n        {windowSize.width >= 769 && (\n          <>\n            <Link to=\"/\">\n              <span>\n                <Home {...activeNavIcon('/')} />\n              </span>\n            </Link>\n            <Link to=\"/Precausions\">\n              <span>\n                <Book {...activeNavIcon('/Precausions')} />\n              </span>\n            </Link>\n\n            <span>\n              <SunMoon {...{darkMode}} />\n            </span>\n          </>\n        )}\n      </div>\n\n      {expandTransition(\n        (style, item) =>\n          item && (\n            <animated.div {...{style}}>\n              <Expand {...{pages, setExpand, darkMode, windowSize}} />\n            </animated.div>\n          )\n      )}\n    </animated.div>\n  ));\n}\n\nfunction Expand({pages, setExpand, darkMode, windowSize}) {\n  const expandElement = useRef(null);\n  const {t} = useTranslation();\n\n  const handleMouseLeave = useCallback(() => {\n    windowSize.width >= 769 && setExpand(false);\n  }, [setExpand, windowSize.width]);\n\n  return (\n    <div className=\"expand\" ref={expandElement} onMouseLeave={handleMouseLeave}>\n      {pages.map((page, i) => {\n        if (page.showInNavbar === true) {\n          return (\n            <Link\n              to={page.pageLink}\n              key={i}\n              {...(windowSize.width < 769 && {\n                onClick: setExpand.bind(this, false),\n              })}\n            >\n              <span\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n              >\n                {t(page.displayName)}\n              </span>\n            </Link>\n          );\n        }\n        return null;\n      })}\n\n      {windowSize.width < 769 && <SunMoon {...{darkMode}} />}\n    </div>\n  );\n}\n\nexport default Navbar;\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `${window.location.pathname === path ? 'focused' : ''}`,\n});\n\nconst activeNavIcon = (path) => ({\n  style: {\n    stroke: window.location.pathname === path ? '#4c75f2' : '',\n  },\n});\n\nconst SunMoon = ({darkMode}) => {\n  return (\n    <div className=\"SunMoon\" onClick={darkMode.toggle}>\n      <div>{darkMode.value ? <Sun color={'#ffc107'} /> : <Moon />}</div>\n    </div>\n  );\n};\n","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/constants.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/VaccinationHeader.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Footer.js",["164"],"import {memo} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction Footer() {\n  const {t} = useTranslation();\n\n  return <></>;\n}\n\nexport default memo(Footer);\n","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/MapSwitcher.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Actions.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Level.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Minigraphs.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Search.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Table.js",["165","166","167","168","169","170","171","172","173","174","175","176"],"import HeaderCell from './HeaderCell';\nimport TableLoader from './loaders/Table';\nimport {Delta7Icon, DistrictIcon, PerLakhIcon} from './snippets/Icons';\nimport TableDeltaHelper from './snippets/TableDeltaHelper';\nimport Tooltip from './Tooltip';\n\nimport {TABLE_FADE_IN, TABLE_FADE_OUT} from '../animations';\nimport {\n  DISTRICT_TABLE_COUNT,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  TABLE_STATISTICS,\n  TABLE_STATISTICS_EXPANDED,\n  UNASSIGNED_STATE_CODE,\n} from '../constants';\nimport {getStatistic, retry} from '../utils/commonFunctions';\n\nimport {\n  FoldDownIcon,\n  InfoIcon,\n  OrganizationIcon,\n  PeopleIcon,\n  PulseIcon,\n  QuestionIcon,\n  SortAscIcon,\n  SortDescIcon,\n} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport {memo, useCallback, useEffect, useMemo, useState, lazy} from 'react';\nimport {\n  ChevronLeft,\n  ChevronsLeft,\n  ChevronRight,\n  ChevronsRight,\n} from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useTrail, useTransition, animated, config} from 'react-spring';\nimport {useKeyPressEvent, useMeasure, useSessionStorage} from 'react-use';\n// eslint-disable-next-line\nimport worker from 'workerize-loader!../workers/getDistricts';\n\nconst Row = lazy(() => retry(() => import('./Row')));\n\nfunction Table({\n  data: states,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  expandTable,\n  setExpandTable,\n  hideDistrictData,\n  hideDistrictTestData,\n  hideVaccinated,\n  lastDataDate,\n  noDistrictDataStates,\n}) {\n  const {t} = useTranslation();\n  const [sortData, setSortData] = useSessionStorage('sortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n    delta: false,\n  });\n  const [page, setPage] = useState(0);\n  const [delta7Mode, setDelta7Mode] = useState(false);\n\n  const [tableContainerRef, {width: tableWidth}] = useMeasure();\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      if (sortData.sortColumn !== statistic) {\n        setSortData(\n          produce(sortData, (draftSortData) => {\n            if (\n              sortData.sortColumn === 'regionName' ||\n              statistic === 'regionName'\n            ) {\n              draftSortData.isAscending = !sortData.isAscending;\n            }\n            draftSortData.sortColumn = statistic;\n          })\n        );\n      } else {\n        setSortData(\n          produce(sortData, (draftSortData) => {\n            draftSortData.isAscending = !sortData.isAscending;\n          })\n        );\n      }\n    },\n    [sortData, setSortData]\n  );\n\n  const trail = useTrail(5, {\n    from: {transform: 'translate3d(0, 10px, 0)', opacity: 0},\n    to: {transform: 'translate3d(0, 0px, 0)', opacity: 1},\n    config: config.wobbly,\n  });\n\n  const [allDistricts, setAllDistricts] = useState();\n\n  const [tableOption, setTableOption] = useState('States');\n  const [isPerLakh, setIsPerLakh] = useState(false);\n  const [isInfoVisible, setIsInfoVisible] = useState(false);\n\n  const getTableStatistic = useCallback(\n    (data, statistic, type) => {\n      const statisticConfig = STATISTIC_CONFIGS[statistic];\n      if (type == 'total' && statisticConfig?.onlyDelta7) {\n        type = 'delta7';\n      }\n\n      if (statisticConfig?.showDelta && type === 'total' && delta7Mode) {\n        type = 'delta7';\n      }\n\n      return getStatistic(data, type, statistic, {\n        expiredDate: lastDataDate,\n        normalizedByPopulationPer: isPerLakh ? 'lakh' : null,\n      });\n    },\n    [isPerLakh, lastDataDate, delta7Mode]\n  );\n\n  const districts = useMemo(() => {\n    if (!isPerLakh) {\n      return allDistricts;\n    } else {\n      return Object.keys(allDistricts || {})\n        .filter(\n          (districtKey) =>\n            getStatistic(allDistricts[districtKey], 'total', 'population') > 0\n        )\n        .reduce((res, districtKey) => {\n          res[districtKey] = allDistricts[districtKey];\n          return res;\n        }, {});\n    }\n  }, [isPerLakh, allDistricts]);\n\n  const numPages = Math.ceil(\n    Object.keys(districts || {}).length / DISTRICT_TABLE_COUNT\n  );\n\n  const sortingFunction = useCallback(\n    (regionKeyA, regionKeyB) => {\n      if (sortData.sortColumn !== 'regionName') {\n        const statisticConfig = STATISTIC_CONFIGS[sortData.sortColumn];\n        const dataType =\n          sortData.delta && statisticConfig?.showDelta ? 'delta' : 'total';\n\n        const statisticA = getTableStatistic(\n          districts?.[regionKeyA] || states[regionKeyA],\n          sortData.sortColumn,\n          dataType\n        );\n        const statisticB = getTableStatistic(\n          districts?.[regionKeyB] || states[regionKeyB],\n          sortData.sortColumn,\n          dataType\n        );\n        return sortData.isAscending\n          ? statisticA - statisticB\n          : statisticB - statisticA;\n      } else {\n        const regionNameA =\n          districts?.[regionKeyA]?.districtName || STATE_NAMES[regionKeyA];\n        const regionNameB =\n          districts?.[regionKeyB]?.districtName || STATE_NAMES[regionKeyB];\n        return sortData.isAscending\n          ? regionNameA.localeCompare(regionNameB)\n          : regionNameB.localeCompare(regionNameA);\n      }\n    },\n    [\n      districts,\n      getTableStatistic,\n      sortData.delta,\n      sortData.isAscending,\n      sortData.sortColumn,\n      states,\n    ]\n  );\n\n  const _setTableOption = useCallback(() => {\n    setTableOption((prevTableOption) =>\n      prevTableOption === 'States' ? 'Districts' : 'States'\n    );\n  }, []);\n\n  useEffect(() => {\n    const workerInstance = worker();\n    workerInstance.getDistricts(states);\n    workerInstance.addEventListener('message', (message) => {\n      if (message.data.type !== 'RPC') {\n        setAllDistricts(message.data);\n        workerInstance.terminate();\n      }\n    });\n  }, [tableOption, states]);\n\n  useEffect(() => {\n    setPage((p) => Math.max(0, Math.min(p, numPages - 1)));\n  }, [numPages]);\n\n  const handlePageClick = (direction) => {\n    if (Math.abs(direction) === 1) {\n      setPage(Math.min(Math.max(0, page + direction), numPages - 1));\n    } else if (direction < 0) {\n      setPage(0);\n    } else if (direction > 0) {\n      setPage(numPages - 1);\n    }\n  };\n\n  const transition = useTransition(isInfoVisible, {\n    from: TABLE_FADE_OUT,\n    enter: TABLE_FADE_IN,\n    leave: TABLE_FADE_OUT,\n  });\n\n  const tableStatistics = (\n    expandTable ? TABLE_STATISTICS_EXPANDED : TABLE_STATISTICS\n  ).filter(\n    (statistic) =>\n      (tableOption === 'States' ||\n        STATISTIC_CONFIGS[statistic]?.category !== 'tested' ||\n        !hideDistrictTestData) &&\n      (STATISTIC_CONFIGS[statistic]?.category !== 'vaccinated' ||\n        !hideVaccinated)\n  );\n\n  const showDistricts = tableOption === 'Districts' && !hideDistrictData;\n\n  useEffect(() => {\n    if (!showDistricts) {\n      setPage(0);\n    }\n  }, [showDistricts]);\n\n  useKeyPressEvent('?', () => {\n    setIsInfoVisible(!isInfoVisible);\n  });\n\n  return (\n    <div className=\"Table\">\n      <div className=\"table-top\"></div>\n\n      {transition(\n        (style, item) =>\n          item && (\n            <animated.div className=\"table-helper\" {...{style}}>\n              <div className=\"helper-top\">\n                <div className=\"helper-left\">\n                  <div className=\"info-item\">\n                    <div>\n                      <OrganizationIcon size={14} />\n                    </div>\n                    <p>{t('Toggle between States/Districts')}</p>\n                  </div>\n\n                  <div className=\"info-item sort\">\n                    <div>\n                      <SortDescIcon size={14} />\n                    </div>\n                    <p>{t('Sorted by Descending')}</p>\n                  </div>\n\n                  <div className=\"info-item sort\">\n                    <div>\n                      <SortAscIcon size={14} />\n                    </div>\n                    <p>{t('Sorted by Ascending')}</p>\n                  </div>\n\n                  <div className=\"info-item sort\">\n                    <TableDeltaHelper />\n                  </div>\n\n                  <div className=\"info-item notes\">\n                    <div>\n                      <InfoIcon size={15} />\n                    </div>\n                    <p>{t('Notes')}</p>\n                  </div>\n                </div>\n\n                <div className=\"helper-right\">\n                  <div className=\"info-item\">\n                    <p>{t('Units')}</p>\n                  </div>\n                  {Object.entries({'1K': 3, '1L': 5, '1Cr': 7}).map(\n                    ([abbr, exp]) => (\n                      <div className=\"info-item abbr\" key={abbr}>\n                        <h5>{abbr}</h5>\n                        <p>\n                          10\n                          <sup>{exp}</sup>\n                        </p>\n                      </div>\n                    )\n                  )}\n                </div>\n              </div>\n\n              <h5 className=\"text\">\n                {t('Compiled from State Govt. numbers')},{' '}\n                <Link to=\"/about\">{t('know more')}!</Link>\n              </h5>\n            </animated.div>\n          )\n      )}\n\n      <div className=\"table-container\" ref={tableContainerRef}>\n        <div\n          className=\"table fadeInUp\"\n          style={{\n            gridTemplateColumns: `repeat(${tableStatistics.length + 1}, auto)`,\n          }}\n        >\n          <div className=\"row heading\">\n            <div\n              className=\"cell heading\"\n              onClick={handleSortClick.bind(this, 'regionName')}\n            >\n              <div>{t(!showDistricts ? 'State/UT' : 'District')}</div>\n              {sortData.sortColumn === 'regionName' && (\n                <div className={'sort-icon'}>\n                  {sortData.isAscending ? (\n                    <SortAscIcon size={12} />\n                  ) : (\n                    <SortDescIcon size={12} />\n                  )}\n                </div>\n              )}\n            </div>\n\n            {tableStatistics.map((statistic) => (\n              <HeaderCell\n                key={statistic}\n                {...{\n                  statistic,\n                  sortData,\n                  setSortData,\n                }}\n                handleSort={handleSortClick.bind(this, statistic)}\n              />\n            ))}\n          </div>\n\n          {!showDistricts &&\n            Object.keys(states)\n              .filter(\n                (stateCode) =>\n                  stateCode !== 'TT' &&\n                  !(stateCode === UNASSIGNED_STATE_CODE && isPerLakh)\n              )\n              .sort((a, b) => sortingFunction(a, b))\n              .map((stateCode) => {\n                return (\n                  <Row\n                    key={stateCode}\n                    data={states[stateCode]}\n                    noDistrictData={noDistrictDataStates[stateCode]}\n                    {...{\n                      stateCode,\n                      regionHighlighted,\n                      setRegionHighlighted,\n                      expandTable,\n                      tableStatistics,\n                      getTableStatistic,\n                      tableWidth,\n                    }}\n                  />\n                );\n              })}\n\n          {showDistricts && !districts && <TableLoader />}\n\n          {showDistricts &&\n            districts &&\n            Object.keys(districts)\n              .sort((a, b) => sortingFunction(a, b))\n              .slice(\n                page * DISTRICT_TABLE_COUNT,\n                (page + 1) * DISTRICT_TABLE_COUNT\n              )\n              .map((districtKey) => {\n                const noDistrictData =\n                  noDistrictDataStates[districts[districtKey].stateCode];\n                return (\n                  <Row\n                    key={districtKey}\n                    data={districts[districtKey]}\n                    districtName={districts[districtKey].districtName}\n                    {...{\n                      regionHighlighted,\n                      setRegionHighlighted,\n                      expandTable,\n                      tableStatistics,\n                      getTableStatistic,\n                      noDistrictData,\n                    }}\n                  />\n                );\n              })}\n\n          <Row\n            key={'TT'}\n            data={states['TT']}\n            stateCode={'TT'}\n            {...{\n              regionHighlighted,\n              setRegionHighlighted,\n              expandTable,\n              tableStatistics,\n              getTableStatistic,\n            }}\n          />\n        </div>\n      </div>\n      {showDistricts && (\n        <div className=\"paginate\">\n          <div\n            className={classnames('left', {disabled: page === 0})}\n            onClick={handlePageClick.bind(this, -2)}\n          >\n            <ChevronsLeft size={16} />\n          </div>\n          <div\n            className={classnames('left', {disabled: page === 0})}\n            onClick={handlePageClick.bind(this, -1)}\n          >\n            <ChevronLeft size={16} />\n          </div>\n          <h5>{`${page + 1} / ${numPages}`}</h5>\n          <div\n            className={classnames('right', {disabled: page === numPages - 1})}\n            onClick={handlePageClick.bind(this, 1)}\n          >\n            <ChevronRight size={16} />\n          </div>\n          <div\n            className={classnames('right', {disabled: page === numPages - 1})}\n            onClick={handlePageClick.bind(this, 2)}\n          >\n            <ChevronsRight size={16} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      prevProps.regionHighlighted?.districtName,\n      currProps.regionHighlighted?.districtName\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.regionHighlighted?.stateCode,\n      currProps.regionHighlighted?.stateCode\n    )\n  ) {\n    return false;\n  } else if (!equal(prevProps.date, currProps.date)) {\n    return false;\n  } else if (!equal(prevProps.hideDistrictData, currProps.hideDistrictData)) {\n    return false;\n  } else if (\n    !equal(prevProps.hideDistrictTestData, currProps.hideDistrictTestData)\n  ) {\n    return false;\n  } else if (!equal(prevProps.hideVaccinated, currProps.hideVaccinated)) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else if (!equal(prevProps.lastDataDate, currProps.lastDataDate)) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.data['TT'].total.confirmed,\n      currProps.data['TT'].total.confirmed\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(prevProps.noDistrictDataStates, currProps.noDistrictDataStates)\n  ) {\n    return false;\n  } else return true;\n};\n\nexport default memo(Table, isEqual);\n","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/animations.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/hooks/useIsVisible.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/loaders/Table.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/hooks/useStickySWR.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Updates.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Row.js",["177","178","179","180","181","182"],"import Cell from './Cell';\nimport DistrictRow from './DistrictRow';\nimport HeaderCell from './HeaderCell';\nimport Tooltip from './Tooltip';\n\nimport {\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {capitalize, formatLastUpdated} from '../utils/commonFunctions';\n\nimport {\n  AlertIcon,\n  ClockIcon,\n  SortAscIcon,\n  SortDescIcon,\n  FoldUpIcon,\n  GraphIcon,\n  InfoIcon,\n} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport {memo, useCallback, useRef, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {useSessionStorage} from 'react-use';\n\nfunction Row({\n  data,\n  tableStatistics,\n  stateCode,\n  districtName,\n  regionHighlighted,\n  setRegionHighlighted,\n  expandTable,\n  getTableStatistic,\n  tableWidth,\n  noDistrictData,\n}) {\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useSessionStorage('districtSortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n    delta: false,\n  });\n\n  const history = useHistory();\n  const {t} = useTranslation();\n\n  const rowElement = useRef();\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      if (sortData.sortColumn !== statistic) {\n        setSortData(\n          produce(sortData, (draftSortData) => {\n            if (\n              sortData.sortColumn === 'districtName' ||\n              statistic === 'districtName'\n            ) {\n              draftSortData.isAscending = !sortData.isAscending;\n            }\n            draftSortData.sortColumn = statistic;\n          })\n        );\n      } else {\n        setSortData(\n          produce(sortData, (draftSortData) => {\n            draftSortData.isAscending = !sortData.isAscending;\n          })\n        );\n      }\n    },\n    [sortData, setSortData]\n  );\n\n  const sortingFunction = useCallback(\n    (districtNameA, districtNameB) => {\n      if (sortData.sortColumn !== 'districtName') {\n        const statisticConfig = STATISTIC_CONFIGS[sortData.sortColumn];\n        const dataType =\n          sortData.delta && statisticConfig?.showDelta ? 'delta' : 'total';\n\n        const statisticA = getTableStatistic(\n          data.districts[districtNameA],\n          sortData.sortColumn,\n          dataType\n        );\n        const statisticB = getTableStatistic(\n          data.districts[districtNameB],\n          sortData.sortColumn,\n          dataType\n        );\n        return sortData.isAscending\n          ? statisticA - statisticB\n          : statisticB - statisticA;\n      } else {\n        return sortData.isAscending\n          ? districtNameA.localeCompare(districtNameB)\n          : districtNameB.localeCompare(districtNameA);\n      }\n    },\n    [sortData, data, getTableStatistic]\n  );\n\n  const highlightState = useCallback(() => {\n    if (stateCode) {\n      if (regionHighlighted.stateCode !== stateCode) {\n        setRegionHighlighted(\n          produce(regionHighlighted, (draftRegionHighlighted) => {\n            draftRegionHighlighted.stateCode = stateCode;\n            draftRegionHighlighted.districtName = null;\n          })\n        );\n      }\n    } else if (districtName) {\n      if (\n        regionHighlighted.districtName !== districtName ||\n        regionHighlighted.stateCode !== data.stateCode\n      ) {\n        setRegionHighlighted(\n          produce(regionHighlighted, (draftRegionHighlighted) => {\n            draftRegionHighlighted.stateCode = data.stateCode;\n            draftRegionHighlighted.districtName = districtName;\n          })\n        );\n      }\n    }\n  }, [\n    data.stateCode,\n    districtName,\n    regionHighlighted,\n    setRegionHighlighted,\n    stateCode,\n  ]);\n\n  const _setShowDistrict = useCallback(() => {\n    if (data.districts) {\n      setShowDistricts(!showDistricts);\n    }\n  }, [showDistricts, data]);\n\n  let districtNameStr = t(districtName);\n  if (districtName === UNKNOWN_DISTRICT_KEY) {\n    districtNameStr = `${t(UNKNOWN_DISTRICT_KEY)} [${t(\n      STATE_NAMES[data.stateCode]\n    )}]`;\n  }\n\n  const handleStatePageClick = useCallback(\n    (stateCode) => {\n      history.push(`state/${stateCode}`);\n    },\n    [history]\n  );\n\n  const handleCollapse = useCallback(() => {\n    setShowDistricts(false);\n    rowElement.current.scrollIntoView({\n      block: 'start',\n    });\n  }, []);\n\n  return (\n    <>\n      <div\n        className={classnames(\n          'row',\n          {'is-total': stateCode === 'TT'},\n          {\n            'is-highlighted':\n              (stateCode && regionHighlighted?.stateCode === stateCode) ||\n              (districtName &&\n                regionHighlighted?.districtName === districtName &&\n                regionHighlighted?.stateCode === data.stateCode),\n          }\n        )}\n        onMouseEnter={highlightState}\n        onClick={_setShowDistrict}\n        ref={rowElement}\n      >\n        <div className=\"cell\">\n          <div className=\"state-name fadeInUp\">\n            {t(STATE_NAMES[stateCode]) || districtNameStr}\n          </div>\n          {data?.meta?.notes && (\n            <Tooltip message={data.meta.notes}>\n              <InfoIcon size={16} />\n            </Tooltip>\n          )}\n        </div>\n\n        {tableStatistics.map((statistic) => (\n          <Cell\n            key={statistic}\n            noDistrictData={\n              !stateCode &&\n              districtName !== UNKNOWN_DISTRICT_KEY &&\n              noDistrictData\n            }\n            {...{\n              data,\n              statistic,\n              getTableStatistic,\n            }}\n          />\n        ))}\n      </div>\n\n      {showDistricts && (\n        <>\n          <div className=\"state-meta\" style={{width: tableWidth}}>\n            <div className=\"state-meta-top\"></div>\n          </div>\n\n          <div className={classnames('row', 'heading')}>\n            <div\n              className=\"cell heading\"\n              onClick={handleSortClick.bind(this, 'districtName')}\n            >\n              <div className=\"district-name\">{t('District')}</div>\n              {sortData.sortColumn === 'districtName' && (\n                <div className={'sort-icon'}>\n                  {sortData.isAscending ? (\n                    <SortAscIcon size={12} />\n                  ) : (\n                    <SortDescIcon size={12} />\n                  )}\n                </div>\n              )}\n            </div>\n\n            {tableStatistics.map((statistic) => (\n              <HeaderCell\n                key={statistic}\n                {...{statistic, sortData, setSortData}}\n                handleSort={handleSortClick.bind(this, statistic)}\n              />\n            ))}\n          </div>\n        </>\n      )}\n\n      {showDistricts &&\n        Object.keys(data.districts || {})\n          .sort((a, b) => sortingFunction(a, b))\n          .map((districtName) => (\n            <DistrictRow\n              data={data.districts[districtName]}\n              key={districtName}\n              noDistrictData={\n                districtName !== UNKNOWN_DISTRICT_KEY && noDistrictData\n              }\n              {...{\n                tableStatistics,\n                districtName,\n                regionHighlighted,\n                setRegionHighlighted,\n                stateCode,\n                expandTable,\n                getTableStatistic,\n              }}\n            />\n          ))}\n\n      {showDistricts && (\n        <div className=\"spacer-row\" style={{width: tableWidth}}>\n          <div className=\"spacer\">\n            <p>{`End of ${t(STATE_NAMES[stateCode])}'s districts`}</p>\n            <div className=\"fold\" onClick={handleCollapse}>\n              <FoldUpIcon />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data?.total, currProps.data?.total)) {\n    return false;\n  } else if (!equal(prevProps.data?.delta, currProps.data?.delta)) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.stateCode,\n      currProps.regionHighlighted.stateCode\n    ) &&\n      equal(prevProps.regionHighlighted.stateCode, prevProps.stateCode)) ||\n    equal(currProps.regionHighlighted.stateCode, currProps.stateCode)\n  ) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    ) &&\n      equal(\n        prevProps.regionHighlighted.districtName,\n        prevProps.districtName\n      )) ||\n    equal(currProps.regionHighlighted.districtName, currProps.districtName)\n  ) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else if (!equal(prevProps.noDistrictData, currProps.noDistrictData)) {\n    return false;\n  } else if (!equal(prevProps.tableWidth, currProps.tableWidth)) {\n    return false;\n  } else if (!equal(prevProps.getTableStatistic, currProps.getTableStatistic)) {\n    return false;\n  } else if (!equal(prevProps.tableStatistics, currProps.tableStatistics)) {\n    return false;\n  } else return true;\n};\n\nexport default memo(Row, isEqual);\n","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/workers/getDistricts.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/DistrictRow.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Tooltip.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/HeaderCell.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Cell.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/snippets/TableDeltaHelper.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/snippets/Icons.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/ActionsPanel.js",["183","184","185","186","187","188","189","190","191","192","193"],"import Tooltip from './Tooltip';\n\nimport {formatDate, retry} from '../utils/commonFunctions';\n\nimport {BellIcon, BellSlashIcon, HistoryIcon} from '@primer/octicons-react';\nimport {useMemo, useCallback, lazy, Suspense} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nconst Timeline = lazy(() => retry(() => import('./Timeline')));\n\nconst ActionsPanel = ({\n  lastUpdatedDate,\n  newUpdate,\n  isTimelineMode,\n  setIsTimelineMode,\n  showUpdates,\n  date,\n  setDate,\n  dates,\n  setNewUpdate,\n  setShowUpdates,\n}) => {\n  const {t} = useTranslation();\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${500 + index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const handleTimelineClick = useCallback(() => {\n    setIsTimelineMode(true);\n    if (showUpdates) setShowUpdates(!showUpdates);\n  }, [setIsTimelineMode, setShowUpdates, showUpdates]);\n\n  const handleBellClick = useCallback(() => {\n    if (!showUpdates) setNewUpdate(false);\n    setShowUpdates(!showUpdates);\n  }, [showUpdates, setShowUpdates, setNewUpdate]);\n\n  return <div className=\"ActionsPanel\"></div>;\n};\n\nexport default ActionsPanel;\n","/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Timeline.js",[],"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Calendar.js",[],{"ruleId":"194","severity":2,"message":"195","line":4,"column":10,"nodeType":"196","messageId":"197","endLine":4,"endColumn":11},{"ruleId":"194","severity":2,"message":"198","line":32,"column":7,"nodeType":"196","messageId":"197","endLine":32,"endColumn":24},{"ruleId":"194","severity":2,"message":"199","line":36,"column":7,"nodeType":"196","messageId":"197","endLine":36,"endColumn":17},{"ruleId":"194","severity":2,"message":"200","line":37,"column":7,"nodeType":"196","messageId":"197","endLine":37,"endColumn":13},{"ruleId":"194","severity":2,"message":"201","line":46,"column":10,"nodeType":"196","messageId":"197","endLine":46,"endColumn":16},{"ruleId":"194","severity":2,"message":"202","line":54,"column":9,"nodeType":"196","messageId":"197","endLine":54,"endColumn":17},{"ruleId":"194","severity":2,"message":"203","line":136,"column":9,"nodeType":"196","messageId":"197","endLine":136,"endColumn":40},{"ruleId":"194","severity":2,"message":"204","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":14},{"ruleId":"194","severity":2,"message":"205","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":19},{"ruleId":"206","severity":2,"message":"207","line":9,"column":1,"nodeType":"208","endLine":9,"endColumn":46},{"ruleId":"194","severity":2,"message":"209","line":9,"column":9,"nodeType":"196","messageId":"197","endLine":9,"endColumn":23},{"ruleId":"206","severity":2,"message":"210","line":15,"column":1,"nodeType":"208","endLine":15,"endColumn":44},{"ruleId":"194","severity":2,"message":"211","line":15,"column":9,"nodeType":"196","messageId":"197","endLine":15,"endColumn":15},{"ruleId":"194","severity":2,"message":"212","line":17,"column":7,"nodeType":"196","messageId":"197","endLine":17,"endColumn":11},{"ruleId":"213","severity":2,"message":"214","line":32,"column":17,"nodeType":"215","messageId":"216"},{"ruleId":"213","severity":2,"message":"214","line":71,"column":19,"nodeType":"215","messageId":"216"},{"ruleId":"194","severity":2,"message":"217","line":10,"column":15,"nodeType":"196","messageId":"197","endLine":10,"endColumn":25},{"ruleId":"194","severity":2,"message":"218","line":10,"column":44,"nodeType":"196","messageId":"197","endLine":10,"endColumn":49},{"ruleId":"194","severity":2,"message":"195","line":5,"column":10,"nodeType":"196","messageId":"197","endLine":5,"endColumn":11},{"ruleId":"194","severity":2,"message":"219","line":3,"column":9,"nodeType":"196","messageId":"197","endLine":3,"endColumn":19},{"ruleId":"194","severity":2,"message":"220","line":3,"column":21,"nodeType":"196","messageId":"197","endLine":3,"endColumn":33},{"ruleId":"194","severity":2,"message":"221","line":3,"column":35,"nodeType":"196","messageId":"197","endLine":3,"endColumn":46},{"ruleId":"194","severity":2,"message":"222","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":15},{"ruleId":"194","severity":2,"message":"223","line":19,"column":3,"nodeType":"196","messageId":"197","endLine":19,"endColumn":15},{"ruleId":"194","severity":2,"message":"224","line":22,"column":3,"nodeType":"196","messageId":"197","endLine":22,"endColumn":13},{"ruleId":"194","severity":2,"message":"225","line":23,"column":3,"nodeType":"196","messageId":"197","endLine":23,"endColumn":12},{"ruleId":"194","severity":2,"message":"226","line":24,"column":3,"nodeType":"196","messageId":"197","endLine":24,"endColumn":15},{"ruleId":"194","severity":2,"message":"227","line":67,"column":22,"nodeType":"196","messageId":"197","endLine":67,"endColumn":35},{"ruleId":"194","severity":2,"message":"228","line":96,"column":9,"nodeType":"196","messageId":"197","endLine":96,"endColumn":14},{"ruleId":"194","severity":2,"message":"229","line":105,"column":21,"nodeType":"196","messageId":"197","endLine":105,"endColumn":33},{"ruleId":"194","severity":2,"message":"230","line":187,"column":9,"nodeType":"196","messageId":"197","endLine":187,"endColumn":24},{"ruleId":"194","severity":2,"message":"231","line":11,"column":9,"nodeType":"196","messageId":"197","endLine":11,"endColumn":19},{"ruleId":"194","severity":2,"message":"232","line":11,"column":21,"nodeType":"196","messageId":"197","endLine":11,"endColumn":38},{"ruleId":"194","severity":2,"message":"233","line":14,"column":3,"nodeType":"196","messageId":"197","endLine":14,"endColumn":12},{"ruleId":"194","severity":2,"message":"234","line":15,"column":3,"nodeType":"196","messageId":"197","endLine":15,"endColumn":12},{"ruleId":"194","severity":2,"message":"235","line":19,"column":3,"nodeType":"196","messageId":"197","endLine":19,"endColumn":12},{"ruleId":"194","severity":2,"message":"236","line":152,"column":9,"nodeType":"196","messageId":"197","endLine":152,"endColumn":29},{"ruleId":"194","severity":2,"message":"222","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":15},{"ruleId":"194","severity":2,"message":"237","line":3,"column":9,"nodeType":"196","messageId":"197","endLine":3,"endColumn":19},{"ruleId":"194","severity":2,"message":"238","line":5,"column":9,"nodeType":"196","messageId":"197","endLine":5,"endColumn":17},{"ruleId":"194","severity":2,"message":"239","line":5,"column":19,"nodeType":"196","messageId":"197","endLine":5,"endColumn":32},{"ruleId":"194","severity":2,"message":"240","line":5,"column":34,"nodeType":"196","messageId":"197","endLine":5,"endColumn":45},{"ruleId":"194","severity":2,"message":"241","line":6,"column":37,"nodeType":"196","messageId":"197","endLine":6,"endColumn":45},{"ruleId":"194","severity":2,"message":"242","line":9,"column":7,"nodeType":"196","messageId":"197","endLine":9,"endColumn":15},{"ruleId":"194","severity":2,"message":"195","line":23,"column":10,"nodeType":"196","messageId":"197","endLine":23,"endColumn":11},{"ruleId":"194","severity":2,"message":"228","line":25,"column":9,"nodeType":"196","messageId":"197","endLine":25,"endColumn":14},{"ruleId":"194","severity":2,"message":"243","line":37,"column":9,"nodeType":"196","messageId":"197","endLine":37,"endColumn":28},{"ruleId":"194","severity":2,"message":"244","line":42,"column":9,"nodeType":"196","messageId":"197","endLine":42,"endColumn":24},"no-unused-vars","'t' is assigned a value but never used.","Identifier","unusedVar","'VaccinationHeader' is assigned a value but never used.","'Minigraphs' is assigned a value but never used.","'Search' is assigned a value but never used.","'anchor' is assigned a value but never used.","'location' is assigned a value but never used.","'noRegionHighlightedDistrictData' is assigned a value but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","import/order","There should be no empty line within import group","ImportDeclaration","'useTranslation' is defined but never used.","`@mui/icons-material` import should occur before import of `@mui/material/Box`","'Margin' is defined but never used.","'bull' is assigned a value but never used.","react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","Literal","unescapedEntityAlts","'HelpCircle' is defined but never used.","'Users' is defined but never used.","'Delta7Icon' is defined but never used.","'DistrictIcon' is defined but never used.","'PerLakhIcon' is defined but never used.","'Tooltip' is defined but never used.","'FoldDownIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'PulseIcon' is defined but never used.","'QuestionIcon' is defined but never used.","'setDelta7Mode' is assigned a value but never used.","'trail' is assigned a value but never used.","'setIsPerLakh' is assigned a value but never used.","'_setTableOption' is assigned a value but never used.","'capitalize' is defined but never used.","'formatLastUpdated' is defined but never used.","'AlertIcon' is defined but never used.","'ClockIcon' is defined but never used.","'GraphIcon' is defined but never used.","'handleStatePageClick' is assigned a value but never used.","'formatDate' is defined but never used.","'BellIcon' is defined but never used.","'BellSlashIcon' is defined but never used.","'HistoryIcon' is defined but never used.","'Suspense' is defined but never used.","'Timeline' is assigned a value but never used.","'handleTimelineClick' is assigned a value but never used.","'handleBellClick' is assigned a value but never used."]