{"ast":null,"code":"import{SPRING_CONFIG_NUMBERS,STATISTIC_CONFIGS}from'../constants.js';import{formatNumber}from'../utils/commonFunctions';import classnames from'classnames';import equal from'fast-deep-equal';import{memo}from'react';import{animated,useSpring}from'react-spring';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cell=function Cell(_ref){var statistic=_ref.statistic,data=_ref.data,getTableStatistic=_ref.getTableStatistic,noDistrictData=_ref.noDistrictData;var total=getTableStatistic(data,statistic,'total');var delta=getTableStatistic(data,statistic,'delta');var spring=useSpring({total:total,delta:delta,config:SPRING_CONFIG_NUMBERS});var statisticConfig=STATISTIC_CONFIGS[statistic];return/*#__PURE__*/_jsxs(\"div\",{className:\"cell statistic\",children:[(statisticConfig===null||statisticConfig===void 0?void 0:statisticConfig.showDelta)&&/*#__PURE__*/_jsx(animated.div,{className:classnames('delta',\"is-\".concat(statistic)),title:delta,children:spring.delta.to(function(delta){return!noDistrictData||!statisticConfig.hasPrimary?delta>0?\"\\u2191\"+formatNumber(delta,statisticConfig.format):delta<0?\"\\u2193\"+formatNumber(Math.abs(delta),statisticConfig.format):'':'';})}),/*#__PURE__*/_jsx(animated.div,{className:\"total\",title:total,children:spring.total.to(function(total){return!noDistrictData||!statisticConfig.hasPrimary?formatNumber(total,statisticConfig.format,statistic):'-';})})]});};var isCellEqual=function isCellEqual(prevProps,currProps){var _prevProps$data,_currProps$data,_prevProps$data2,_currProps$data2,_prevProps$data3,_currProps$data3;if(!equal((_prevProps$data=prevProps.data)===null||_prevProps$data===void 0?void 0:_prevProps$data.total,(_currProps$data=currProps.data)===null||_currProps$data===void 0?void 0:_currProps$data.total)){return false;}else if(!equal((_prevProps$data2=prevProps.data)===null||_prevProps$data2===void 0?void 0:_prevProps$data2.delta,(_currProps$data2=currProps.data)===null||_currProps$data2===void 0?void 0:_currProps$data2.delta)){return false;}else if(!equal((_prevProps$data3=prevProps.data)===null||_prevProps$data3===void 0?void 0:_prevProps$data3.noDistrictData,(_currProps$data3=currProps.data)===null||_currProps$data3===void 0?void 0:_currProps$data3.noDistrictData)){return false;}else if(!equal(prevProps.getTableStatistic,currProps.getTableStatistic)){return false;}return true;};export default/*#__PURE__*/memo(Cell,isCellEqual);","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Cell.js"],"names":["SPRING_CONFIG_NUMBERS","STATISTIC_CONFIGS","formatNumber","classnames","equal","memo","animated","useSpring","Cell","statistic","data","getTableStatistic","noDistrictData","total","delta","spring","config","statisticConfig","showDelta","to","hasPrimary","format","Math","abs","isCellEqual","prevProps","currProps"],"mappings":"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","sourcesContent":["import {SPRING_CONFIG_NUMBERS, STATISTIC_CONFIGS} from '../constants.js';\nimport {formatNumber} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport {memo} from 'react';\nimport {animated, useSpring} from 'react-spring';\n\nconst Cell = ({statistic, data, getTableStatistic, noDistrictData}) => {\n  const total = getTableStatistic(data, statistic, 'total');\n  const delta = getTableStatistic(data, statistic, 'delta');\n\n  const spring = useSpring({\n    total: total,\n    delta: delta,\n    config: SPRING_CONFIG_NUMBERS,\n  });\n\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n\n  return (\n    <div className=\"cell statistic\">\n      {statisticConfig?.showDelta && (\n        <animated.div\n          className={classnames('delta', `is-${statistic}`)}\n          title={delta}\n        >\n          {spring.delta.to((delta) =>\n            !noDistrictData || !statisticConfig.hasPrimary\n              ? delta > 0\n                ? '\\u2191' + formatNumber(delta, statisticConfig.format)\n                : delta < 0\n                ? '\\u2193' +\n                  formatNumber(Math.abs(delta), statisticConfig.format)\n                : ''\n              : ''\n          )}\n        </animated.div>\n      )}\n\n      <animated.div className=\"total\" title={total}>\n        {spring.total.to((total) =>\n          !noDistrictData || !statisticConfig.hasPrimary\n            ? formatNumber(total, statisticConfig.format, statistic)\n            : '-'\n        )}\n      </animated.div>\n    </div>\n  );\n};\n\nconst isCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data?.total, currProps.data?.total)) {\n    return false;\n  } else if (!equal(prevProps.data?.delta, currProps.data?.delta)) {\n    return false;\n  } else if (\n    !equal(prevProps.data?.noDistrictData, currProps.data?.noDistrictData)\n  ) {\n    return false;\n  } else if (!equal(prevProps.getTableStatistic, currProps.getTableStatistic)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(Cell, isCellEqual);\n"]},"metadata":{},"sourceType":"module"}