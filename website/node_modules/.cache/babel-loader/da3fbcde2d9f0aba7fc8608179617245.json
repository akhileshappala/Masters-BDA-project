{"ast":null,"code":"import Tooltip from'./Tooltip';import{formatDate,retry}from'../utils/commonFunctions';import{BellIcon,BellSlashIcon,HistoryIcon}from'@primer/octicons-react';import{useMemo,useCallback,lazy,Suspense}from'react';import{useTranslation}from'react-i18next';import{jsx as _jsx}from\"react/jsx-runtime\";var Timeline=/*#__PURE__*/lazy(function(){return retry(function(){return import('./Timeline');});});var ActionsPanel=function ActionsPanel(_ref){var lastUpdatedDate=_ref.lastUpdatedDate,newUpdate=_ref.newUpdate,isTimelineMode=_ref.isTimelineMode,setIsTimelineMode=_ref.setIsTimelineMode,showUpdates=_ref.showUpdates,date=_ref.date,setDate=_ref.setDate,dates=_ref.dates,setNewUpdate=_ref.setNewUpdate,setShowUpdates=_ref.setShowUpdates;var _useTranslation=useTranslation(),t=_useTranslation.t;var trail=useMemo(function(){var styles=[];[0,0,0].map(function(element,index){styles.push({animationDelay:\"\".concat(500+index*250,\"ms\")});return null;});return styles;},[]);var handleTimelineClick=useCallback(function(){setIsTimelineMode(true);if(showUpdates)setShowUpdates(!showUpdates);},[setIsTimelineMode,setShowUpdates,showUpdates]);var handleBellClick=useCallback(function(){if(!showUpdates)setNewUpdate(false);setShowUpdates(!showUpdates);},[showUpdates,setShowUpdates,setNewUpdate]);return/*#__PURE__*/_jsx(\"div\",{className:\"ActionsPanel\"});};export default ActionsPanel;","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/ActionsPanel.js"],"names":["Tooltip","formatDate","retry","BellIcon","BellSlashIcon","HistoryIcon","useMemo","useCallback","lazy","Suspense","useTranslation","Timeline","ActionsPanel","lastUpdatedDate","newUpdate","isTimelineMode","setIsTimelineMode","showUpdates","date","setDate","dates","setNewUpdate","setShowUpdates","t","trail","styles","map","element","index","push","animationDelay","handleTimelineClick","handleBellClick"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,CAEA,OAAQC,UAAR,CAAoBC,KAApB,KAAgC,0BAAhC,CAEA,OAAQC,QAAR,CAAkBC,aAAlB,CAAiCC,WAAjC,KAAmD,wBAAnD,CACA,OAAQC,OAAR,CAAiBC,WAAjB,CAA8BC,IAA9B,CAAoCC,QAApC,KAAmD,OAAnD,CACA,OAAQC,cAAR,KAA6B,eAA7B,C,2CAEA,GAAMC,CAAAA,QAAQ,cAAGH,IAAI,CAAC,iBAAMN,CAAAA,KAAK,CAAC,iBAAM,QAAO,YAAP,CAAN,EAAD,CAAX,EAAD,CAArB,CAEA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAWf,IAVJC,CAAAA,eAUI,MAVJA,eAUI,CATJC,SASI,MATJA,SASI,CARJC,cAQI,MARJA,cAQI,CAPJC,iBAOI,MAPJA,iBAOI,CANJC,WAMI,MANJA,WAMI,CALJC,IAKI,MALJA,IAKI,CAJJC,OAII,MAJJA,OAII,CAHJC,KAGI,MAHJA,KAGI,CAFJC,YAEI,MAFJA,YAEI,CADJC,cACI,MADJA,cACI,CACJ,oBAAYZ,cAAc,EAA1B,CAAOa,CAAP,iBAAOA,CAAP,CAEA,GAAMC,CAAAA,KAAK,CAAGlB,OAAO,CAAC,UAAM,CAC1B,GAAMmB,CAAAA,MAAM,CAAG,EAAf,CAEA,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,EAAUC,GAAV,CAAc,SAACC,OAAD,CAAUC,KAAV,CAAoB,CAChCH,MAAM,CAACI,IAAP,CAAY,CACVC,cAAc,WAAK,IAAMF,KAAK,CAAG,GAAnB,MADJ,CAAZ,EAGA,MAAO,KAAP,CACD,CALD,EAMA,MAAOH,CAAAA,MAAP,CACD,CAVoB,CAUlB,EAVkB,CAArB,CAYA,GAAMM,CAAAA,mBAAmB,CAAGxB,WAAW,CAAC,UAAM,CAC5CS,iBAAiB,CAAC,IAAD,CAAjB,CACA,GAAIC,WAAJ,CAAiBK,cAAc,CAAC,CAACL,WAAF,CAAd,CAClB,CAHsC,CAGpC,CAACD,iBAAD,CAAoBM,cAApB,CAAoCL,WAApC,CAHoC,CAAvC,CAKA,GAAMe,CAAAA,eAAe,CAAGzB,WAAW,CAAC,UAAM,CACxC,GAAI,CAACU,WAAL,CAAkBI,YAAY,CAAC,KAAD,CAAZ,CAClBC,cAAc,CAAC,CAACL,WAAF,CAAd,CACD,CAHkC,CAGhC,CAACA,WAAD,CAAcK,cAAd,CAA8BD,YAA9B,CAHgC,CAAnC,CAKA,mBAAO,YAAK,SAAS,CAAC,cAAf,EAAP,CACD,CArCD,CAuCA,cAAeT,CAAAA,YAAf","sourcesContent":["import Tooltip from './Tooltip';\n\nimport {formatDate, retry} from '../utils/commonFunctions';\n\nimport {BellIcon, BellSlashIcon, HistoryIcon} from '@primer/octicons-react';\nimport {useMemo, useCallback, lazy, Suspense} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nconst Timeline = lazy(() => retry(() => import('./Timeline')));\n\nconst ActionsPanel = ({\n  lastUpdatedDate,\n  newUpdate,\n  isTimelineMode,\n  setIsTimelineMode,\n  showUpdates,\n  date,\n  setDate,\n  dates,\n  setNewUpdate,\n  setShowUpdates,\n}) => {\n  const {t} = useTranslation();\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${500 + index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const handleTimelineClick = useCallback(() => {\n    setIsTimelineMode(true);\n    if (showUpdates) setShowUpdates(!showUpdates);\n  }, [setIsTimelineMode, setShowUpdates, showUpdates]);\n\n  const handleBellClick = useCallback(() => {\n    if (!showUpdates) setNewUpdate(false);\n    setShowUpdates(!showUpdates);\n  }, [showUpdates, setShowUpdates, setNewUpdate]);\n\n  return <div className=\"ActionsPanel\"></div>;\n};\n\nexport default ActionsPanel;\n"]},"metadata":{},"sourceType":"module"}