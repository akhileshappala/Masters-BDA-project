{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport HeaderCell from './HeaderCell';\nimport TableLoader from './loaders/Table';\nimport { Delta7Icon, DistrictIcon, PerLakhIcon } from './snippets/Icons';\nimport TableDeltaHelper from './snippets/TableDeltaHelper';\nimport Tooltip from './Tooltip';\nimport { TABLE_FADE_IN, TABLE_FADE_OUT } from '../animations';\nimport { DISTRICT_TABLE_COUNT, STATE_NAMES, STATISTIC_CONFIGS, TABLE_STATISTICS, TABLE_STATISTICS_EXPANDED, UNASSIGNED_STATE_CODE } from '../constants';\nimport { getStatistic, retry } from '../utils/commonFunctions';\nimport { FoldDownIcon, InfoIcon, OrganizationIcon, PeopleIcon, PulseIcon, QuestionIcon, SortAscIcon, SortDescIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport { memo, useCallback, useEffect, useMemo, useState, lazy } from 'react';\nimport { ChevronLeft, ChevronsLeft, ChevronRight, ChevronsRight } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { useTrail, useTransition, animated, config } from 'react-spring';\nimport { useKeyPressEvent, useMeasure, useSessionStorage } from 'react-use'; // eslint-disable-next-line\n\nimport worker from 'workerize-loader!../workers/getDistricts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Row = /*#__PURE__*/lazy(_c = () => retry(() => import('./Row')));\n_c2 = Row;\n\nfunction Table({\n  data: states,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  expandTable,\n  setExpandTable,\n  hideDistrictData,\n  hideDistrictTestData,\n  hideVaccinated,\n  lastDataDate,\n  noDistrictDataStates\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [sortData, setSortData] = useSessionStorage('sortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n    delta: false\n  });\n  const [page, setPage] = useState(0);\n  const [delta7Mode, setDelta7Mode] = useState(false);\n  const [tableContainerRef, {\n    width: tableWidth\n  }] = useMeasure();\n  const handleSortClick = useCallback(statistic => {\n    if (sortData.sortColumn !== statistic) {\n      setSortData(produce(sortData, draftSortData => {\n        if (sortData.sortColumn === 'regionName' || statistic === 'regionName') {\n          draftSortData.isAscending = !sortData.isAscending;\n        }\n\n        draftSortData.sortColumn = statistic;\n      }));\n    } else {\n      setSortData(produce(sortData, draftSortData => {\n        draftSortData.isAscending = !sortData.isAscending;\n      }));\n    }\n  }, [sortData, setSortData]);\n  const trail = useTrail(5, {\n    from: {\n      transform: 'translate3d(0, 10px, 0)',\n      opacity: 0\n    },\n    to: {\n      transform: 'translate3d(0, 0px, 0)',\n      opacity: 1\n    },\n    config: config.wobbly\n  });\n  const [allDistricts, setAllDistricts] = useState();\n  const [tableOption, setTableOption] = useState('States');\n  const [isPerLakh, setIsPerLakh] = useState(false);\n  const [isInfoVisible, setIsInfoVisible] = useState(false);\n  const getTableStatistic = useCallback((data, statistic, type) => {\n    const statisticConfig = STATISTIC_CONFIGS[statistic];\n\n    if (type == 'total' && (statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.onlyDelta7)) {\n      type = 'delta7';\n    }\n\n    if ((statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.showDelta) && type === 'total' && delta7Mode) {\n      type = 'delta7';\n    }\n\n    return getStatistic(data, type, statistic, {\n      expiredDate: lastDataDate,\n      normalizedByPopulationPer: isPerLakh ? 'lakh' : null\n    });\n  }, [isPerLakh, lastDataDate, delta7Mode]);\n  const districts = useMemo(() => {\n    if (!isPerLakh) {\n      return allDistricts;\n    } else {\n      return Object.keys(allDistricts || {}).filter(districtKey => getStatistic(allDistricts[districtKey], 'total', 'population') > 0).reduce((res, districtKey) => {\n        res[districtKey] = allDistricts[districtKey];\n        return res;\n      }, {});\n    }\n  }, [isPerLakh, allDistricts]);\n  const numPages = Math.ceil(Object.keys(districts || {}).length / DISTRICT_TABLE_COUNT);\n  const sortingFunction = useCallback((regionKeyA, regionKeyB) => {\n    if (sortData.sortColumn !== 'regionName') {\n      const statisticConfig = STATISTIC_CONFIGS[sortData.sortColumn];\n      const dataType = sortData.delta && (statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.showDelta) ? 'delta' : 'total';\n      const statisticA = getTableStatistic((districts === null || districts === void 0 ? void 0 : districts[regionKeyA]) || states[regionKeyA], sortData.sortColumn, dataType);\n      const statisticB = getTableStatistic((districts === null || districts === void 0 ? void 0 : districts[regionKeyB]) || states[regionKeyB], sortData.sortColumn, dataType);\n      return sortData.isAscending ? statisticA - statisticB : statisticB - statisticA;\n    } else {\n      var _districts$regionKeyA, _districts$regionKeyB;\n\n      const regionNameA = (districts === null || districts === void 0 ? void 0 : (_districts$regionKeyA = districts[regionKeyA]) === null || _districts$regionKeyA === void 0 ? void 0 : _districts$regionKeyA.districtName) || STATE_NAMES[regionKeyA];\n      const regionNameB = (districts === null || districts === void 0 ? void 0 : (_districts$regionKeyB = districts[regionKeyB]) === null || _districts$regionKeyB === void 0 ? void 0 : _districts$regionKeyB.districtName) || STATE_NAMES[regionKeyB];\n      return sortData.isAscending ? regionNameA.localeCompare(regionNameB) : regionNameB.localeCompare(regionNameA);\n    }\n  }, [districts, getTableStatistic, sortData.delta, sortData.isAscending, sortData.sortColumn, states]);\n\n  const _setTableOption = useCallback(() => {\n    setTableOption(prevTableOption => prevTableOption === 'States' ? 'Districts' : 'States');\n  }, []);\n\n  useEffect(() => {\n    const workerInstance = worker();\n    workerInstance.getDistricts(states);\n    workerInstance.addEventListener('message', message => {\n      if (message.data.type !== 'RPC') {\n        setAllDistricts(message.data);\n        workerInstance.terminate();\n      }\n    });\n  }, [tableOption, states]);\n  useEffect(() => {\n    setPage(p => Math.max(0, Math.min(p, numPages - 1)));\n  }, [numPages]);\n\n  const handlePageClick = direction => {\n    if (Math.abs(direction) === 1) {\n      setPage(Math.min(Math.max(0, page + direction), numPages - 1));\n    } else if (direction < 0) {\n      setPage(0);\n    } else if (direction > 0) {\n      setPage(numPages - 1);\n    }\n  };\n\n  const transition = useTransition(isInfoVisible, {\n    from: TABLE_FADE_OUT,\n    enter: TABLE_FADE_IN,\n    leave: TABLE_FADE_OUT\n  });\n  const tableStatistics = (expandTable ? TABLE_STATISTICS_EXPANDED : TABLE_STATISTICS).filter(statistic => {\n    var _STATISTIC_CONFIGS$st, _STATISTIC_CONFIGS$st2;\n\n    return (tableOption === 'States' || ((_STATISTIC_CONFIGS$st = STATISTIC_CONFIGS[statistic]) === null || _STATISTIC_CONFIGS$st === void 0 ? void 0 : _STATISTIC_CONFIGS$st.category) !== 'tested' || !hideDistrictTestData) && (((_STATISTIC_CONFIGS$st2 = STATISTIC_CONFIGS[statistic]) === null || _STATISTIC_CONFIGS$st2 === void 0 ? void 0 : _STATISTIC_CONFIGS$st2.category) !== 'vaccinated' || !hideVaccinated);\n  });\n  const showDistricts = tableOption === 'Districts' && !hideDistrictData;\n  useEffect(() => {\n    if (!showDistricts) {\n      setPage(0);\n    }\n  }, [showDistricts]);\n  useKeyPressEvent('?', () => {\n    setIsInfoVisible(!isInfoVisible);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-top-left\",\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          message: 'Toggle between states/districts',\n          hold: true,\n          children: /*#__PURE__*/_jsxDEV(animated.div, {\n            className: classnames('toggle', 'option-toggle', {\n              'is-highlighted': showDistricts,\n              disabled: hideDistrictData\n            }),\n            onClick: _setTableOption,\n            style: trail[0],\n            children: /*#__PURE__*/_jsxDEV(DistrictIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          message: 'Per lakh people',\n          hold: true,\n          children: /*#__PURE__*/_jsxDEV(animated.div, {\n            className: classnames('toggle', 'lakh-toggle', {\n              'is-highlighted': isPerLakh\n            }),\n            onClick: setIsPerLakh.bind(this, !isPerLakh),\n            style: trail[1],\n            children: /*#__PURE__*/_jsxDEV(PerLakhIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          message: 'Last 7 day values',\n          hold: true,\n          children: /*#__PURE__*/_jsxDEV(animated.div, {\n            className: classnames('toggle', 'delta-toggle', {\n              'is-highlighted': delta7Mode\n            }),\n            style: trail[2],\n            onClick: setDelta7Mode.bind(this, !delta7Mode),\n            children: /*#__PURE__*/_jsxDEV(Delta7Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n          className: classnames('toggle', 'info-toggle', {\n            'is-highlighted': isInfoVisible\n          }),\n          onClick: setIsInfoVisible.bind(this, !isInfoVisible),\n          style: trail[3],\n          children: /*#__PURE__*/_jsxDEV(QuestionIcon, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        message: `${expandTable ? 'Collapse' : 'Expand'} table`,\n        hold: true,\n        children: /*#__PURE__*/_jsxDEV(animated.div, {\n          className: classnames('toggle', 'expand-table-toggle', {\n            'is-highlighted': expandTable\n          }),\n          style: trail[4],\n          onClick: setExpandTable.bind(this, !expandTable),\n          children: /*#__PURE__*/_jsxDEV(FoldDownIcon, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), transition((style, item) => item && /*#__PURE__*/_jsxDEV(animated.div, {\n      className: \"table-helper\",\n      style,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"helper-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helper-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(OrganizationIcon, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('Toggle between States/Districts')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(PeopleIcon, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('Per Lakh People')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(PulseIcon, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('Last 7 day values')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item sort\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(SortDescIcon, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('Sorted by Descending')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item sort\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(SortAscIcon, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('Sorted by Ascending')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item sort\",\n            children: /*#__PURE__*/_jsxDEV(TableDeltaHelper, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item notes\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(InfoIcon, {\n                size: 15\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('Notes')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helper-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('Units')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 19\n          }, this), Object.entries({\n            '1K': 3,\n            '1L': 5,\n            '1Cr': 7\n          }).map(([abbr, exp]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item abbr\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: abbr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"10\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: exp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 25\n            }, this)]\n          }, abbr, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 23\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text\",\n        children: [t('Compiled from State Govt. numbers'), \",\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/about\",\n          children: [t('know more'), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      ref: tableContainerRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table fadeInUp\",\n        style: {\n          gridTemplateColumns: `repeat(${tableStatistics.length + 1}, auto)`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell heading\",\n            onClick: handleSortClick.bind(this, 'regionName'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: t(!showDistricts ? 'State/UT' : 'District')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), sortData.sortColumn === 'regionName' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'sort-icon',\n              children: sortData.isAscending ? /*#__PURE__*/_jsxDEV(SortAscIcon, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(SortDescIcon, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), tableStatistics.map(statistic => /*#__PURE__*/_jsxDEV(HeaderCell, {\n            statistic,\n            sortData,\n            setSortData,\n            handleSort: handleSortClick.bind(this, statistic)\n          }, statistic, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), !showDistricts && Object.keys(states).filter(stateCode => stateCode !== 'TT' && !(stateCode === UNASSIGNED_STATE_CODE && isPerLakh)).sort((a, b) => sortingFunction(a, b)).map(stateCode => {\n          return /*#__PURE__*/_jsxDEV(Row, {\n            data: states[stateCode],\n            noDistrictData: noDistrictDataStates[stateCode],\n            stateCode,\n            regionHighlighted,\n            setRegionHighlighted,\n            expandTable,\n            tableStatistics,\n            getTableStatistic,\n            tableWidth\n          }, stateCode, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 19\n          }, this);\n        }), showDistricts && !districts && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 43\n        }, this), showDistricts && districts && Object.keys(districts).sort((a, b) => sortingFunction(a, b)).slice(page * DISTRICT_TABLE_COUNT, (page + 1) * DISTRICT_TABLE_COUNT).map(districtKey => {\n          const noDistrictData = noDistrictDataStates[districts[districtKey].stateCode];\n          return /*#__PURE__*/_jsxDEV(Row, {\n            data: districts[districtKey],\n            districtName: districts[districtKey].districtName,\n            regionHighlighted,\n            setRegionHighlighted,\n            expandTable,\n            tableStatistics,\n            getTableStatistic,\n            noDistrictData\n          }, districtKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 19\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Row, {\n          data: states['TT'],\n          stateCode: 'TT',\n          regionHighlighted,\n          setRegionHighlighted,\n          expandTable,\n          tableStatistics,\n          getTableStatistic\n        }, 'TT', false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), showDistricts && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginate\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('left', {\n          disabled: page === 0\n        }),\n        onClick: handlePageClick.bind(this, -2),\n        children: /*#__PURE__*/_jsxDEV(ChevronsLeft, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('left', {\n          disabled: page === 0\n        }),\n        onClick: handlePageClick.bind(this, -1),\n        children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: `${page + 1} / ${numPages}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('right', {\n          disabled: page === numPages - 1\n        }),\n        onClick: handlePageClick.bind(this, 1),\n        children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('right', {\n          disabled: page === numPages - 1\n        }),\n        onClick: handlePageClick.bind(this, 2),\n        children: /*#__PURE__*/_jsxDEV(ChevronsRight, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"+IMlbAJ2MYlV7ony3WSBlaHScE8=\", false, function () {\n  return [useTranslation, useSessionStorage, useMeasure, useTrail, useTransition, useKeyPressEvent];\n});\n\n_c3 = Table;\n\nconst isEqual = (prevProps, currProps) => {\n  var _prevProps$regionHigh, _currProps$regionHigh, _prevProps$regionHigh2, _currProps$regionHigh2;\n\n  if (!equal((_prevProps$regionHigh = prevProps.regionHighlighted) === null || _prevProps$regionHigh === void 0 ? void 0 : _prevProps$regionHigh.districtName, (_currProps$regionHigh = currProps.regionHighlighted) === null || _currProps$regionHigh === void 0 ? void 0 : _currProps$regionHigh.districtName)) {\n    return false;\n  } else if (!equal((_prevProps$regionHigh2 = prevProps.regionHighlighted) === null || _prevProps$regionHigh2 === void 0 ? void 0 : _prevProps$regionHigh2.stateCode, (_currProps$regionHigh2 = currProps.regionHighlighted) === null || _currProps$regionHigh2 === void 0 ? void 0 : _currProps$regionHigh2.stateCode)) {\n    return false;\n  } else if (!equal(prevProps.date, currProps.date)) {\n    return false;\n  } else if (!equal(prevProps.hideDistrictData, currProps.hideDistrictData)) {\n    return false;\n  } else if (!equal(prevProps.hideDistrictTestData, currProps.hideDistrictTestData)) {\n    return false;\n  } else if (!equal(prevProps.hideVaccinated, currProps.hideVaccinated)) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else if (!equal(prevProps.lastDataDate, currProps.lastDataDate)) {\n    return false;\n  } else if (!equal(prevProps.data['TT'].total.confirmed, currProps.data['TT'].total.confirmed)) {\n    return false;\n  } else if (!equal(prevProps.noDistrictDataStates, currProps.noDistrictDataStates)) {\n    return false;\n  } else return true;\n};\n\nexport default _c4 = /*#__PURE__*/memo(Table, isEqual);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Row$lazy\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Table\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/Table.js"],"names":["HeaderCell","TableLoader","Delta7Icon","DistrictIcon","PerLakhIcon","TableDeltaHelper","Tooltip","TABLE_FADE_IN","TABLE_FADE_OUT","DISTRICT_TABLE_COUNT","STATE_NAMES","STATISTIC_CONFIGS","TABLE_STATISTICS","TABLE_STATISTICS_EXPANDED","UNASSIGNED_STATE_CODE","getStatistic","retry","FoldDownIcon","InfoIcon","OrganizationIcon","PeopleIcon","PulseIcon","QuestionIcon","SortAscIcon","SortDescIcon","classnames","equal","produce","memo","useCallback","useEffect","useMemo","useState","lazy","ChevronLeft","ChevronsLeft","ChevronRight","ChevronsRight","useTranslation","Link","useTrail","useTransition","animated","config","useKeyPressEvent","useMeasure","useSessionStorage","worker","Row","Table","data","states","date","timelineDate","regionHighlighted","setRegionHighlighted","expandTable","setExpandTable","hideDistrictData","hideDistrictTestData","hideVaccinated","lastDataDate","noDistrictDataStates","t","sortData","setSortData","sortColumn","isAscending","delta","page","setPage","delta7Mode","setDelta7Mode","tableContainerRef","width","tableWidth","handleSortClick","statistic","draftSortData","trail","from","transform","opacity","to","wobbly","allDistricts","setAllDistricts","tableOption","setTableOption","isPerLakh","setIsPerLakh","isInfoVisible","setIsInfoVisible","getTableStatistic","type","statisticConfig","onlyDelta7","showDelta","expiredDate","normalizedByPopulationPer","districts","Object","keys","filter","districtKey","reduce","res","numPages","Math","ceil","length","sortingFunction","regionKeyA","regionKeyB","dataType","statisticA","statisticB","regionNameA","districtName","regionNameB","localeCompare","_setTableOption","prevTableOption","workerInstance","getDistricts","addEventListener","message","terminate","p","max","min","handlePageClick","direction","abs","transition","enter","leave","tableStatistics","category","showDistricts","disabled","bind","style","item","entries","map","abbr","exp","gridTemplateColumns","stateCode","sort","a","b","slice","noDistrictData","isEqual","prevProps","currProps","total","confirmed"],"mappings":"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","sourcesContent":["import HeaderCell from './HeaderCell';\nimport TableLoader from './loaders/Table';\nimport {Delta7Icon, DistrictIcon, PerLakhIcon} from './snippets/Icons';\nimport TableDeltaHelper from './snippets/TableDeltaHelper';\nimport Tooltip from './Tooltip';\n\nimport {TABLE_FADE_IN, TABLE_FADE_OUT} from '../animations';\nimport {\n  DISTRICT_TABLE_COUNT,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  TABLE_STATISTICS,\n  TABLE_STATISTICS_EXPANDED,\n  UNASSIGNED_STATE_CODE,\n} from '../constants';\nimport {getStatistic, retry} from '../utils/commonFunctions';\n\nimport {\n  FoldDownIcon,\n  InfoIcon,\n  OrganizationIcon,\n  PeopleIcon,\n  PulseIcon,\n  QuestionIcon,\n  SortAscIcon,\n  SortDescIcon,\n} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport {memo, useCallback, useEffect, useMemo, useState, lazy} from 'react';\nimport {\n  ChevronLeft,\n  ChevronsLeft,\n  ChevronRight,\n  ChevronsRight,\n} from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useTrail, useTransition, animated, config} from 'react-spring';\nimport {useKeyPressEvent, useMeasure, useSessionStorage} from 'react-use';\n// eslint-disable-next-line\nimport worker from 'workerize-loader!../workers/getDistricts';\n\nconst Row = lazy(() => retry(() => import('./Row')));\n\nfunction Table({\n  data: states,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  expandTable,\n  setExpandTable,\n  hideDistrictData,\n  hideDistrictTestData,\n  hideVaccinated,\n  lastDataDate,\n  noDistrictDataStates,\n}) {\n  const {t} = useTranslation();\n  const [sortData, setSortData] = useSessionStorage('sortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n    delta: false,\n  });\n  const [page, setPage] = useState(0);\n  const [delta7Mode, setDelta7Mode] = useState(false);\n\n  const [tableContainerRef, {width: tableWidth}] = useMeasure();\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      if (sortData.sortColumn !== statistic) {\n        setSortData(\n          produce(sortData, (draftSortData) => {\n            if (\n              sortData.sortColumn === 'regionName' ||\n              statistic === 'regionName'\n            ) {\n              draftSortData.isAscending = !sortData.isAscending;\n            }\n            draftSortData.sortColumn = statistic;\n          })\n        );\n      } else {\n        setSortData(\n          produce(sortData, (draftSortData) => {\n            draftSortData.isAscending = !sortData.isAscending;\n          })\n        );\n      }\n    },\n    [sortData, setSortData]\n  );\n\n  const trail = useTrail(5, {\n    from: {transform: 'translate3d(0, 10px, 0)', opacity: 0},\n    to: {transform: 'translate3d(0, 0px, 0)', opacity: 1},\n    config: config.wobbly,\n  });\n\n  const [allDistricts, setAllDistricts] = useState();\n\n  const [tableOption, setTableOption] = useState('States');\n  const [isPerLakh, setIsPerLakh] = useState(false);\n  const [isInfoVisible, setIsInfoVisible] = useState(false);\n\n  const getTableStatistic = useCallback(\n    (data, statistic, type) => {\n      const statisticConfig = STATISTIC_CONFIGS[statistic];\n      if (type == 'total' && statisticConfig?.onlyDelta7) {\n        type = 'delta7';\n      }\n\n      if (statisticConfig?.showDelta && type === 'total' && delta7Mode) {\n        type = 'delta7';\n      }\n\n      return getStatistic(data, type, statistic, {\n        expiredDate: lastDataDate,\n        normalizedByPopulationPer: isPerLakh ? 'lakh' : null,\n      });\n    },\n    [isPerLakh, lastDataDate, delta7Mode]\n  );\n\n  const districts = useMemo(() => {\n    if (!isPerLakh) {\n      return allDistricts;\n    } else {\n      return Object.keys(allDistricts || {})\n        .filter(\n          (districtKey) =>\n            getStatistic(allDistricts[districtKey], 'total', 'population') > 0\n        )\n        .reduce((res, districtKey) => {\n          res[districtKey] = allDistricts[districtKey];\n          return res;\n        }, {});\n    }\n  }, [isPerLakh, allDistricts]);\n\n  const numPages = Math.ceil(\n    Object.keys(districts || {}).length / DISTRICT_TABLE_COUNT\n  );\n\n  const sortingFunction = useCallback(\n    (regionKeyA, regionKeyB) => {\n      if (sortData.sortColumn !== 'regionName') {\n        const statisticConfig = STATISTIC_CONFIGS[sortData.sortColumn];\n        const dataType =\n          sortData.delta && statisticConfig?.showDelta ? 'delta' : 'total';\n\n        const statisticA = getTableStatistic(\n          districts?.[regionKeyA] || states[regionKeyA],\n          sortData.sortColumn,\n          dataType\n        );\n        const statisticB = getTableStatistic(\n          districts?.[regionKeyB] || states[regionKeyB],\n          sortData.sortColumn,\n          dataType\n        );\n        return sortData.isAscending\n          ? statisticA - statisticB\n          : statisticB - statisticA;\n      } else {\n        const regionNameA =\n          districts?.[regionKeyA]?.districtName || STATE_NAMES[regionKeyA];\n        const regionNameB =\n          districts?.[regionKeyB]?.districtName || STATE_NAMES[regionKeyB];\n        return sortData.isAscending\n          ? regionNameA.localeCompare(regionNameB)\n          : regionNameB.localeCompare(regionNameA);\n      }\n    },\n    [\n      districts,\n      getTableStatistic,\n      sortData.delta,\n      sortData.isAscending,\n      sortData.sortColumn,\n      states,\n    ]\n  );\n\n  const _setTableOption = useCallback(() => {\n    setTableOption((prevTableOption) =>\n      prevTableOption === 'States' ? 'Districts' : 'States'\n    );\n  }, []);\n\n  useEffect(() => {\n    const workerInstance = worker();\n    workerInstance.getDistricts(states);\n    workerInstance.addEventListener('message', (message) => {\n      if (message.data.type !== 'RPC') {\n        setAllDistricts(message.data);\n        workerInstance.terminate();\n      }\n    });\n  }, [tableOption, states]);\n\n  useEffect(() => {\n    setPage((p) => Math.max(0, Math.min(p, numPages - 1)));\n  }, [numPages]);\n\n  const handlePageClick = (direction) => {\n    if (Math.abs(direction) === 1) {\n      setPage(Math.min(Math.max(0, page + direction), numPages - 1));\n    } else if (direction < 0) {\n      setPage(0);\n    } else if (direction > 0) {\n      setPage(numPages - 1);\n    }\n  };\n\n  const transition = useTransition(isInfoVisible, {\n    from: TABLE_FADE_OUT,\n    enter: TABLE_FADE_IN,\n    leave: TABLE_FADE_OUT,\n  });\n\n  const tableStatistics = (\n    expandTable ? TABLE_STATISTICS_EXPANDED : TABLE_STATISTICS\n  ).filter(\n    (statistic) =>\n      (tableOption === 'States' ||\n        STATISTIC_CONFIGS[statistic]?.category !== 'tested' ||\n        !hideDistrictTestData) &&\n      (STATISTIC_CONFIGS[statistic]?.category !== 'vaccinated' ||\n        !hideVaccinated)\n  );\n\n  const showDistricts = tableOption === 'Districts' && !hideDistrictData;\n\n  useEffect(() => {\n    if (!showDistricts) {\n      setPage(0);\n    }\n  }, [showDistricts]);\n\n  useKeyPressEvent('?', () => {\n    setIsInfoVisible(!isInfoVisible);\n  });\n\n  return (\n    <div className=\"Table\">\n      <div className=\"table-top\">\n        <div className=\"table-top-left\">\n          <Tooltip message={'Toggle between states/districts'} hold>\n            <animated.div\n              className={classnames('toggle', 'option-toggle', {\n                'is-highlighted': showDistricts,\n                disabled: hideDistrictData,\n              })}\n              onClick={_setTableOption}\n              style={trail[0]}\n            >\n              <DistrictIcon />\n            </animated.div>\n          </Tooltip>\n\n          <Tooltip message={'Per lakh people'} hold>\n            <animated.div\n              className={classnames('toggle', 'lakh-toggle', {\n                'is-highlighted': isPerLakh,\n              })}\n              onClick={setIsPerLakh.bind(this, !isPerLakh)}\n              style={trail[1]}\n            >\n              <PerLakhIcon />\n            </animated.div>\n          </Tooltip>\n\n          <Tooltip message={'Last 7 day values'} hold>\n            <animated.div\n              className={classnames('toggle', 'delta-toggle', {\n                'is-highlighted': delta7Mode,\n              })}\n              style={trail[2]}\n              onClick={setDelta7Mode.bind(this, !delta7Mode)}\n            >\n              <Delta7Icon />\n            </animated.div>\n          </Tooltip>\n\n          <animated.div\n            className={classnames('toggle', 'info-toggle', {\n              'is-highlighted': isInfoVisible,\n            })}\n            onClick={setIsInfoVisible.bind(this, !isInfoVisible)}\n            style={trail[3]}\n          >\n            <QuestionIcon size={14} />\n          </animated.div>\n        </div>\n\n        <Tooltip message={`${expandTable ? 'Collapse' : 'Expand'} table`} hold>\n          <animated.div\n            className={classnames('toggle', 'expand-table-toggle', {\n              'is-highlighted': expandTable,\n            })}\n            style={trail[4]}\n            onClick={setExpandTable.bind(this, !expandTable)}\n          >\n            <FoldDownIcon size={16} />\n          </animated.div>\n        </Tooltip>\n      </div>\n\n      {transition(\n        (style, item) =>\n          item && (\n            <animated.div className=\"table-helper\" {...{style}}>\n              <div className=\"helper-top\">\n                <div className=\"helper-left\">\n                  <div className=\"info-item\">\n                    <div>\n                      <OrganizationIcon size={14} />\n                    </div>\n                    <p>{t('Toggle between States/Districts')}</p>\n                  </div>\n\n                  <div className=\"info-item\">\n                    <div>\n                      <PeopleIcon size={16} />\n                    </div>\n                    <p>{t('Per Lakh People')}</p>\n                  </div>\n\n                  <div className=\"info-item\">\n                    <div>\n                      <PulseIcon size={16} />\n                    </div>\n                    <p>{t('Last 7 day values')}</p>\n                  </div>\n\n                  <div className=\"info-item sort\">\n                    <div>\n                      <SortDescIcon size={14} />\n                    </div>\n                    <p>{t('Sorted by Descending')}</p>\n                  </div>\n\n                  <div className=\"info-item sort\">\n                    <div>\n                      <SortAscIcon size={14} />\n                    </div>\n                    <p>{t('Sorted by Ascending')}</p>\n                  </div>\n\n                  <div className=\"info-item sort\">\n                    <TableDeltaHelper />\n                  </div>\n\n                  <div className=\"info-item notes\">\n                    <div>\n                      <InfoIcon size={15} />\n                    </div>\n                    <p>{t('Notes')}</p>\n                  </div>\n                </div>\n\n                <div className=\"helper-right\">\n                  <div className=\"info-item\">\n                    <p>{t('Units')}</p>\n                  </div>\n                  {Object.entries({'1K': 3, '1L': 5, '1Cr': 7}).map(\n                    ([abbr, exp]) => (\n                      <div className=\"info-item abbr\" key={abbr}>\n                        <h5>{abbr}</h5>\n                        <p>\n                          10\n                          <sup>{exp}</sup>\n                        </p>\n                      </div>\n                    )\n                  )}\n                </div>\n              </div>\n\n              <h5 className=\"text\">\n                {t('Compiled from State Govt. numbers')},{' '}\n                <Link to=\"/about\">{t('know more')}!</Link>\n              </h5>\n            </animated.div>\n          )\n      )}\n\n      <div className=\"table-container\" ref={tableContainerRef}>\n        <div\n          className=\"table fadeInUp\"\n          style={{\n            gridTemplateColumns: `repeat(${tableStatistics.length + 1}, auto)`,\n          }}\n        >\n          <div className=\"row heading\">\n            <div\n              className=\"cell heading\"\n              onClick={handleSortClick.bind(this, 'regionName')}\n            >\n              <div>{t(!showDistricts ? 'State/UT' : 'District')}</div>\n              {sortData.sortColumn === 'regionName' && (\n                <div className={'sort-icon'}>\n                  {sortData.isAscending ? (\n                    <SortAscIcon size={12} />\n                  ) : (\n                    <SortDescIcon size={12} />\n                  )}\n                </div>\n              )}\n            </div>\n\n            {tableStatistics.map((statistic) => (\n              <HeaderCell\n                key={statistic}\n                {...{\n                  statistic,\n                  sortData,\n                  setSortData,\n                }}\n                handleSort={handleSortClick.bind(this, statistic)}\n              />\n            ))}\n          </div>\n\n          {!showDistricts &&\n            Object.keys(states)\n              .filter(\n                (stateCode) =>\n                  stateCode !== 'TT' &&\n                  !(stateCode === UNASSIGNED_STATE_CODE && isPerLakh)\n              )\n              .sort((a, b) => sortingFunction(a, b))\n              .map((stateCode) => {\n                return (\n                  <Row\n                    key={stateCode}\n                    data={states[stateCode]}\n                    noDistrictData={noDistrictDataStates[stateCode]}\n                    {...{\n                      stateCode,\n                      regionHighlighted,\n                      setRegionHighlighted,\n                      expandTable,\n                      tableStatistics,\n                      getTableStatistic,\n                      tableWidth,\n                    }}\n                  />\n                );\n              })}\n\n          {showDistricts && !districts && <TableLoader />}\n\n          {showDistricts &&\n            districts &&\n            Object.keys(districts)\n              .sort((a, b) => sortingFunction(a, b))\n              .slice(\n                page * DISTRICT_TABLE_COUNT,\n                (page + 1) * DISTRICT_TABLE_COUNT\n              )\n              .map((districtKey) => {\n                const noDistrictData =\n                  noDistrictDataStates[districts[districtKey].stateCode];\n                return (\n                  <Row\n                    key={districtKey}\n                    data={districts[districtKey]}\n                    districtName={districts[districtKey].districtName}\n                    {...{\n                      regionHighlighted,\n                      setRegionHighlighted,\n                      expandTable,\n                      tableStatistics,\n                      getTableStatistic,\n                      noDistrictData,\n                    }}\n                  />\n                );\n              })}\n\n          <Row\n            key={'TT'}\n            data={states['TT']}\n            stateCode={'TT'}\n            {...{\n              regionHighlighted,\n              setRegionHighlighted,\n              expandTable,\n              tableStatistics,\n              getTableStatistic,\n            }}\n          />\n        </div>\n      </div>\n      {showDistricts && (\n        <div className=\"paginate\">\n          <div\n            className={classnames('left', {disabled: page === 0})}\n            onClick={handlePageClick.bind(this, -2)}\n          >\n            <ChevronsLeft size={16} />\n          </div>\n          <div\n            className={classnames('left', {disabled: page === 0})}\n            onClick={handlePageClick.bind(this, -1)}\n          >\n            <ChevronLeft size={16} />\n          </div>\n          <h5>{`${page + 1} / ${numPages}`}</h5>\n          <div\n            className={classnames('right', {disabled: page === numPages - 1})}\n            onClick={handlePageClick.bind(this, 1)}\n          >\n            <ChevronRight size={16} />\n          </div>\n          <div\n            className={classnames('right', {disabled: page === numPages - 1})}\n            onClick={handlePageClick.bind(this, 2)}\n          >\n            <ChevronsRight size={16} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      prevProps.regionHighlighted?.districtName,\n      currProps.regionHighlighted?.districtName\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.regionHighlighted?.stateCode,\n      currProps.regionHighlighted?.stateCode\n    )\n  ) {\n    return false;\n  } else if (!equal(prevProps.date, currProps.date)) {\n    return false;\n  } else if (!equal(prevProps.hideDistrictData, currProps.hideDistrictData)) {\n    return false;\n  } else if (\n    !equal(prevProps.hideDistrictTestData, currProps.hideDistrictTestData)\n  ) {\n    return false;\n  } else if (!equal(prevProps.hideVaccinated, currProps.hideVaccinated)) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else if (!equal(prevProps.lastDataDate, currProps.lastDataDate)) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.data['TT'].total.confirmed,\n      currProps.data['TT'].total.confirmed\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(prevProps.noDistrictDataStates, currProps.noDistrictDataStates)\n  ) {\n    return false;\n  } else return true;\n};\n\nexport default memo(Table, isEqual);\n"]},"metadata":{},"sourceType":"module"}