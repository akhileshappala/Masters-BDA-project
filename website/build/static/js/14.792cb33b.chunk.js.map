{"version":3,"sources":["components/loaders/Table.js","hooks/useIsVisible.js","hooks/useStickySWR.js","components/Home.js"],"names":["TableLoader","useMeasure","ref","width","windowWidth","window","innerWidth","className","viewBox","height","speed","animate","Array","keys","map","i","x","y","rx","ry","OPTIONS","root","rootMargin","threshold","useIsVisible","elementRef","useState","isVisible","setIsVisible","useEffect","current","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","unobserve","observe","useStickySWR","key","fetcher","swrOptions","options","setOptions","args","useSWR","data","isValidating","error","rest","useUpdateEffect","produce","draftOptions","initialData","Actions","lazy","retry","Footer","Level","MapSwitcher","Table","Home","stateCode","districtName","regionHighlighted","setRegionHighlighted","useLocalStorage","expandTable","setExpandTable","useSessionStorage","mapStatistic","setMapStatistic","date","setDate","timeseries","useLocation","DATA_API_ROOT","revalidateOnMount","refreshInterval","API_REFRESH_INTERVAL","homeRightElement","useRef","useWindowSize","hideDistrictData","DISTRICT_START_DATE","hideDistrictTestData","formatISO","addDays","parseIndiaDate","DISTRICT_TEST_END_DATE","TESTED_EXPIRING_DAYS","representation","hideVaccinated","getStatistic","lastDataDate","useMemo","updatedDates","meta","tested","vaccinated","filter","length","max","lastUpdatedDate","Object","datetime","formatDateObjIndia","noDistrictDataStates","reduce","res","stateData","districts","UNKNOWN_DISTRICT_KEY","PRIMARY_STATISTICS","every","statistic","Helmet","name","content","classnames","expanded","fallback","style","minHeight","dates","position","marginTop"],"mappings":"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","file":"static/js/14.792cb33b.chunk.js","sourcesContent":["import ContentLoader from 'react-content-loader';\nimport {useMeasure} from 'react-use';\n\nconst TableLoader = () => {\n  let [ref, {width}] = useMeasure();\n  const windowWidth = window.innerWidth;\n\n  width = width || (windowWidth >= 769 ? 528 : windowWidth);\n  if (windowWidth < 769) {\n    width -= 30;\n  }\n\n  const height = 45;\n  const rows = 20;\n\n  return (\n    <div ref={ref} className=\"TableLoader\">\n      <ContentLoader\n        viewBox={`0 0 ${width} ${height * rows}`}\n        height={height * rows}\n        width={width}\n        speed={2}\n        animate={false}\n      >\n        {[...Array(rows).keys()].map((i) => (\n          <rect\n            key={i}\n            x=\"0\"\n            y={height * i}\n            rx=\"3\"\n            ry=\"3\"\n            width={width}\n            height={height - 5}\n          />\n        ))}\n      </ContentLoader>\n    </div>\n  );\n};\n\nexport default TableLoader;\n","import {useState, useEffect} from 'react';\n\nconst OPTIONS = {\n  root: null,\n  rootMargin: '0px 0px 0px 0px',\n  threshold: 0,\n};\n\nconst useIsVisible = (elementRef) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    if (elementRef.current) {\n      const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setIsVisible(true);\n            observer.unobserve(elementRef.current);\n          }\n        });\n      }, OPTIONS);\n      observer.observe(elementRef.current);\n    }\n  }, [elementRef]);\n\n  return isVisible;\n};\n\nexport default useIsVisible;\n","import produce from 'immer';\nimport {useState} from 'react';\nimport {useUpdateEffect} from 'react-use';\nimport useSWR from 'swr';\n\nexport function useStickySWR(key, fetcher, swrOptions, ...args) {\n  const [options, setOptions] = useState(swrOptions);\n\n  const {data, isValidating, error, ...rest} = useSWR(\n    key,\n    fetcher,\n    options,\n    ...args\n  );\n\n  useUpdateEffect(() => {\n    setOptions(\n      produce(options, (draftOptions) => {\n        draftOptions.initialData = data;\n      })\n    );\n  }, [data]);\n\n  return {\n    ...rest,\n    isValidating,\n    error,\n    data,\n  };\n}\n\nexport default useStickySWR;\n","import TableLoader from './loaders/Table';\n\nimport {\n  API_REFRESH_INTERVAL,\n  DATA_API_ROOT,\n  DISTRICT_START_DATE,\n  DISTRICT_TEST_END_DATE,\n  PRIMARY_STATISTICS,\n  TESTED_EXPIRING_DAYS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport useStickySWR from '../hooks/useStickySWR';\nimport {\n  fetcher,\n  formatDateObjIndia,\n  getStatistic,\n  parseIndiaDate,\n  retry,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {addDays, formatISO, max} from 'date-fns';\nimport {useMemo, useRef, useState, lazy, Suspense} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useLocation} from 'react-router-dom';\nimport {useLocalStorage, useSessionStorage, useWindowSize} from 'react-use';\n\nconst Actions = lazy(() => retry(() => import('./Actions')));\nconst Footer = lazy(() => retry(() => import('./Footer')));\nconst Level = lazy(() => retry(() => import('./Level')));\nconst VaccinationHeader = lazy(() =>\n  retry(() => import('./VaccinationHeader'))\n);\nconst MapSwitcher = lazy(() => retry(() => import('./MapSwitcher')));\nconst Minigraphs = lazy(() => retry(() => import('./Minigraphs')));\nconst Search = lazy(() => retry(() => import('./Search')));\nconst Table = lazy(() => retry(() => import('./Table')));\n\nfunction Home() {\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: 'TT',\n    districtName: null,\n  });\n\n  const [anchor] = useLocalStorage('anchor', null);\n  const [expandTable, setExpandTable] = useLocalStorage('expandTable', false);\n  const [mapStatistic, setMapStatistic] = useSessionStorage(\n    'mapStatistic',\n    'active'\n  );\n\n  const [date, setDate] = useState('');\n  const location = useLocation();\n\n  const {data: timeseries} = useStickySWR(\n    `${DATA_API_ROOT}/timeseries.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: API_REFRESH_INTERVAL,\n    }\n  );\n\n  const {data} = useStickySWR(\n    `${DATA_API_ROOT}/data${date ? `-${date}` : ''}.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: API_REFRESH_INTERVAL,\n    }\n  );\n\n  const homeRightElement = useRef();\n  const isVisible = useIsVisible(homeRightElement);\n  const {width} = useWindowSize();\n\n  const hideDistrictData = date !== '' && date < DISTRICT_START_DATE;\n  const hideDistrictTestData =\n    date === '' ||\n    date >\n      formatISO(\n        addDays(parseIndiaDate(DISTRICT_TEST_END_DATE), TESTED_EXPIRING_DAYS),\n        {representation: 'date'}\n      );\n\n  const hideVaccinated =\n    getStatistic(data?.['TT'], 'total', 'vaccinated') === 0;\n\n  const lastDataDate = useMemo(() => {\n    const updatedDates = [\n      data?.['TT']?.meta?.date,\n      data?.['TT']?.meta?.tested?.date,\n      data?.['TT']?.meta?.vaccinated?.date,\n    ].filter((date) => date);\n    return updatedDates.length > 0\n      ? formatISO(max(updatedDates.map((date) => parseIndiaDate(date))), {\n          representation: 'date',\n        })\n      : null;\n  }, [data]);\n\n  const lastUpdatedDate = useMemo(() => {\n    const updatedDates = Object.keys(data || {})\n      .map((stateCode) => data?.[stateCode]?.meta?.['last_updated'])\n      .filter((datetime) => datetime);\n    return updatedDates.length > 0\n      ? formatDateObjIndia(\n          max(updatedDates.map((datetime) => parseIndiaDate(datetime)))\n        )\n      : null;\n  }, [data]);\n\n  const noDistrictDataStates = useMemo(\n    () =>\n      // Heuristic: All cases are in Unknown\n      Object.entries(data || {}).reduce((res, [stateCode, stateData]) => {\n        res[stateCode] = !!(\n          stateData?.districts &&\n          stateData.districts?.[UNKNOWN_DISTRICT_KEY] &&\n          PRIMARY_STATISTICS.every(\n            (statistic) =>\n              getStatistic(stateData, 'total', statistic) ===\n              getStatistic(\n                stateData.districts[UNKNOWN_DISTRICT_KEY],\n                'total',\n                statistic\n              )\n          )\n        );\n        return res;\n      }, {}),\n    [data]\n  );\n\n  const noRegionHighlightedDistrictData =\n    regionHighlighted?.stateCode &&\n    regionHighlighted?.districtName &&\n    regionHighlighted.districtName !== UNKNOWN_DISTRICT_KEY &&\n    noDistrictDataStates[regionHighlighted.stateCode];\n\n  return (\n    <>\n      <Helmet>\n        <title>Coronavirus Outbreak in India - covid19india.org</title>\n        <meta\n          name=\"title\"\n          content=\"Coronavirus Outbreak in India: Latest Map and Case Count\"\n        />\n      </Helmet>\n\n      <div className=\"Home\">\n        <div className={classnames('home-left', {expanded: expandTable})}>\n          <div className=\"header\">\n            <>\n              {timeseries && (\n                <Suspense fallback={<div style={{minHeight: '61px'}} />}>\n                  <Actions\n                    {...{\n                      date,\n                      setDate,\n                      dates: Object.keys(timeseries['TT']?.dates),\n                      lastUpdatedDate,\n                    }}\n                  />\n                </Suspense>\n              )}\n            </>\n          </div>\n\n          <div style={{position: 'relative', marginTop: '1rem'}}>\n            {data && (\n              <Suspense fallback={<div style={{height: '50rem'}} />}>\n                {width >= 769 && !expandTable && (\n                  <MapSwitcher {...{mapStatistic, setMapStatistic}} />\n                )}\n                <Level data={data['TT']} />\n              </Suspense>\n            )}\n\n            <></>\n          </div>\n\n          {data && (\n            <Suspense fallback={<TableLoader />}>\n              <Table\n                {...{\n                  data,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  expandTable,\n                  setExpandTable,\n                  hideDistrictData,\n                  hideDistrictTestData,\n                  hideVaccinated,\n                  lastDataDate,\n                  noDistrictDataStates,\n                }}\n              />\n            </Suspense>\n          )}\n        </div>\n      </div>\n\n      {isVisible && (\n        <Suspense fallback={<div />}>\n          <Footer />\n        </Suspense>\n      )}\n    </>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}