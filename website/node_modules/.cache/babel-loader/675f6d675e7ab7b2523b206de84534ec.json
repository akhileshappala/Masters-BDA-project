{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/State.js\",\n    _s = $RefreshSig$();\n\nimport { DATA_API_ROOT, MAP_STATISTICS, PRIMARY_STATISTICS, STATE_NAMES, STATISTIC_CONFIGS, UNKNOWN_DISTRICT_KEY } from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport { fetcher, formatNumber, getStatistic, parseIndiaDate, retry } from '../utils/commonFunctions';\nimport { SmileyIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport { formatISO, max } from 'date-fns';\nimport { memo, useMemo, useState, useEffect, lazy, Suspense, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport { useSessionStorage } from 'react-use';\nimport useSWR from 'swr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DeltaBarGraph = /*#__PURE__*/lazy(_c = () => retry(() => import('./DeltaBarGraph')));\n_c2 = DeltaBarGraph;\nconst Footer = /*#__PURE__*/lazy(_c3 = () => retry(() => import('./Footer')));\n_c4 = Footer;\nconst Level = /*#__PURE__*/lazy(_c5 = () => retry(() => import('./Level')));\n_c6 = Level;\nconst VaccinationHeader = /*#__PURE__*/lazy(_c7 = () => retry(() => import('./VaccinationHeader')));\n_c8 = VaccinationHeader;\nconst MapExplorer = /*#__PURE__*/lazy(_c9 = () => retry(() => import('./MapExplorer')));\n_c10 = MapExplorer;\nconst MapSwitcher = /*#__PURE__*/lazy(_c11 = () => retry(() => import('./MapSwitcher')));\n_c12 = MapSwitcher;\nconst Minigraphs = /*#__PURE__*/lazy(_c13 = () => retry(() => import('./Minigraphs')));\n_c14 = Minigraphs;\nconst StateHeader = /*#__PURE__*/lazy(_c15 = () => retry(() => import('./StateHeader')));\n_c16 = StateHeader;\nconst StateMeta = /*#__PURE__*/lazy(_c17 = () => retry(() => import('./StateMeta')));\n_c18 = StateMeta;\nconst TimeseriesExplorer = /*#__PURE__*/lazy(_c19 = () => retry(() => import('./TimeseriesExplorer')));\n_c20 = TimeseriesExplorer;\n\nfunction State() {\n  _s();\n\n  var _timeseries$stateCode, _stateData$total, _timeseries$stateCode2, _timeseries$stateCode3, _timeseries$stateCode4;\n\n  const {\n    t\n  } = useTranslation();\n  const stateCode = useParams().stateCode.toUpperCase();\n  const [mapStatistic, setMapStatistic] = useSessionStorage('mapStatistic', 'active');\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: stateCode,\n    districtName: null\n  });\n  const [delta7Mode, setDelta7Mode] = useState(false);\n  useEffect(() => {\n    if (regionHighlighted.stateCode !== stateCode) {\n      setRegionHighlighted({\n        stateCode: stateCode,\n        districtName: null\n      });\n      setShowAllDistricts(false);\n    }\n  }, [regionHighlighted.stateCode, stateCode]);\n  const {\n    data: timeseries,\n    error: timeseriesResponseError\n  } = useSWR(`${DATA_API_ROOT}/timeseries-${stateCode}.min.json`, fetcher, {\n    revalidateOnMount: true,\n    refreshInterval: 100000\n  });\n  const {\n    data\n  } = useSWR(`${DATA_API_ROOT}/data.min.json`, fetcher, {\n    revalidateOnMount: true,\n    refreshInterval: 100000\n  });\n  const stateData = data === null || data === void 0 ? void 0 : data[stateCode];\n\n  const toggleShowAllDistricts = () => {\n    setShowAllDistricts(!showAllDistricts);\n  };\n\n  const handleSort = (districtNameA, districtNameB) => {\n    const districtA = stateData.districts[districtNameA];\n    const districtB = stateData.districts[districtNameB];\n    return getStatistic(districtB, 'total', mapStatistic) - getStatistic(districtA, 'total', mapStatistic);\n  };\n\n  const gridRowCount = useMemo(() => {\n    if (!stateData) return;\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount = (stateData === null || stateData === void 0 ? void 0 : stateData.districts) ? Object.keys(stateData.districts).filter(districtName => districtName !== 'Unknown').length : 0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  }, [stateData]);\n  const stateMetaElement = useRef();\n  const isStateMetaVisible = useIsVisible(stateMetaElement);\n  const trail = useMemo(() => {\n    const styles = [];\n    [0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n  const lookback = showAllDistricts ? window.innerWidth >= 540 ? 10 : 8 : 6;\n  const lastDataDate = useMemo(() => {\n    var _stateData$meta, _stateData$meta2, _stateData$meta2$test, _stateData$meta3, _stateData$meta3$vacc;\n\n    const updatedDates = [stateData === null || stateData === void 0 ? void 0 : (_stateData$meta = stateData.meta) === null || _stateData$meta === void 0 ? void 0 : _stateData$meta.date, stateData === null || stateData === void 0 ? void 0 : (_stateData$meta2 = stateData.meta) === null || _stateData$meta2 === void 0 ? void 0 : (_stateData$meta2$test = _stateData$meta2.tested) === null || _stateData$meta2$test === void 0 ? void 0 : _stateData$meta2$test.date, stateData === null || stateData === void 0 ? void 0 : (_stateData$meta3 = stateData.meta) === null || _stateData$meta3 === void 0 ? void 0 : (_stateData$meta3$vacc = _stateData$meta3.vaccinated) === null || _stateData$meta3$vacc === void 0 ? void 0 : _stateData$meta3$vacc.date].filter(date => date);\n    return updatedDates.length > 0 ? formatISO(max(updatedDates.map(date => parseIndiaDate(date))), {\n      representation: 'date'\n    }) : null;\n  }, [stateData]);\n  const primaryStatistic = MAP_STATISTICS.includes(mapStatistic) ? mapStatistic : 'confirmed';\n  const noDistrictData = useMemo(() => {\n    var _stateData$districts;\n\n    // Heuristic: All cases are in Unknown\n    return !!((stateData === null || stateData === void 0 ? void 0 : stateData.districts) && ((_stateData$districts = stateData.districts) === null || _stateData$districts === void 0 ? void 0 : _stateData$districts[UNKNOWN_DISTRICT_KEY]) && PRIMARY_STATISTICS.every(statistic => getStatistic(stateData, 'total', statistic) === getStatistic(stateData.districts[UNKNOWN_DISTRICT_KEY], 'total', statistic)));\n  }, [stateData]);\n  const statisticConfig = STATISTIC_CONFIGS[primaryStatistic];\n  const noRegionHighlightedDistrictData = (regionHighlighted === null || regionHighlighted === void 0 ? void 0 : regionHighlighted.districtName) && regionHighlighted.districtName !== UNKNOWN_DISTRICT_KEY && noDistrictData;\n  const districts = Object.keys((!noDistrictData || !statisticConfig.hasPrimary) && (stateData === null || stateData === void 0 ? void 0 : stateData.districts) || {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Coronavirus Outbreak in \", STATE_NAMES[stateCode], \" - covid19india.org\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"title\",\n        content: `Coronavirus Outbreak in ${STATE_NAMES[stateCode]}: Latest Map and Case Count`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"State\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state-left\",\n        children: [/*#__PURE__*/_jsxDEV(StateHeader, {\n          data: stateData,\n          stateCode: stateCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MapSwitcher, {\n            mapStatistic,\n            setMapStatistic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Level, {\n            data: stateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Minigraphs, {\n            timeseries: timeseries === null || timeseries === void 0 ? void 0 : (_timeseries$stateCode = timeseries[stateCode]) === null || _timeseries$stateCode === void 0 ? void 0 : _timeseries$stateCode.dates,\n            stateCode,\n            forceRender: !!timeseriesResponseError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), (stateData === null || stateData === void 0 ? void 0 : (_stateData$total = stateData.total) === null || _stateData$total === void 0 ? void 0 : _stateData$total.vaccinated1) && /*#__PURE__*/_jsxDEV(VaccinationHeader, {\n          data: stateData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), data && /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              minHeight: '50rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(MapExplorer, {\n            stateCode,\n            data,\n            regionHighlighted,\n            setRegionHighlighted,\n            mapStatistic,\n            setMapStatistic,\n            lastDataDate,\n            delta7Mode,\n            setDelta7Mode,\n            noRegionHighlightedDistrictData,\n            noDistrictData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: stateMetaElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), isStateMetaVisible && data && /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(StateMeta, {\n            stateCode,\n            data,\n            timeseries: timeseries === null || timeseries === void 0 ? void 0 : (_timeseries$stateCode2 = timeseries[stateCode]) === null || _timeseries$stateCode2 === void 0 ? void 0 : _timeseries$stateCode2.dates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state-right\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"district-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classnames('district-bar-top', {\n                expanded: showAllDistricts\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"district-bar-left\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: classnames(primaryStatistic, 'fadeInUp'),\n                  style: trail[0],\n                  children: t('Top districts')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `districts fadeInUp ${showAllDistricts ? 'is-grid' : ''}`,\n                  style: showAllDistricts ? {\n                    gridTemplateRows: `repeat(${gridRowCount}, 2rem)`,\n                    ...trail[1]\n                  } : trail[1],\n                  children: districts.filter(districtName => districtName !== 'Unknown').sort((a, b) => handleSort(a, b)).slice(0, showAllDistricts ? undefined : 5).map(districtName => {\n                    const total = getStatistic(stateData.districts[districtName], 'total', primaryStatistic);\n                    const delta = getStatistic(stateData.districts[districtName], 'delta', primaryStatistic);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"district\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                        children: formatNumber(total)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: t(districtName)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 29\n                      }, this), primaryStatistic !== 'active' && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"delta\",\n                        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                          className: primaryStatistic,\n                          children: delta > 0 ? '\\u2191' + formatNumber(delta) : ''\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 296,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 31\n                      }, this)]\n                    }, districtName, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"district-bar-right fadeInUp\",\n                style: trail[2],\n                children: [timeseries && (primaryStatistic === 'confirmed' || primaryStatistic === 'deceased') && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"happy-sign\",\n                  children: Object.keys(((_timeseries$stateCode3 = timeseries[stateCode]) === null || _timeseries$stateCode3 === void 0 ? void 0 : _timeseries$stateCode3.dates) || {}).slice(-lookback).every(date => getStatistic(timeseries[stateCode].dates[date], 'delta', primaryStatistic) === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `alert ${primaryStatistic === 'confirmed' ? 'is-green' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(SmileyIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"alert-right\",\n                      children: [\"No new \", primaryStatistic, \" cases in the past five days\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(DeltaBarGraph, {\n                  timeseries: timeseries === null || timeseries === void 0 ? void 0 : (_timeseries$stateCode4 = timeseries[stateCode]) === null || _timeseries$stateCode4 === void 0 ? void 0 : _timeseries$stateCode4.dates,\n                  statistic: primaryStatistic,\n                  stateCode,\n                  lookback,\n                  forceRender: !!timeseriesResponseError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"district-bar-bottom\",\n              children: districts.length > 5 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button fadeInUp\",\n                onClick: toggleShowAllDistricts,\n                style: trail[3],\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: t(showAllDistricts ? 'View less' : 'View all')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '3.75rem',\n                  flexBasis: '15%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 33\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(TimeseriesExplorer, {\n              stateCode,\n              timeseries,\n              regionHighlighted,\n              setRegionHighlighted,\n              noRegionHighlightedDistrictData,\n              forceRender: !!timeseriesResponseError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(State, \"h5O5/nqGW5x5u1ERKptedDFetbA=\", false, function () {\n  return [useTranslation, useParams, useSessionStorage, useSWR, useSWR, useIsVisible];\n});\n\n_c21 = State;\nexport default _c22 = /*#__PURE__*/memo(State);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22;\n\n$RefreshReg$(_c, \"DeltaBarGraph$lazy\");\n$RefreshReg$(_c2, \"DeltaBarGraph\");\n$RefreshReg$(_c3, \"Footer$lazy\");\n$RefreshReg$(_c4, \"Footer\");\n$RefreshReg$(_c5, \"Level$lazy\");\n$RefreshReg$(_c6, \"Level\");\n$RefreshReg$(_c7, \"VaccinationHeader$lazy\");\n$RefreshReg$(_c8, \"VaccinationHeader\");\n$RefreshReg$(_c9, \"MapExplorer$lazy\");\n$RefreshReg$(_c10, \"MapExplorer\");\n$RefreshReg$(_c11, \"MapSwitcher$lazy\");\n$RefreshReg$(_c12, \"MapSwitcher\");\n$RefreshReg$(_c13, \"Minigraphs$lazy\");\n$RefreshReg$(_c14, \"Minigraphs\");\n$RefreshReg$(_c15, \"StateHeader$lazy\");\n$RefreshReg$(_c16, \"StateHeader\");\n$RefreshReg$(_c17, \"StateMeta$lazy\");\n$RefreshReg$(_c18, \"StateMeta\");\n$RefreshReg$(_c19, \"TimeseriesExplorer$lazy\");\n$RefreshReg$(_c20, \"TimeseriesExplorer\");\n$RefreshReg$(_c21, \"State\");\n$RefreshReg$(_c22, \"%default%\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/State.js"],"names":["DATA_API_ROOT","MAP_STATISTICS","PRIMARY_STATISTICS","STATE_NAMES","STATISTIC_CONFIGS","UNKNOWN_DISTRICT_KEY","useIsVisible","fetcher","formatNumber","getStatistic","parseIndiaDate","retry","SmileyIcon","classnames","formatISO","max","memo","useMemo","useState","useEffect","lazy","Suspense","useRef","Helmet","useTranslation","useParams","useSessionStorage","useSWR","DeltaBarGraph","Footer","Level","VaccinationHeader","MapExplorer","MapSwitcher","Minigraphs","StateHeader","StateMeta","TimeseriesExplorer","State","t","stateCode","toUpperCase","mapStatistic","setMapStatistic","showAllDistricts","setShowAllDistricts","regionHighlighted","setRegionHighlighted","districtName","delta7Mode","setDelta7Mode","data","timeseries","error","timeseriesResponseError","revalidateOnMount","refreshInterval","stateData","toggleShowAllDistricts","handleSort","districtNameA","districtNameB","districtA","districts","districtB","gridRowCount","gridColumnCount","window","innerWidth","districtCount","Object","keys","filter","length","Math","ceil","stateMetaElement","isStateMetaVisible","trail","styles","map","element","index","push","animationDelay","lookback","lastDataDate","updatedDates","meta","date","tested","vaccinated","representation","primaryStatistic","includes","noDistrictData","every","statistic","statisticConfig","noRegionHighlightedDistrictData","hasPrimary","position","dates","total","vaccinated1","minHeight","expanded","gridTemplateRows","sort","a","b","slice","undefined","delta","height","flexBasis"],"mappings":"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","sourcesContent":["import {\n  DATA_API_ROOT,\n  MAP_STATISTICS,\n  PRIMARY_STATISTICS,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {\n  fetcher,\n  formatNumber,\n  getStatistic,\n  parseIndiaDate,\n  retry,\n} from '../utils/commonFunctions';\n\nimport {SmileyIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport {formatISO, max} from 'date-fns';\nimport {\n  memo,\n  useMemo,\n  useState,\n  useEffect,\n  lazy,\n  Suspense,\n  useRef,\n} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\nimport {useParams} from 'react-router-dom';\nimport {useSessionStorage} from 'react-use';\nimport useSWR from 'swr';\n\nconst DeltaBarGraph = lazy(() => retry(() => import('./DeltaBarGraph')));\nconst Footer = lazy(() => retry(() => import('./Footer')));\nconst Level = lazy(() => retry(() => import('./Level')));\nconst VaccinationHeader = lazy(() =>\n  retry(() => import('./VaccinationHeader'))\n);\nconst MapExplorer = lazy(() => retry(() => import('./MapExplorer')));\nconst MapSwitcher = lazy(() => retry(() => import('./MapSwitcher')));\nconst Minigraphs = lazy(() => retry(() => import('./Minigraphs')));\nconst StateHeader = lazy(() => retry(() => import('./StateHeader')));\nconst StateMeta = lazy(() => retry(() => import('./StateMeta')));\nconst TimeseriesExplorer = lazy(() =>\n  retry(() => import('./TimeseriesExplorer'))\n);\n\nfunction State() {\n  const {t} = useTranslation();\n\n  const stateCode = useParams().stateCode.toUpperCase();\n\n  const [mapStatistic, setMapStatistic] = useSessionStorage(\n    'mapStatistic',\n    'active'\n  );\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: stateCode,\n    districtName: null,\n  });\n  const [delta7Mode, setDelta7Mode] = useState(false);\n\n  useEffect(() => {\n    if (regionHighlighted.stateCode !== stateCode) {\n      setRegionHighlighted({\n        stateCode: stateCode,\n        districtName: null,\n      });\n      setShowAllDistricts(false);\n    }\n  }, [regionHighlighted.stateCode, stateCode]);\n\n  const {data: timeseries, error: timeseriesResponseError} = useSWR(\n    `${DATA_API_ROOT}/timeseries-${stateCode}.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n    }\n  );\n\n  const {data} = useSWR(`${DATA_API_ROOT}/data.min.json`, fetcher, {\n    revalidateOnMount: true,\n    refreshInterval: 100000,\n  });\n\n  const stateData = data?.[stateCode];\n\n  const toggleShowAllDistricts = () => {\n    setShowAllDistricts(!showAllDistricts);\n  };\n\n  const handleSort = (districtNameA, districtNameB) => {\n    const districtA = stateData.districts[districtNameA];\n    const districtB = stateData.districts[districtNameB];\n    return (\n      getStatistic(districtB, 'total', mapStatistic) -\n      getStatistic(districtA, 'total', mapStatistic)\n    );\n  };\n\n  const gridRowCount = useMemo(() => {\n    if (!stateData) return;\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount = stateData?.districts\n      ? Object.keys(stateData.districts).filter(\n          (districtName) => districtName !== 'Unknown'\n        ).length\n      : 0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  }, [stateData]);\n\n  const stateMetaElement = useRef();\n  const isStateMetaVisible = useIsVisible(stateMetaElement);\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const lookback = showAllDistricts ? (window.innerWidth >= 540 ? 10 : 8) : 6;\n\n  const lastDataDate = useMemo(() => {\n    const updatedDates = [\n      stateData?.meta?.date,\n      stateData?.meta?.tested?.date,\n      stateData?.meta?.vaccinated?.date,\n    ].filter((date) => date);\n    return updatedDates.length > 0\n      ? formatISO(max(updatedDates.map((date) => parseIndiaDate(date))), {\n          representation: 'date',\n        })\n      : null;\n  }, [stateData]);\n\n  const primaryStatistic = MAP_STATISTICS.includes(mapStatistic)\n    ? mapStatistic\n    : 'confirmed';\n\n  const noDistrictData = useMemo(() => {\n    // Heuristic: All cases are in Unknown\n    return !!(\n      stateData?.districts &&\n      stateData.districts?.[UNKNOWN_DISTRICT_KEY] &&\n      PRIMARY_STATISTICS.every(\n        (statistic) =>\n          getStatistic(stateData, 'total', statistic) ===\n          getStatistic(\n            stateData.districts[UNKNOWN_DISTRICT_KEY],\n            'total',\n            statistic\n          )\n      )\n    );\n  }, [stateData]);\n\n  const statisticConfig = STATISTIC_CONFIGS[primaryStatistic];\n\n  const noRegionHighlightedDistrictData =\n    regionHighlighted?.districtName &&\n    regionHighlighted.districtName !== UNKNOWN_DISTRICT_KEY &&\n    noDistrictData;\n\n  const districts = Object.keys(\n    ((!noDistrictData || !statisticConfig.hasPrimary) &&\n      stateData?.districts) ||\n      {}\n  );\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Coronavirus Outbreak in {STATE_NAMES[stateCode]} - covid19india.org\n        </title>\n        <meta\n          name=\"title\"\n          content={`Coronavirus Outbreak in ${STATE_NAMES[stateCode]}: Latest Map and Case Count`}\n        />\n      </Helmet>\n\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <StateHeader data={stateData} stateCode={stateCode} />\n\n          <div style={{position: 'relative'}}>\n            <MapSwitcher {...{mapStatistic, setMapStatistic}} />\n            <Level data={stateData} />\n            <Minigraphs\n              timeseries={timeseries?.[stateCode]?.dates}\n              {...{stateCode}}\n              forceRender={!!timeseriesResponseError}\n            />\n          </div>\n\n          {stateData?.total?.vaccinated1 && (\n            <VaccinationHeader data={stateData} />\n          )}\n\n          {data && (\n            <Suspense fallback={<div style={{minHeight: '50rem'}} />}>\n              <MapExplorer\n                {...{\n                  stateCode,\n                  data,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  mapStatistic,\n                  setMapStatistic,\n                  lastDataDate,\n                  delta7Mode,\n                  setDelta7Mode,\n                  noRegionHighlightedDistrictData,\n                  noDistrictData,\n                }}\n              ></MapExplorer>\n            </Suspense>\n          )}\n\n          <span ref={stateMetaElement} />\n\n          {isStateMetaVisible && data && (\n            <Suspense fallback={<div />}>\n              <StateMeta\n                {...{\n                  stateCode,\n                  data,\n                }}\n                timeseries={timeseries?.[stateCode]?.dates}\n              />\n            </Suspense>\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          <>\n            <div className=\"district-bar\">\n              <div\n                className={classnames('district-bar-top', {\n                  expanded: showAllDistricts,\n                })}\n              >\n                <div className=\"district-bar-left\">\n                  <h2\n                    className={classnames(primaryStatistic, 'fadeInUp')}\n                    style={trail[0]}\n                  >\n                    {t('Top districts')}\n                  </h2>\n                  <div\n                    className={`districts fadeInUp ${\n                      showAllDistricts ? 'is-grid' : ''\n                    }`}\n                    style={\n                      showAllDistricts\n                        ? {\n                            gridTemplateRows: `repeat(${gridRowCount}, 2rem)`,\n                            ...trail[1],\n                          }\n                        : trail[1]\n                    }\n                  >\n                    {districts\n                      .filter((districtName) => districtName !== 'Unknown')\n                      .sort((a, b) => handleSort(a, b))\n                      .slice(0, showAllDistricts ? undefined : 5)\n                      .map((districtName) => {\n                        const total = getStatistic(\n                          stateData.districts[districtName],\n                          'total',\n                          primaryStatistic\n                        );\n                        const delta = getStatistic(\n                          stateData.districts[districtName],\n                          'delta',\n                          primaryStatistic\n                        );\n                        return (\n                          <div key={districtName} className=\"district\">\n                            <h2>{formatNumber(total)}</h2>\n                            <h5>{t(districtName)}</h5>\n                            {primaryStatistic !== 'active' && (\n                              <div className=\"delta\">\n                                <h6 className={primaryStatistic}>\n                                  {delta > 0\n                                    ? '\\u2191' + formatNumber(delta)\n                                    : ''}\n                                </h6>\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n\n                <div className=\"district-bar-right fadeInUp\" style={trail[2]}>\n                  {timeseries &&\n                    (primaryStatistic === 'confirmed' ||\n                      primaryStatistic === 'deceased') && (\n                      <div className=\"happy-sign\">\n                        {Object.keys(timeseries[stateCode]?.dates || {})\n                          .slice(-lookback)\n                          .every(\n                            (date) =>\n                              getStatistic(\n                                timeseries[stateCode].dates[date],\n                                'delta',\n                                primaryStatistic\n                              ) === 0\n                          ) && (\n                          <div\n                            className={`alert ${\n                              primaryStatistic === 'confirmed' ? 'is-green' : ''\n                            }`}\n                          >\n                            <SmileyIcon />\n                            <div className=\"alert-right\">\n                              No new {primaryStatistic} cases in the past five\n                              days\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  <DeltaBarGraph\n                    timeseries={timeseries?.[stateCode]?.dates}\n                    statistic={primaryStatistic}\n                    {...{stateCode, lookback}}\n                    forceRender={!!timeseriesResponseError}\n                  />\n                </div>\n              </div>\n\n              <div className=\"district-bar-bottom\">\n                {districts.length > 5 ? (\n                  <button\n                    className=\"button fadeInUp\"\n                    onClick={toggleShowAllDistricts}\n                    style={trail[3]}\n                  >\n                    <span>\n                      {t(showAllDistricts ? 'View less' : 'View all')}\n                    </span>\n                  </button>\n                ) : (\n                  <div style={{height: '3.75rem', flexBasis: '15%'}} />\n                )}\n              </div>\n            </div>\n\n            <Suspense fallback={<div />}>\n              <TimeseriesExplorer\n                {...{\n                  stateCode,\n                  timeseries,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  noRegionHighlightedDistrictData,\n                }}\n                forceRender={!!timeseriesResponseError}\n              />\n            </Suspense>\n          </>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default memo(State);\n"]},"metadata":{},"sourceType":"module"}