{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Level.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { LEVEL_STATISTICS, STATISTIC_CONFIGS, SPRING_CONFIG_NUMBERS } from '../constants';\nimport { capitalize, formatNumber, getStatistic } from '../utils/commonFunctions';\nimport { HeartFillIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport { memo, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { animated, useSpring } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PureLevelItem({\n  statistic,\n  total,\n  delta\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const spring = useSpring({\n    total: total,\n    delta: delta,\n    config: SPRING_CONFIG_NUMBERS\n  });\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(capitalize(statisticConfig.displayName))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.h4, {\n      children: statistic !== 'active' ? delta > 0 ?\n      /* Add space after + because react-spring regex bug */\n      spring.delta.to(delta => `+ ${formatNumber(delta, statisticConfig.format !== 'short' ? statisticConfig.format : 'long', statistic)}`) : /*#__PURE__*/_jsxDEV(HeartFillIcon, {\n        size: 9,\n        verticalAlign: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this) : '\\u00A0'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.h1, {\n      children: spring.total.to(total => formatNumber(total, statisticConfig.format !== 'short' ? statisticConfig.format : 'long', statistic))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PureLevelItem, \"O2ZOpipK9BgoaMYEXbhwIegGVx0=\", false, function () {\n  return [useTranslation, useSpring];\n});\n\n_c = PureLevelItem;\nconst LevelItem = /*#__PURE__*/memo(PureLevelItem);\n_c2 = LevelItem;\n\nfunction Level({\n  data\n}) {\n  _s2();\n\n  const trail = useMemo(() => {\n    const styles = [];\n    LEVEL_STATISTICS.map((statistic, index) => {\n      styles.push({\n        animationDelay: `${750 + index * 250}ms`,\n        width: `calc(${100 / LEVEL_STATISTICS.length}%)`\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Level\",\n    children: LEVEL_STATISTICS.map((statistic, index) => /*#__PURE__*/_jsxDEV(animated.div, {\n      className: classnames('level-item', `is-${statistic}`, 'fadeInUp'),\n      style: trail[index],\n      children: /*#__PURE__*/_jsxDEV(LevelItem, {\n        statistic,\n        total: getStatistic(data, 'total', statistic),\n        delta: getStatistic(data, 'delta', statistic)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Level, \"lckJrQxsPrAUUnQ2ZSZwMOSu8mc=\");\n\n_c3 = Level;\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data, currProps.data)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default _c4 = /*#__PURE__*/memo(Level, isEqual);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PureLevelItem\");\n$RefreshReg$(_c2, \"LevelItem\");\n$RefreshReg$(_c3, \"Level\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Level.js"],"names":["LEVEL_STATISTICS","STATISTIC_CONFIGS","SPRING_CONFIG_NUMBERS","capitalize","formatNumber","getStatistic","HeartFillIcon","classnames","equal","memo","useMemo","useTranslation","animated","useSpring","PureLevelItem","statistic","total","delta","t","spring","config","statisticConfig","displayName","to","format","LevelItem","Level","data","trail","styles","map","index","push","animationDelay","width","length","isEqual","prevProps","currProps"],"mappings":"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","sourcesContent":["import {\n  LEVEL_STATISTICS,\n  STATISTIC_CONFIGS,\n  SPRING_CONFIG_NUMBERS,\n} from '../constants';\nimport {capitalize, formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport {HeartFillIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport {memo, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring} from 'react-spring';\n\nfunction PureLevelItem({statistic, total, delta}) {\n  const {t} = useTranslation();\n  const spring = useSpring({\n    total: total,\n    delta: delta,\n    config: SPRING_CONFIG_NUMBERS,\n  });\n\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n\n  return (\n    <>\n      <h5>{t(capitalize(statisticConfig.displayName))}</h5>\n      <animated.h4>\n        {statistic !== 'active' ? (\n          delta > 0 ? (\n            /* Add space after + because react-spring regex bug */\n            spring.delta.to(\n              (delta) =>\n                `+ ${formatNumber(\n                  delta,\n                  statisticConfig.format !== 'short'\n                    ? statisticConfig.format\n                    : 'long',\n                  statistic\n                )}`\n            )\n          ) : (\n            <HeartFillIcon size={9} verticalAlign={2} />\n          )\n        ) : (\n          '\\u00A0'\n        )}\n      </animated.h4>\n      <animated.h1>\n        {spring.total.to((total) =>\n          formatNumber(\n            total,\n            statisticConfig.format !== 'short'\n              ? statisticConfig.format\n              : 'long',\n            statistic\n          )\n        )}\n      </animated.h1>\n    </>\n  );\n}\n\nconst LevelItem = memo(PureLevelItem);\n\nfunction Level({data}) {\n  const trail = useMemo(() => {\n    const styles = [];\n\n    LEVEL_STATISTICS.map((statistic, index) => {\n      styles.push({\n        animationDelay: `${750 + index * 250}ms`,\n        width: `calc(${100 / LEVEL_STATISTICS.length}%)`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  return (\n    <div className=\"Level\">\n      {LEVEL_STATISTICS.map((statistic, index) => (\n        <animated.div\n          key={index}\n          className={classnames('level-item', `is-${statistic}`, 'fadeInUp')}\n          style={trail[index]}\n        >\n          <LevelItem\n            {...{statistic}}\n            total={getStatistic(data, 'total', statistic)}\n            delta={getStatistic(data, 'delta', statistic)}\n          />\n        </animated.div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data, currProps.data)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(Level, isEqual);\n"]},"metadata":{},"sourceType":"module"}