{"ast":null,"code":"import { scaleOrdinal } from 'd3-scale'; // export const API_DOMAIN = 'http://localhost:8080';\n// export const API_DOMAIN =\n//   'https://raw.githubusercontent.com/shuklaayush/api/test/tmp';\n// export const API_DOMAIN = 'https://api.covid19india.org';\n\nexport const API_DOMAIN = 'https://data.covid19india.org';\nexport const DATA_API_ROOT = `${API_DOMAIN}/v4/min`;\nexport const API_REFRESH_INTERVAL = 100000; // seconds\n\nexport const LOCALE_SHORTHANDS = {\n  english: 'en-US',\n  hindi: 'hi',\n  telugu: 'te',\n  kannada: 'en-US',\n  gujarati: 'gu',\n  marathi: 'en-US',\n  tamil: 'ta',\n  bengali: 'bn',\n  punjabi: 'en-US',\n  malayalam: 'en-US',\n  odiya: 'en-US'\n};\nexport const STATISTIC_CONFIGS = {\n  confirmed: {\n    displayName: 'confirmed',\n    color: '#ff073a',\n    format: 'long',\n    showDelta: true,\n    hasPrimary: true\n  },\n  active: {\n    displayName: 'active',\n    color: '#007bff',\n    format: 'long',\n    hasPrimary: true\n  },\n  recovered: {\n    displayName: 'recovered',\n    color: '#28a745',\n    format: 'long',\n    showDelta: true,\n    hasPrimary: true\n  },\n  deceased: {\n    displayName: 'deceased',\n    color: '#6c757d',\n    format: 'long',\n    showDelta: true,\n    hasPrimary: true\n  },\n  other: {\n    displayName: 'other',\n    format: 'long',\n    color: '#fd7e14',\n    showDelta: true,\n    tableConfig: {\n      notes: 'Migrated cases or non-COVID deaths'\n    },\n    hasPrimary: true\n  },\n  tested: {\n    displayName: 'tested',\n    color: '#4b1eaa',\n    format: 'short',\n    showDelta: true,\n    hideZero: true,\n    category: 'tested'\n  },\n  vaccinated1: {\n    displayName: 'vaccinated (at least one dose)',\n    color: '#fb5581',\n    format: 'short',\n    showDelta: true,\n    hideZero: true,\n    category: 'vaccinated'\n  },\n  vaccinated2: {\n    displayName: 'fully vaccinated',\n    color: '#fb5581',\n    format: 'short',\n    showDelta: true,\n    hideZero: true,\n    category: 'vaccinated'\n  },\n  vaccinated: {\n    displayName: 'vaccine doses administered',\n    color: '#fb5581',\n    format: 'short',\n    showDelta: true,\n    hideZero: true,\n    category: 'vaccinated'\n  },\n  tpr: {\n    displayName: 'test positivity ratio',\n    format: '%',\n    color: '#fd7e14',\n    nonLinear: true,\n    onlyDelta7: true,\n    hideZero: true,\n    category: 'tested',\n    tableConfig: {\n      notes: 'Calculated over last 7 days'\n    },\n    hasPrimary: true\n  },\n  cfr: {\n    displayName: 'case fatality ratio',\n    format: '%',\n    color: '#fd7e14',\n    nonLinear: true,\n    hasPrimary: true\n  },\n  recoveryRatio: {\n    displayName: 'recovery ratio',\n    format: '%',\n    nonLinear: true,\n    tableConfig: {\n      hide: true\n    },\n    hasPrimary: true\n  },\n  activeRatio: {\n    displayName: 'active ratio',\n    format: '%',\n    nonLinear: true,\n    tableConfig: {\n      hide: true\n    },\n    hasPrimary: true\n  },\n  caseGrowth: {\n    displayName: 'Case Growth',\n    format: '%',\n    nonLinear: true,\n    canBeInfinite: true,\n    tableConfig: {\n      notes: 'Percentage growth of cases last week compared to the week a fortnight ago'\n    },\n    hasPrimary: true,\n    mapConfig: {\n      transformFn: val => {\n        if (val <= 0) return '≤ 0%';else if (val <= 20) return '0 - 20%';else if (val <= 50) return '20 - 50%';else if (val > 50) return '> 50%';\n      },\n      colorScale: scaleOrdinal(['≤ 0%', '0 - 20%', '20 - 50%', '> 50%'], ['#1a9850', '#fee08b', '#fc8d59', '#d73027'])\n    }\n  },\n  population: {\n    displayName: 'population',\n    format: 'short',\n    color: '#b6854d',\n    hideZero: true,\n    mapConfig: {\n      spike: true\n    }\n  }\n};\nexport const PRIMARY_STATISTICS = ['confirmed', 'active', 'recovered', 'deceased'];\nexport const LEVEL_STATISTICS = [...PRIMARY_STATISTICS];\nexport const TABLE_STATISTICS = [...PRIMARY_STATISTICS, 'tested', 'vaccinated'];\nexport const TABLE_STATISTICS_EXPANDED = Object.keys(STATISTIC_CONFIGS).filter(_c = statistic => {\n  var _STATISTIC_CONFIGS$st, _STATISTIC_CONFIGS$st2;\n\n  return !((_STATISTIC_CONFIGS$st = STATISTIC_CONFIGS[statistic]) === null || _STATISTIC_CONFIGS$st === void 0 ? void 0 : (_STATISTIC_CONFIGS$st2 = _STATISTIC_CONFIGS$st.tableConfig) === null || _STATISTIC_CONFIGS$st2 === void 0 ? void 0 : _STATISTIC_CONFIGS$st2.hide);\n});\n_c2 = TABLE_STATISTICS_EXPANDED;\nexport const MAP_STATISTICS = [...PRIMARY_STATISTICS];\nexport const TIMESERIES_STATISTICS = [...PRIMARY_STATISTICS, 'tested', 'vaccinated', 'tpr'];\nexport const BRUSH_STATISTICS = ['confirmed'];\nexport const UPDATES_COUNT = 5;\nexport const DISTRICT_TABLE_COUNT = 40;\nexport const D3_TRANSITION_DURATION = 300;\nexport const MINIGRAPH_LOOKBACK_DAYS = 21;\nexport const TESTED_EXPIRING_DAYS = 7;\nexport const UNASSIGNED_STATE_CODE = 'UN';\nexport const UNKNOWN_DISTRICT_KEY = 'Unknown';\nexport const DISTRICT_START_DATE = '2020-04-26';\nexport const DISTRICT_TEST_END_DATE = '2021-02-02';\nexport const ISO_DATE_REGEX = /^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/g;\nexport const INDIA_ISO_SUFFIX = 'T00:00:00+05:30';\nexport const SPRING_CONFIG_NUMBERS = {\n  clamp: true,\n  precision: 1\n};\nexport const TIMESERIES_CHART_TYPES = {\n  total: 'Cumulative',\n  delta: 'Daily'\n};\nexport const TIMESERIES_LOOKBACK_DAYS = [null, 90, 30];\nexport const MAP_VIZS = {\n  CHOROPLETH: 0,\n  BUBBLE: 1,\n  SPIKE: 2\n};\nexport const MAP_VIEWS = {\n  STATES: 0,\n  DISTRICTS: 1\n};\nexport const MAP_TYPES = {\n  COUNTRY: 0,\n  STATE: 1\n};\nexport const MAPS_DIR = process.env.NODE_ENV === 'production' ? '/mini_maps' : '/projected_maps';\nexport const MAP_META = {\n  AP: {\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  AR: {\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  AS: {\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  BR: {\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  CT: {\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  GA: {\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  GJ: {\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  HR: {\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  HP: {\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  JK: {\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  JH: {\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  KA: {\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  KL: {\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  MP: {\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  MH: {\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  MN: {\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  ML: {\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  MZ: {\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  NL: {\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  OR: {\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  PB: {\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  RJ: {\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  SK: {\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  TN: {\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  TG: {\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  TR: {\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  UT: {\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  UP: {\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  WB: {\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  AN: {\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  CH: {\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  DN: {\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  DL: {\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  LA: {\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  LD: {\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  PY: {\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  TT: {\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY\n  }\n};\nexport const MAP_DIMENSIONS = [432, 488];\nexport const MAP_LEGEND_HEIGHT = 50;\nexport const STATE_NAMES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n  TT: 'India',\n  [UNASSIGNED_STATE_CODE]: 'Unassigned'\n};\nconst stateCodes = [];\nconst stateCodesMap = {};\nObject.keys(STATE_NAMES).map((key, index) => {\n  stateCodesMap[STATE_NAMES[key]] = key;\n  stateCodes.push({\n    code: key,\n    name: STATE_NAMES[key]\n  });\n  return null;\n});\nexport const STATE_CODES = stateCodesMap;\nexport const STATE_CODES_ARRAY = stateCodes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TABLE_STATISTICS_EXPANDED$Object.keys(STATISTIC_CONFIGS).filter\");\n$RefreshReg$(_c2, \"TABLE_STATISTICS_EXPANDED\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/constants.js"],"names":["scaleOrdinal","API_DOMAIN","DATA_API_ROOT","API_REFRESH_INTERVAL","LOCALE_SHORTHANDS","english","hindi","telugu","kannada","gujarati","marathi","tamil","bengali","punjabi","malayalam","odiya","STATISTIC_CONFIGS","confirmed","displayName","color","format","showDelta","hasPrimary","active","recovered","deceased","other","tableConfig","notes","tested","hideZero","category","vaccinated1","vaccinated2","vaccinated","tpr","nonLinear","onlyDelta7","cfr","recoveryRatio","hide","activeRatio","caseGrowth","canBeInfinite","mapConfig","transformFn","val","colorScale","population","spike","PRIMARY_STATISTICS","LEVEL_STATISTICS","TABLE_STATISTICS","TABLE_STATISTICS_EXPANDED","Object","keys","filter","statistic","MAP_STATISTICS","TIMESERIES_STATISTICS","BRUSH_STATISTICS","UPDATES_COUNT","DISTRICT_TABLE_COUNT","D3_TRANSITION_DURATION","MINIGRAPH_LOOKBACK_DAYS","TESTED_EXPIRING_DAYS","UNASSIGNED_STATE_CODE","UNKNOWN_DISTRICT_KEY","DISTRICT_START_DATE","DISTRICT_TEST_END_DATE","ISO_DATE_REGEX","INDIA_ISO_SUFFIX","SPRING_CONFIG_NUMBERS","clamp","precision","TIMESERIES_CHART_TYPES","total","delta","TIMESERIES_LOOKBACK_DAYS","MAP_VIZS","CHOROPLETH","BUBBLE","SPIKE","MAP_VIEWS","STATES","DISTRICTS","MAP_TYPES","COUNTRY","STATE","MAPS_DIR","process","env","NODE_ENV","MAP_META","AP","geoDataFile","mapType","AR","AS","BR","CT","GA","GJ","HR","HP","JK","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","LA","LD","PY","TT","MAP_DIMENSIONS","MAP_LEGEND_HEIGHT","STATE_NAMES","stateCodes","stateCodesMap","map","key","index","push","code","name","STATE_CODES","STATE_CODES_ARRAY"],"mappings":"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","sourcesContent":["import {scaleOrdinal} from 'd3-scale';\n\n// export const API_DOMAIN = 'http://localhost:8080';\n// export const API_DOMAIN =\n//   'https://raw.githubusercontent.com/shuklaayush/api/test/tmp';\n// export const API_DOMAIN = 'https://api.covid19india.org';\nexport const API_DOMAIN = 'https://data.covid19india.org';\n\nexport const DATA_API_ROOT = `${API_DOMAIN}/v4/min`;\nexport const API_REFRESH_INTERVAL = 100000; // seconds\n\nexport const LOCALE_SHORTHANDS = {\n  english: 'en-US',\n  hindi: 'hi',\n  telugu: 'te',\n  kannada: 'en-US',\n  gujarati: 'gu',\n  marathi: 'en-US',\n  tamil: 'ta',\n  bengali: 'bn',\n  punjabi: 'en-US',\n  malayalam: 'en-US',\n  odiya: 'en-US',\n};\n\nexport const STATISTIC_CONFIGS = {\n  confirmed: {\n    displayName: 'confirmed',\n    color: '#ff073a',\n    format: 'long',\n    showDelta: true,\n    hasPrimary: true,\n  },\n  active: {\n    displayName: 'active',\n    color: '#007bff',\n    format: 'long',\n    hasPrimary: true,\n  },\n  recovered: {\n    displayName: 'recovered',\n    color: '#28a745',\n    format: 'long',\n    showDelta: true,\n    hasPrimary: true,\n  },\n  deceased: {\n    displayName: 'deceased',\n    color: '#6c757d',\n    format: 'long',\n    showDelta: true,\n    hasPrimary: true,\n  },\n  other: {\n    displayName: 'other',\n    format: 'long',\n    color: '#fd7e14',\n    showDelta: true,\n    tableConfig: {\n      notes: 'Migrated cases or non-COVID deaths',\n    },\n    hasPrimary: true,\n  },\n  tested: {\n    displayName: 'tested',\n    color: '#4b1eaa',\n    format: 'short',\n    showDelta: true,\n    hideZero: true,\n    category: 'tested',\n  },\n  vaccinated1: {\n    displayName: 'vaccinated (at least one dose)',\n    color: '#fb5581',\n    format: 'short',\n    showDelta: true,\n    hideZero: true,\n    category: 'vaccinated',\n  },\n  vaccinated2: {\n    displayName: 'fully vaccinated',\n    color: '#fb5581',\n    format: 'short',\n    showDelta: true,\n    hideZero: true,\n    category: 'vaccinated',\n  },\n  vaccinated: {\n    displayName: 'vaccine doses administered',\n    color: '#fb5581',\n    format: 'short',\n    showDelta: true,\n    hideZero: true,\n    category: 'vaccinated',\n  },\n  tpr: {\n    displayName: 'test positivity ratio',\n    format: '%',\n    color: '#fd7e14',\n    nonLinear: true,\n    onlyDelta7: true,\n    hideZero: true,\n    category: 'tested',\n    tableConfig: {\n      notes: 'Calculated over last 7 days',\n    },\n    hasPrimary: true,\n  },\n  cfr: {\n    displayName: 'case fatality ratio',\n    format: '%',\n    color: '#fd7e14',\n    nonLinear: true,\n    hasPrimary: true,\n  },\n  recoveryRatio: {\n    displayName: 'recovery ratio',\n    format: '%',\n    nonLinear: true,\n    tableConfig: {\n      hide: true,\n    },\n    hasPrimary: true,\n  },\n  activeRatio: {\n    displayName: 'active ratio',\n    format: '%',\n    nonLinear: true,\n    tableConfig: {\n      hide: true,\n    },\n    hasPrimary: true,\n  },\n  caseGrowth: {\n    displayName: 'Case Growth',\n    format: '%',\n    nonLinear: true,\n    canBeInfinite: true,\n    tableConfig: {\n      notes:\n        'Percentage growth of cases last week compared to the week a fortnight ago',\n    },\n    hasPrimary: true,\n    mapConfig: {\n      transformFn: (val) => {\n        if (val <= 0) return '≤ 0%';\n        else if (val <= 20) return '0 - 20%';\n        else if (val <= 50) return '20 - 50%';\n        else if (val > 50) return '> 50%';\n      },\n      colorScale: scaleOrdinal(\n        ['≤ 0%', '0 - 20%', '20 - 50%', '> 50%'],\n        ['#1a9850', '#fee08b', '#fc8d59', '#d73027']\n      ),\n    },\n  },\n  population: {\n    displayName: 'population',\n    format: 'short',\n    color: '#b6854d',\n    hideZero: true,\n    mapConfig: {\n      spike: true,\n    },\n  },\n};\n\nexport const PRIMARY_STATISTICS = [\n  'confirmed',\n  'active',\n  'recovered',\n  'deceased',\n];\n\nexport const LEVEL_STATISTICS = [...PRIMARY_STATISTICS];\n\nexport const TABLE_STATISTICS = [...PRIMARY_STATISTICS, 'tested', 'vaccinated'];\n\nexport const TABLE_STATISTICS_EXPANDED = Object.keys(STATISTIC_CONFIGS).filter(\n  (statistic) => !STATISTIC_CONFIGS[statistic]?.tableConfig?.hide\n);\n\nexport const MAP_STATISTICS = [...PRIMARY_STATISTICS];\n\nexport const TIMESERIES_STATISTICS = [\n  ...PRIMARY_STATISTICS,\n  'tested',\n  'vaccinated',\n  'tpr',\n];\n\nexport const BRUSH_STATISTICS = ['confirmed'];\n\nexport const UPDATES_COUNT = 5;\n\nexport const DISTRICT_TABLE_COUNT = 40;\n\nexport const D3_TRANSITION_DURATION = 300;\n\nexport const MINIGRAPH_LOOKBACK_DAYS = 21;\n\nexport const TESTED_EXPIRING_DAYS = 7;\n\nexport const UNASSIGNED_STATE_CODE = 'UN';\n\nexport const UNKNOWN_DISTRICT_KEY = 'Unknown';\n\nexport const DISTRICT_START_DATE = '2020-04-26';\n\nexport const DISTRICT_TEST_END_DATE = '2021-02-02';\n\nexport const ISO_DATE_REGEX = /^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/g;\n\nexport const INDIA_ISO_SUFFIX = 'T00:00:00+05:30';\n\nexport const SPRING_CONFIG_NUMBERS = {clamp: true, precision: 1};\n\nexport const TIMESERIES_CHART_TYPES = {\n  total: 'Cumulative',\n  delta: 'Daily',\n};\n\nexport const TIMESERIES_LOOKBACK_DAYS = [null, 90, 30];\n\nexport const MAP_VIZS = {\n  CHOROPLETH: 0,\n  BUBBLE: 1,\n  SPIKE: 2,\n};\n\nexport const MAP_VIEWS = {\n  STATES: 0,\n  DISTRICTS: 1,\n};\n\nexport const MAP_TYPES = {\n  COUNTRY: 0,\n  STATE: 1,\n};\n\nexport const MAPS_DIR =\n  process.env.NODE_ENV === 'production' ? '/mini_maps' : '/projected_maps';\n\nexport const MAP_META = {\n  AP: {\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AR: {\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AS: {\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  BR: {\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  CT: {\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  GA: {\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  GJ: {\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  HR: {\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  HP: {\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  JK: {\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  JH: {\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  KA: {\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  KL: {\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MP: {\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MH: {\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MN: {\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  ML: {\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MZ: {\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  NL: {\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  OR: {\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  PB: {\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  RJ: {\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  SK: {\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TN: {\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TG: {\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TR: {\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  UT: {\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  UP: {\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  WB: {\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AN: {\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  CH: {\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  DN: {\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  DL: {\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  LA: {\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  LD: {\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  PY: {\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TT: {\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n  },\n};\n\nexport const MAP_DIMENSIONS = [432, 488];\nexport const MAP_LEGEND_HEIGHT = 50;\n\nexport const STATE_NAMES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n  TT: 'India',\n  [UNASSIGNED_STATE_CODE]: 'Unassigned',\n};\n\nconst stateCodes = [];\nconst stateCodesMap = {};\nObject.keys(STATE_NAMES).map((key, index) => {\n  stateCodesMap[STATE_NAMES[key]] = key;\n  stateCodes.push({code: key, name: STATE_NAMES[key]});\n  return null;\n});\nexport const STATE_CODES = stateCodesMap;\nexport const STATE_CODES_ARRAY = stateCodes;"]},"metadata":{},"sourceType":"module"}