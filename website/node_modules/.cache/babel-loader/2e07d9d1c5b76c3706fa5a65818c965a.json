{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { moveHighlight, listReducer, ListActionTypes } from '../useList';\nimport { SelectActionTypes } from './useSelect.types';\nexport default function selectReducer(state, action) {\n  var open = state.open;\n  var selectionMode = action.context.selectionMode;\n\n  switch (action.type) {\n    case SelectActionTypes.buttonClick:\n      {\n        var _state$selectedValues;\n\n        var itemToHighlight = (_state$selectedValues = state.selectedValues[0]) != null ? _state$selectedValues : moveHighlight(null, 'start', action.context);\n        return _extends({}, state, {\n          open: !open,\n          highlightedValue: !open ? itemToHighlight : null\n        });\n      }\n\n    case SelectActionTypes.buttonArrowKeyDown:\n      if (action.key === 'ArrowDown') {\n        var _state$selectedValues2;\n\n        var _itemToHighlight = (_state$selectedValues2 = state.selectedValues[0]) != null ? _state$selectedValues2 : moveHighlight(null, 'start', action.context);\n\n        return _extends({}, state, {\n          open: true,\n          highlightedValue: _itemToHighlight\n        });\n      }\n\n      if (action.key === 'ArrowUp') {\n        var _state$selectedValues3;\n\n        var _itemToHighlight2 = (_state$selectedValues3 = state.selectedValues[0]) != null ? _state$selectedValues3 : moveHighlight(null, 'end', action.context);\n\n        return _extends({}, state, {\n          open: true,\n          highlightedValue: _itemToHighlight2\n        });\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  var newState = listReducer(state, action);\n\n  switch (action.type) {\n    case ListActionTypes.keyDown:\n      if (selectionMode === 'single' && (action.event.key === 'Enter' || action.event.key === ' ' || action.event.key === 'Escape')) {\n        return _extends({}, newState, {\n          open: false\n        });\n      }\n\n      break;\n\n    case ListActionTypes.itemClick:\n      if (selectionMode === 'single') {\n        return _extends({}, newState, {\n          open: false\n        });\n      }\n\n      break;\n\n    case ListActionTypes.blur:\n      return _extends({}, newState, {\n        open: false\n      });\n\n    default:\n      return newState;\n  }\n\n  return newState;\n}","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/node_modules/@mui/base/useSelect/selectReducer.js"],"names":["_extends","moveHighlight","listReducer","ListActionTypes","SelectActionTypes","selectReducer","state","action","open","selectionMode","context","type","buttonClick","_state$selectedValues","itemToHighlight","selectedValues","highlightedValue","buttonArrowKeyDown","key","_state$selectedValues2","_state$selectedValues3","newState","keyDown","event","itemClick","blur"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { moveHighlight, listReducer, ListActionTypes } from '../useList';\nimport { SelectActionTypes } from './useSelect.types';\nexport default function selectReducer(state, action) {\n  const {\n    open\n  } = state;\n  const {\n    context: {\n      selectionMode\n    }\n  } = action;\n  switch (action.type) {\n    case SelectActionTypes.buttonClick:\n      {\n        var _state$selectedValues;\n        const itemToHighlight = (_state$selectedValues = state.selectedValues[0]) != null ? _state$selectedValues : moveHighlight(null, 'start', action.context);\n        return _extends({}, state, {\n          open: !open,\n          highlightedValue: !open ? itemToHighlight : null\n        });\n      }\n    case SelectActionTypes.buttonArrowKeyDown:\n      if (action.key === 'ArrowDown') {\n        var _state$selectedValues2;\n        const itemToHighlight = (_state$selectedValues2 = state.selectedValues[0]) != null ? _state$selectedValues2 : moveHighlight(null, 'start', action.context);\n        return _extends({}, state, {\n          open: true,\n          highlightedValue: itemToHighlight\n        });\n      }\n      if (action.key === 'ArrowUp') {\n        var _state$selectedValues3;\n        const itemToHighlight = (_state$selectedValues3 = state.selectedValues[0]) != null ? _state$selectedValues3 : moveHighlight(null, 'end', action.context);\n        return _extends({}, state, {\n          open: true,\n          highlightedValue: itemToHighlight\n        });\n      }\n      break;\n    default:\n      break;\n  }\n  const newState = listReducer(state, action);\n  switch (action.type) {\n    case ListActionTypes.keyDown:\n      if (selectionMode === 'single' && (action.event.key === 'Enter' || action.event.key === ' ' || action.event.key === 'Escape')) {\n        return _extends({}, newState, {\n          open: false\n        });\n      }\n      break;\n    case ListActionTypes.itemClick:\n      if (selectionMode === 'single') {\n        return _extends({}, newState, {\n          open: false\n        });\n      }\n      break;\n    case ListActionTypes.blur:\n      return _extends({}, newState, {\n        open: false\n      });\n    default:\n      return newState;\n  }\n  return newState;\n}"]},"metadata":{},"sourceType":"module"}