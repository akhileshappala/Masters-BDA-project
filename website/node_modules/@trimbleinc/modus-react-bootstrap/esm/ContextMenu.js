let _ = t => t,
  _t;
/*!
  Modus React Bootstrap 
  A React-based component library developed as a common, open source platform for all of Trimbleâ€™s web applications built on React.
  Extends React-Bootstrap v1.6.5
  Copyright (c) 2022 Trimble Inc.
 */

import React, { useCallback, useEffect } from 'react';
import styled from 'styled-components';
import classNames from 'classnames';
import Dropdown from './Dropdown';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const ContextMenuStyled = styled.div(_t || (_t = _`
  position: fixed;
  z-index: 9999;
  left: 0;
  top: 0;
  min-width: 150px;
  cursor: pointer;

  .list-group-item + .dropdown-menu {
    padding: 0;
  }
`));
function ContextMenu(props) {
  const {
    menu,
    anchorPointX,
    anchorPointY,
    size,
    onClose,
    ...rest
  } = props;
  const ref = React.useRef(null);
  const handleClickOutside = useCallback(e => {
    if (ref.current && !ref.current.contains(e.target)) {
      onClose(e);
    }
  }, [onClose]);
  useEffect(() => {
    if (!(typeof window === 'undefined' || !window.document)) {
      window.document.addEventListener('mousedown', handleClickOutside);
    }
    return () => {
      if (!(typeof window === 'undefined' || !window.document)) {
        window.document.removeEventListener('mousedown', handleClickOutside);
      }
    };
  }, [handleClickOutside]);
  return /*#__PURE__*/_jsx(ContextMenuStyled, {
    className: classNames('context-menu list-group', size === 'sm' && 'list-group-condensed'),
    ref: ref,
    style: {
      transform: `translate(calc(${anchorPointX}px), calc(${anchorPointY}px))`
    },
    ...rest,
    children: menu.map((item, index) => item.children ? /*#__PURE__*/_jsxs(Dropdown, {
      drop: "right",
      children: [/*#__PURE__*/_jsx(Dropdown.Toggle, {
        as: "li",
        className: "list-group-item",
        children: /*#__PURE__*/_jsx("span", {
          style: {
            marginRight: '10%'
          },
          children: item.title
        })
      }), /*#__PURE__*/_jsx(Dropdown.Menu, {
        className: "dropdown-menu-md",
        children: /*#__PURE__*/_jsx("ul", {
          className: "list-group dropdown-item p-0 m-0",
          children: item.children.map((childItem, childIndex) => /*#__PURE__*/_jsx("li", {
            className: "list-group-item",
            onClick: childItem.onClick,
            style: {
              wordWrap: 'break-word'
            },
            children: childItem.title
          }, `child_list_item_${childIndex}`))
        })
      })]
    }, `list_item_${index}`) : /*#__PURE__*/_jsx("li", {
      className: "list-group-item",
      onClick: item.onClick,
      children: item.title
    }, `list_item_${index}`))
  });
}
export default ContextMenu;