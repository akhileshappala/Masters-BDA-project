{"ast":null,"code":"import _slicedToArray from\"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{MINIGRAPH_LOOKBACK_DAYS,LEVEL_STATISTICS,STATISTIC_CONFIGS}from'../constants';import{getStatistic,getIndiaDateYesterdayISO,parseIndiaDate}from'../utils/commonFunctions';import classnames from'classnames';import{max}from'd3-array';import{interpolatePath}from'd3-interpolate-path';import{scaleTime,scaleLinear}from'd3-scale';import{select}from'd3-selection';import{line,curveMonotoneX}from'd3-shape';import'd3-transition';import{formatISO,subDays}from'date-fns';import equal from'fast-deep-equal';import{memo,useCallback,useEffect,useRef,useMemo}from'react';import{useMeasure}from'react-use';// Dimensions\nimport{jsx as _jsx}from\"react/jsx-runtime\";var margin={top:10,right:10,bottom:2,left:10};var height=75;var maxWidth=120;function Minigraphs(_ref){var timeseries=_ref.timeseries,timelineDate=_ref.date;var refs=useRef([]);var endDate=timelineDate||getIndiaDateYesterdayISO();var _useMeasure=useMeasure(),_useMeasure2=_slicedToArray(_useMeasure,2),wrapperRef=_useMeasure2[0],width=_useMeasure2[1].width;width=Math.min(width,maxWidth);var dates=useMemo(function(){var pastDates=Object.keys(timeseries||{}).filter(function(date){return date<=endDate;});var lastDate=pastDates[pastDates.length-1];var cutOffDateLower=formatISO(subDays(parseIndiaDate(lastDate),MINIGRAPH_LOOKBACK_DAYS),{representation:'date'});return pastDates.filter(function(date){return date>=cutOffDateLower;});},[endDate,timeseries]);var getMinigraphStatistic=useCallback(function(date,statistic){return getStatistic(timeseries===null||timeseries===void 0?void 0:timeseries[date],'delta',statistic);},[timeseries]);useEffect(function(){if(!width)return;var T=dates.length;var chartRight=width-margin.right;var chartBottom=height-margin.bottom;var xScale=scaleTime().clamp(true).domain([parseIndiaDate(dates[0]||endDate),parseIndiaDate(dates[T-1])||endDate]).range([margin.left,chartRight]);refs.current.forEach(function(ref,index){var svg=select(ref);var statistic=LEVEL_STATISTICS[index];var color=STATISTIC_CONFIGS[statistic].color;var dailyMaxAbs=max(dates,function(date){return Math.abs(getMinigraphStatistic(date,statistic));});var yScale=scaleLinear().clamp(true).domain([-dailyMaxAbs,dailyMaxAbs]).range([chartBottom,margin.top]);var linePath=line().curve(curveMonotoneX).x(function(date){return xScale(parseIndiaDate(date));}).y(function(date){return yScale(getMinigraphStatistic(date,statistic));});var pathLength;svg.selectAll('path').data(T?[dates]:[]).join(function(enter){return enter.append('path').attr('fill','none').attr('stroke',color+'99').attr('stroke-width',2.5).attr('d',linePath).attr('stroke-dasharray',function(){return pathLength=this.getTotalLength();}).call(function(enter){return enter.attr('stroke-dashoffset',pathLength).transition().delay(100).duration(2500).attr('stroke-dashoffset',0);});},function(update){return update.attr('stroke-dasharray',null).transition().duration(500).attrTween('d',function(date){var previous=select(this).attr('d');var current=linePath(date);return interpolatePath(previous,current);}).selection();});svg.selectAll('circle').data(T?[dates[T-1]]:[]).join(function(enter){return enter.append('circle').attr('fill',color).attr('r',2.5).attr('cx',function(date){return xScale(parseIndiaDate(date));}).attr('cy',function(date){return yScale(getMinigraphStatistic(date,statistic));}).style('opacity',0).call(function(enter){return enter.transition().delay(2100).duration(500).style('opacity',1).attr('cx',function(date){return xScale(parseIndiaDate(date));}).attr('cy',function(date){return yScale(getMinigraphStatistic(date,statistic));});});},function(update){return update.transition().duration(500).attr('cx',function(date){return xScale(parseIndiaDate(date));}).attr('cy',function(date){return yScale(getMinigraphStatistic(date,statistic));}).style('opacity',1).selection();});});},[endDate,dates,width,getMinigraphStatistic]);return/*#__PURE__*/_jsx(\"div\",{className:\"Minigraph\",children:LEVEL_STATISTICS.map(function(statistic,index){return/*#__PURE__*/_jsx(\"div\",{className:classnames('svg-parent'),ref:index===0?wrapperRef:null,style:{width:\"calc(\".concat(100/LEVEL_STATISTICS.length,\"%)\")},children:/*#__PURE__*/_jsx(\"svg\",{ref:function ref(el){refs.current[index]=el;},preserveAspectRatio:\"xMidYMid meet\",width:width,height:height})},statistic);})});}var isEqual=function isEqual(prevProps,currProps){if(currProps.forceRender){return false;}else if(!currProps.timeseries&&prevProps.timeseries){return true;}else if(currProps.timeseries&&!prevProps.timeseries){return false;}else if(!equal(currProps.stateCode,prevProps.stateCode)){return false;}else if(!equal(currProps.date,prevProps.date)){return false;}return true;};export default/*#__PURE__*/memo(Minigraphs,isEqual);","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/Minigraphs.js"],"names":["MINIGRAPH_LOOKBACK_DAYS","LEVEL_STATISTICS","STATISTIC_CONFIGS","getStatistic","getIndiaDateYesterdayISO","parseIndiaDate","classnames","max","interpolatePath","scaleTime","scaleLinear","select","line","curveMonotoneX","formatISO","subDays","equal","memo","useCallback","useEffect","useRef","useMemo","useMeasure","margin","top","right","bottom","left","height","maxWidth","Minigraphs","timeseries","timelineDate","date","refs","endDate","wrapperRef","width","Math","min","dates","pastDates","Object","keys","filter","lastDate","length","cutOffDateLower","representation","getMinigraphStatistic","statistic","T","chartRight","chartBottom","xScale","clamp","domain","range","current","forEach","ref","index","svg","color","dailyMaxAbs","abs","yScale","linePath","curve","x","y","pathLength","selectAll","data","join","enter","append","attr","getTotalLength","call","transition","delay","duration","update","attrTween","previous","selection","style","map","el","isEqual","prevProps","currProps","forceRender","stateCode"],"mappings":"8LAAA,OACEA,uBADF,CAEEC,gBAFF,CAGEC,iBAHF,KAIO,cAJP,CAKA,OACEC,YADF,CAEEC,wBAFF,CAGEC,cAHF,KAIO,0BAJP,CAMA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAAQC,GAAR,KAAkB,UAAlB,CACA,OAAQC,eAAR,KAA8B,qBAA9B,CACA,OAAQC,SAAR,CAAmBC,WAAnB,KAAqC,UAArC,CACA,OAAQC,MAAR,KAAqB,cAArB,CACA,OAAQC,IAAR,CAAcC,cAAd,KAAmC,UAAnC,CACA,MAAO,eAAP,CACA,OAAQC,SAAR,CAAmBC,OAAnB,KAAiC,UAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,OAAQC,IAAR,CAAcC,WAAd,CAA2BC,SAA3B,CAAsCC,MAAtC,CAA8CC,OAA9C,KAA4D,OAA5D,CACA,OAAQC,UAAR,KAAyB,WAAzB,CAEA;2CACA,GAAMC,CAAAA,MAAM,CAAG,CAACC,GAAG,CAAE,EAAN,CAAUC,KAAK,CAAE,EAAjB,CAAqBC,MAAM,CAAE,CAA7B,CAAgCC,IAAI,CAAE,EAAtC,CAAf,CACA,GAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,GAAMC,CAAAA,QAAQ,CAAG,GAAjB,CAEA,QAASC,CAAAA,UAAT,MAAsD,IAAjCC,CAAAA,UAAiC,MAAjCA,UAAiC,CAAfC,YAAe,MAArBC,IAAqB,CACpD,GAAMC,CAAAA,IAAI,CAAGd,MAAM,CAAC,EAAD,CAAnB,CACA,GAAMe,CAAAA,OAAO,CAAGH,YAAY,EAAI5B,wBAAwB,EAAxD,CAEA,gBAA4BkB,UAAU,EAAtC,4CAAKc,UAAL,iBAAkBC,KAAlB,iBAAkBA,KAAlB,CACAA,KAAK,CAAGC,IAAI,CAACC,GAAL,CAASF,KAAT,CAAgBR,QAAhB,CAAR,CAEA,GAAMW,CAAAA,KAAK,CAAGnB,OAAO,CAAC,UAAM,CAC1B,GAAMoB,CAAAA,SAAS,CAAGC,MAAM,CAACC,IAAP,CAAYZ,UAAU,EAAI,EAA1B,EAA8Ba,MAA9B,CAChB,SAACX,IAAD,QAAUA,CAAAA,IAAI,EAAIE,OAAlB,EADgB,CAAlB,CAGA,GAAMU,CAAAA,QAAQ,CAAGJ,SAAS,CAACA,SAAS,CAACK,MAAV,CAAmB,CAApB,CAA1B,CAEA,GAAMC,CAAAA,eAAe,CAAGjC,SAAS,CAC/BC,OAAO,CAACV,cAAc,CAACwC,QAAD,CAAf,CAA2B7C,uBAA3B,CADwB,CAE/B,CAACgD,cAAc,CAAE,MAAjB,CAF+B,CAAjC,CAIA,MAAOP,CAAAA,SAAS,CAACG,MAAV,CAAiB,SAACX,IAAD,QAAUA,CAAAA,IAAI,EAAIc,eAAlB,EAAjB,CAAP,CACD,CAXoB,CAWlB,CAACZ,OAAD,CAAUJ,UAAV,CAXkB,CAArB,CAaA,GAAMkB,CAAAA,qBAAqB,CAAG/B,WAAW,CACvC,SAACe,IAAD,CAAOiB,SAAP,CAAqB,CACnB,MAAO/C,CAAAA,YAAY,CAAC4B,UAAD,SAACA,UAAD,iBAACA,UAAU,CAAGE,IAAH,CAAX,CAAqB,OAArB,CAA8BiB,SAA9B,CAAnB,CACD,CAHsC,CAIvC,CAACnB,UAAD,CAJuC,CAAzC,CAOAZ,SAAS,CAAC,UAAM,CACd,GAAI,CAACkB,KAAL,CAAY,OAEZ,GAAMc,CAAAA,CAAC,CAAGX,KAAK,CAACM,MAAhB,CAEA,GAAMM,CAAAA,UAAU,CAAGf,KAAK,CAAGd,MAAM,CAACE,KAAlC,CACA,GAAM4B,CAAAA,WAAW,CAAGzB,MAAM,CAAGL,MAAM,CAACG,MAApC,CAEA,GAAM4B,CAAAA,MAAM,CAAG7C,SAAS,GACrB8C,KADY,CACN,IADM,EAEZC,MAFY,CAEL,CACNnD,cAAc,CAACmC,KAAK,CAAC,CAAD,CAAL,EAAYL,OAAb,CADR,CAEN9B,cAAc,CAACmC,KAAK,CAACW,CAAC,CAAG,CAAL,CAAN,CAAd,EAAgChB,OAF1B,CAFK,EAMZsB,KANY,CAMN,CAAClC,MAAM,CAACI,IAAR,CAAcyB,UAAd,CANM,CAAf,CAQAlB,IAAI,CAACwB,OAAL,CAAaC,OAAb,CAAqB,SAACC,GAAD,CAAMC,KAAN,CAAgB,CACnC,GAAMC,CAAAA,GAAG,CAAGnD,MAAM,CAACiD,GAAD,CAAlB,CACA,GAAMV,CAAAA,SAAS,CAAGjD,gBAAgB,CAAC4D,KAAD,CAAlC,CACA,GAAME,CAAAA,KAAK,CAAG7D,iBAAiB,CAACgD,SAAD,CAAjB,CAA6Ba,KAA3C,CAEA,GAAMC,CAAAA,WAAW,CAAGzD,GAAG,CAACiC,KAAD,CAAQ,SAACP,IAAD,QAC7BK,CAAAA,IAAI,CAAC2B,GAAL,CAAShB,qBAAqB,CAAChB,IAAD,CAAOiB,SAAP,CAA9B,CAD6B,EAAR,CAAvB,CAIA,GAAMgB,CAAAA,MAAM,CAAGxD,WAAW,GACvB6C,KADY,CACN,IADM,EAEZC,MAFY,CAEL,CAAC,CAACQ,WAAF,CAAeA,WAAf,CAFK,EAGZP,KAHY,CAGN,CAACJ,WAAD,CAAc9B,MAAM,CAACC,GAArB,CAHM,CAAf,CAKA,GAAM2C,CAAAA,QAAQ,CAAGvD,IAAI,GAClBwD,KADc,CACRvD,cADQ,EAEdwD,CAFc,CAEZ,SAACpC,IAAD,QAAUqB,CAAAA,MAAM,CAACjD,cAAc,CAAC4B,IAAD,CAAf,CAAhB,EAFY,EAGdqC,CAHc,CAGZ,SAACrC,IAAD,QAAUiC,CAAAA,MAAM,CAACjB,qBAAqB,CAAChB,IAAD,CAAOiB,SAAP,CAAtB,CAAhB,EAHY,CAAjB,CAKA,GAAIqB,CAAAA,UAAJ,CACAT,GAAG,CACAU,SADH,CACa,MADb,EAEGC,IAFH,CAEQtB,CAAC,CAAG,CAACX,KAAD,CAAH,CAAa,EAFtB,EAGGkC,IAHH,CAII,SAACC,KAAD,QACEA,CAAAA,KAAK,CACFC,MADH,CACU,MADV,EAEGC,IAFH,CAEQ,MAFR,CAEgB,MAFhB,EAGGA,IAHH,CAGQ,QAHR,CAGkBd,KAAK,CAAG,IAH1B,EAIGc,IAJH,CAIQ,cAJR,CAIwB,GAJxB,EAKGA,IALH,CAKQ,GALR,CAKaV,QALb,EAMGU,IANH,CAMQ,kBANR,CAM4B,UAAY,CACpC,MAAQN,CAAAA,UAAU,CAAG,KAAKO,cAAL,EAArB,CACD,CARH,EASGC,IATH,CASQ,SAACJ,KAAD,QACJA,CAAAA,KAAK,CACFE,IADH,CACQ,mBADR,CAC6BN,UAD7B,EAEGS,UAFH,GAGGC,KAHH,CAGS,GAHT,EAIGC,QAJH,CAIY,IAJZ,EAKGL,IALH,CAKQ,mBALR,CAK6B,CAL7B,CADI,EATR,CADF,EAJJ,CAsBI,SAACM,MAAD,QACEA,CAAAA,MAAM,CACHN,IADH,CACQ,kBADR,CAC4B,IAD5B,EAEGG,UAFH,GAGGE,QAHH,CAGY,GAHZ,EAIGE,SAJH,CAIa,GAJb,CAIkB,SAAUnD,IAAV,CAAgB,CAC9B,GAAMoD,CAAAA,QAAQ,CAAG1E,MAAM,CAAC,IAAD,CAAN,CAAakE,IAAb,CAAkB,GAAlB,CAAjB,CACA,GAAMnB,CAAAA,OAAO,CAAGS,QAAQ,CAAClC,IAAD,CAAxB,CACA,MAAOzB,CAAAA,eAAe,CAAC6E,QAAD,CAAW3B,OAAX,CAAtB,CACD,CARH,EASG4B,SATH,EADF,EAtBJ,EAmCAxB,GAAG,CACAU,SADH,CACa,QADb,EAEGC,IAFH,CAEQtB,CAAC,CAAG,CAACX,KAAK,CAACW,CAAC,CAAG,CAAL,CAAN,CAAH,CAAoB,EAF7B,EAGGuB,IAHH,CAII,SAACC,KAAD,QACEA,CAAAA,KAAK,CACFC,MADH,CACU,QADV,EAEGC,IAFH,CAEQ,MAFR,CAEgBd,KAFhB,EAGGc,IAHH,CAGQ,GAHR,CAGa,GAHb,EAIGA,IAJH,CAIQ,IAJR,CAIc,SAAC5C,IAAD,QAAUqB,CAAAA,MAAM,CAACjD,cAAc,CAAC4B,IAAD,CAAf,CAAhB,EAJd,EAKG4C,IALH,CAKQ,IALR,CAKc,SAAC5C,IAAD,QACViC,CAAAA,MAAM,CAACjB,qBAAqB,CAAChB,IAAD,CAAOiB,SAAP,CAAtB,CADI,EALd,EAQGqC,KARH,CAQS,SART,CAQoB,CARpB,EASGR,IATH,CASQ,SAACJ,KAAD,QACJA,CAAAA,KAAK,CACFK,UADH,GAEGC,KAFH,CAES,IAFT,EAGGC,QAHH,CAGY,GAHZ,EAIGK,KAJH,CAIS,SAJT,CAIoB,CAJpB,EAKGV,IALH,CAKQ,IALR,CAKc,SAAC5C,IAAD,QAAUqB,CAAAA,MAAM,CAACjD,cAAc,CAAC4B,IAAD,CAAf,CAAhB,EALd,EAMG4C,IANH,CAMQ,IANR,CAMc,SAAC5C,IAAD,QACViC,CAAAA,MAAM,CAACjB,qBAAqB,CAAChB,IAAD,CAAOiB,SAAP,CAAtB,CADI,EANd,CADI,EATR,CADF,EAJJ,CAyBI,SAACiC,MAAD,QACEA,CAAAA,MAAM,CACHH,UADH,GAEGE,QAFH,CAEY,GAFZ,EAGGL,IAHH,CAGQ,IAHR,CAGc,SAAC5C,IAAD,QAAUqB,CAAAA,MAAM,CAACjD,cAAc,CAAC4B,IAAD,CAAf,CAAhB,EAHd,EAIG4C,IAJH,CAIQ,IAJR,CAIc,SAAC5C,IAAD,QACViC,CAAAA,MAAM,CAACjB,qBAAqB,CAAChB,IAAD,CAAOiB,SAAP,CAAtB,CADI,EAJd,EAOGqC,KAPH,CAOS,SAPT,CAOoB,CAPpB,EAQGD,SARH,EADF,EAzBJ,EAoCD,CA3FD,EA4FD,CA5GQ,CA4GN,CAACnD,OAAD,CAAUK,KAAV,CAAiBH,KAAjB,CAAwBY,qBAAxB,CA5GM,CAAT,CA8GA,mBACE,YAAK,SAAS,CAAC,WAAf,UACGhD,gBAAgB,CAACuF,GAAjB,CAAqB,SAACtC,SAAD,CAAYW,KAAZ,qBACpB,YAEE,SAAS,CAAEvD,UAAU,CAAC,YAAD,CAFvB,CAGE,GAAG,CAAEuD,KAAK,GAAK,CAAV,CAAczB,UAAd,CAA2B,IAHlC,CAIE,KAAK,CAAE,CAACC,KAAK,gBAAU,IAAMpC,gBAAgB,CAAC6C,MAAjC,MAAN,CAJT,uBAME,YACE,GAAG,CAAE,aAAC2C,EAAD,CAAQ,CACXvD,IAAI,CAACwB,OAAL,CAAaG,KAAb,EAAsB4B,EAAtB,CACD,CAHH,CAIE,mBAAmB,CAAC,eAJtB,CAKE,KAAK,CAAEpD,KALT,CAME,MAAM,CAAET,MANV,EANF,EACOsB,SADP,CADoB,EAArB,CADH,EADF,CAqBD,CAED,GAAMwC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,SAAD,CAAYC,SAAZ,CAA0B,CACxC,GAAIA,SAAS,CAACC,WAAd,CAA2B,CACzB,MAAO,MAAP,CACD,CAFD,IAEO,IAAI,CAACD,SAAS,CAAC7D,UAAX,EAAyB4D,SAAS,CAAC5D,UAAvC,CAAmD,CACxD,MAAO,KAAP,CACD,CAFM,IAEA,IAAI6D,SAAS,CAAC7D,UAAV,EAAwB,CAAC4D,SAAS,CAAC5D,UAAvC,CAAmD,CACxD,MAAO,MAAP,CACD,CAFM,IAEA,IAAI,CAACf,KAAK,CAAC4E,SAAS,CAACE,SAAX,CAAsBH,SAAS,CAACG,SAAhC,CAAV,CAAsD,CAC3D,MAAO,MAAP,CACD,CAFM,IAEA,IAAI,CAAC9E,KAAK,CAAC4E,SAAS,CAAC3D,IAAX,CAAiB0D,SAAS,CAAC1D,IAA3B,CAAV,CAA4C,CACjD,MAAO,MAAP,CACD,CACD,MAAO,KAAP,CACD,CAbD,CAeA,2BAAehB,IAAI,CAACa,UAAD,CAAa4D,OAAb,CAAnB","sourcesContent":["import {\n  MINIGRAPH_LOOKBACK_DAYS,\n  LEVEL_STATISTICS,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {\n  getStatistic,\n  getIndiaDateYesterdayISO,\n  parseIndiaDate,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport {scaleTime, scaleLinear} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport {line, curveMonotoneX} from 'd3-shape';\nimport 'd3-transition';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport {memo, useCallback, useEffect, useRef, useMemo} from 'react';\nimport {useMeasure} from 'react-use';\n\n// Dimensions\nconst margin = {top: 10, right: 10, bottom: 2, left: 10};\nconst height = 75;\nconst maxWidth = 120;\n\nfunction Minigraphs({timeseries, date: timelineDate}) {\n  const refs = useRef([]);\n  const endDate = timelineDate || getIndiaDateYesterdayISO();\n\n  let [wrapperRef, {width}] = useMeasure();\n  width = Math.min(width, maxWidth);\n\n  const dates = useMemo(() => {\n    const pastDates = Object.keys(timeseries || {}).filter(\n      (date) => date <= endDate\n    );\n    const lastDate = pastDates[pastDates.length - 1];\n\n    const cutOffDateLower = formatISO(\n      subDays(parseIndiaDate(lastDate), MINIGRAPH_LOOKBACK_DAYS),\n      {representation: 'date'}\n    );\n    return pastDates.filter((date) => date >= cutOffDateLower);\n  }, [endDate, timeseries]);\n\n  const getMinigraphStatistic = useCallback(\n    (date, statistic) => {\n      return getStatistic(timeseries?.[date], 'delta', statistic);\n    },\n    [timeseries]\n  );\n\n  useEffect(() => {\n    if (!width) return;\n\n    const T = dates.length;\n\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n\n    const xScale = scaleTime()\n      .clamp(true)\n      .domain([\n        parseIndiaDate(dates[0] || endDate),\n        parseIndiaDate(dates[T - 1]) || endDate,\n      ])\n      .range([margin.left, chartRight]);\n\n    refs.current.forEach((ref, index) => {\n      const svg = select(ref);\n      const statistic = LEVEL_STATISTICS[index];\n      const color = STATISTIC_CONFIGS[statistic].color;\n\n      const dailyMaxAbs = max(dates, (date) =>\n        Math.abs(getMinigraphStatistic(date, statistic))\n      );\n\n      const yScale = scaleLinear()\n        .clamp(true)\n        .domain([-dailyMaxAbs, dailyMaxAbs])\n        .range([chartBottom, margin.top]);\n\n      const linePath = line()\n        .curve(curveMonotoneX)\n        .x((date) => xScale(parseIndiaDate(date)))\n        .y((date) => yScale(getMinigraphStatistic(date, statistic)));\n\n      let pathLength;\n      svg\n        .selectAll('path')\n        .data(T ? [dates] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('fill', 'none')\n              .attr('stroke', color + '99')\n              .attr('stroke-width', 2.5)\n              .attr('d', linePath)\n              .attr('stroke-dasharray', function () {\n                return (pathLength = this.getTotalLength());\n              })\n              .call((enter) =>\n                enter\n                  .attr('stroke-dashoffset', pathLength)\n                  .transition()\n                  .delay(100)\n                  .duration(2500)\n                  .attr('stroke-dashoffset', 0)\n              ),\n          (update) =>\n            update\n              .attr('stroke-dasharray', null)\n              .transition()\n              .duration(500)\n              .attrTween('d', function (date) {\n                const previous = select(this).attr('d');\n                const current = linePath(date);\n                return interpolatePath(previous, current);\n              })\n              .selection()\n        );\n\n      svg\n        .selectAll('circle')\n        .data(T ? [dates[T - 1]] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('circle')\n              .attr('fill', color)\n              .attr('r', 2.5)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getMinigraphStatistic(date, statistic))\n              )\n              .style('opacity', 0)\n              .call((enter) =>\n                enter\n                  .transition()\n                  .delay(2100)\n                  .duration(500)\n                  .style('opacity', 1)\n                  .attr('cx', (date) => xScale(parseIndiaDate(date)))\n                  .attr('cy', (date) =>\n                    yScale(getMinigraphStatistic(date, statistic))\n                  )\n              ),\n          (update) =>\n            update\n              .transition()\n              .duration(500)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getMinigraphStatistic(date, statistic))\n              )\n              .style('opacity', 1)\n              .selection()\n        );\n    });\n  }, [endDate, dates, width, getMinigraphStatistic]);\n\n  return (\n    <div className=\"Minigraph\">\n      {LEVEL_STATISTICS.map((statistic, index) => (\n        <div\n          key={statistic}\n          className={classnames('svg-parent')}\n          ref={index === 0 ? wrapperRef : null}\n          style={{width: `calc(${100 / LEVEL_STATISTICS.length}%)`}}\n        >\n          <svg\n            ref={(el) => {\n              refs.current[index] = el;\n            }}\n            preserveAspectRatio=\"xMidYMid meet\"\n            width={width}\n            height={height}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (!equal(currProps.stateCode, prevProps.stateCode)) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(Minigraphs, isEqual);\n"]},"metadata":{},"sourceType":"module"}