"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _FormCheck = _interopRequireDefault(require("./FormCheck"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*!
  Modus React Bootstrap 
  A React-based component library developed as a common, open source platform for all of Trimbleâ€™s web applications built on React.
  Extends React-Bootstrap v1.6.5
  Copyright (c) 2022 Trimble Inc.
 */

const IndeterminateCheckbox = /*#__PURE__*/_react.default.forwardRef(({
  id,
  size,
  indeterminate,
  ...props
}, ref) => {
  const defaultRef = _react.default.useRef(null);
  const resolvedRef = ref || defaultRef;
  (0, _react.useEffect)(() => {
    resolvedRef.current.indeterminate = indeterminate || false;
  }, [resolvedRef, indeterminate]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_FormCheck.default, {
    className: (0, _classnames.default)(size && `custom-control-${size}`),
    custom: true,
    id: id,
    ref: resolvedRef,
    ...props
  });
});
IndeterminateCheckbox.displayName = 'IndeterminateCheckbox';
var _default = IndeterminateCheckbox;
exports.default = _default;
module.exports = exports.default;