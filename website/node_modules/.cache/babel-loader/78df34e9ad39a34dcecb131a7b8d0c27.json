{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/Timeseries.js\",\n    _s = $RefreshSig$();\n\nimport { D3_TRANSITION_DURATION, PRIMARY_STATISTICS, STATISTIC_CONFIGS } from '../constants';\nimport { capitalize, formatNumber, formatDate, getStatistic, parseIndiaDate } from '../utils/commonFunctions';\nimport classnames from 'classnames';\nimport { bisector, extent } from 'd3-array';\nimport { axisBottom, axisRight } from 'd3-axis';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { scaleTime, scaleLinear, scaleLog } from 'd3-scale';\nimport { select, pointer } from 'd3-selection';\nimport { area, line, curveLinear, curveMonotoneX, curveStep } from 'd3-shape';\nimport 'd3-transition';\nimport { differenceInDays } from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport { memo, useCallback, useEffect, useRef, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMeasure } from 'react-use'; // Chart margins\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst margin = {\n  top: 15,\n  right: 35,\n  bottom: 25,\n  left: 25\n}; // Buffer space along y-axis\n\nconst yScaleShrinkFactor = 0.7;\n\nconst numTicksX = width => width < 480 ? 4 : 6;\n\nfunction Timeseries({\n  statistics,\n  timeseries,\n  dates,\n  endDate,\n  chartType,\n  isUniform,\n  isLog,\n  isMovingAverage,\n  noRegionHighlightedDistrictData\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const refs = useRef([]);\n  const [wrapperRef, {\n    width,\n    height\n  }] = useMeasure();\n  const [highlightedDate, setHighlightedDate] = useState(dates[dates.length - 1]);\n  useEffect(() => {\n    setHighlightedDate(dates[dates.length - 1]);\n  }, [dates]);\n  const getTimeseriesStatistic = useCallback((date, statistic, movingAverage = isMovingAverage) => {\n    return getStatistic(timeseries === null || timeseries === void 0 ? void 0 : timeseries[date], chartType, statistic, {\n      movingAverage\n    });\n  }, [chartType, isMovingAverage, timeseries]);\n  const condenseChart = useMemo(() => {\n    const T = dates.length;\n    const days = differenceInDays(parseIndiaDate(dates[T - 1]), parseIndiaDate(dates[0])); // Chart extremes\n\n    const chartRight = width - margin.right; // Bar widths\n\n    const axisWidth = Math.max(0, chartRight - margin.left) / (1.25 * days);\n    return axisWidth < 4;\n  }, [width, dates]);\n  const xScale = useMemo(() => {\n    const T = dates.length;\n    const chartRight = width - margin.right;\n    return scaleTime().clamp(true).domain([parseIndiaDate(dates[0] || endDate), parseIndiaDate(dates[T - 1] || endDate)]).range([margin.left, chartRight]);\n  }, [width, endDate, dates]);\n  const yScales = useMemo(() => {\n    const chartBottom = height - margin.bottom;\n\n    const addScaleBuffer = (scale, log = false) => {\n      const domain = scale.domain();\n\n      if (log) {\n        scale.domain([domain[0], domain[0] * Math.pow(domain[1] / domain[0], 1 / yScaleShrinkFactor)]);\n      } else {\n        scale.domain([domain[0], domain[0] + (domain[1] - domain[0]) / yScaleShrinkFactor]);\n      }\n\n      return scale;\n    };\n\n    const [uniformScaleMin, uniformScaleMax] = extent(dates.reduce((res, date) => {\n      res.push(...PRIMARY_STATISTICS.map(statistic => getTimeseriesStatistic(date, statistic)));\n      return res;\n    }, []));\n    const yScaleUniformLinear = addScaleBuffer(scaleLinear().clamp(true).domain([Math.min(0, uniformScaleMin), Math.max(1, uniformScaleMax)]).range([chartBottom, margin.top]).nice(4));\n    const yScaleUniformLog = addScaleBuffer(scaleLog().clamp(true).domain([1, Math.max(10, uniformScaleMax)]).range([chartBottom, margin.top]).nice(4), true);\n    return statistics.map(statistic => {\n      if (isUniform) {\n        if (chartType === 'total' && isLog && PRIMARY_STATISTICS.includes(statistic)) {\n          return yScaleUniformLog;\n        } else if (PRIMARY_STATISTICS.includes(statistic)) {\n          return yScaleUniformLinear;\n        }\n      }\n\n      const [scaleMin, scaleMax] = extent(dates, date => getTimeseriesStatistic(date, statistic));\n\n      if (chartType === 'total' && isLog) {\n        return addScaleBuffer(scaleLog().clamp(true).domain([1, Math.max(10, scaleMax)]).range([chartBottom, margin.top]).nice(4), true);\n      } else {\n        return addScaleBuffer(scaleLinear().clamp(true).domain([Math.min(0, scaleMin), STATISTIC_CONFIGS[statistic].format === '%' ? Math.min(100, Math.max(1, scaleMax)) : Math.max(1, scaleMax)]).range([chartBottom, margin.top]).nice(4));\n      }\n    });\n  }, [height, chartType, isUniform, isLog, statistics, dates, getTimeseriesStatistic]);\n  useEffect(() => {\n    if (!width || !height) return;\n    const T = dates.length; // Chart extremes\n\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const isDiscrete = chartType === 'delta' && !isMovingAverage;\n\n    const xAxis = g => g.attr('class', 'x-axis').call(axisBottom(xScale).ticks(numTicksX(width)));\n\n    const xAxis2 = (g, yScale) => {\n      g.attr('class', 'x-axis2').call(axisBottom(xScale).tickValues([]).tickSize(0)).select('.domain').style('transform', `translate3d(0, ${yScale(0)}px, 0)`);\n      if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);else g.select('.domain').attr('opacity', 0);\n    };\n\n    const yAxis = (g, yScale, format) => g.attr('class', 'y-axis').call(axisRight(yScale).ticks(4).tickFormat(num => formatNumber(num, format)).tickPadding(4));\n\n    function mousemove(event) {\n      const xm = pointer(event)[0];\n      const date = xScale.invert(xm);\n\n      if (!isNaN(date)) {\n        const bisectDate = bisector(date => parseIndiaDate(date)).left;\n        const index = bisectDate(dates, date, 1);\n        const dateLeft = dates[index - 1];\n        const dateRight = dates[index];\n        setHighlightedDate(date - parseIndiaDate(dateLeft) < parseIndiaDate(dateRight) - date ? dateLeft : dateRight);\n      }\n    }\n\n    function mouseout(event) {\n      setHighlightedDate(dates[T - 1]);\n    }\n    /* Begin drawing charts */\n\n\n    statistics.forEach((statistic, i) => {\n      var _STATISTIC_CONFIGS$st;\n\n      const ref = refs.current[i];\n      const svg = select(ref);\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n      const yScale = yScales[i];\n      const statisticConfig = STATISTIC_CONFIGS[statistic];\n      const format = STATISTIC_CONFIGS[statistic].format === '%' ? '%' : 'short';\n      const isNonLinear = !!((_STATISTIC_CONFIGS$st = STATISTIC_CONFIGS[statistic]) === null || _STATISTIC_CONFIGS$st === void 0 ? void 0 : _STATISTIC_CONFIGS$st.nonLinear);\n      /* X axis */\n\n      svg.select('.x-axis').style('transform', `translate3d(0, ${chartBottom}px, 0)`).transition(t).call(xAxis);\n      svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n      /* Y axis */\n\n      svg.select('.y-axis').style('transform', `translate3d(${chartRight}px, 0, 0)`).transition(t).call(yAxis, yScale, format);\n      /* Path dots */\n\n      svg.selectAll('circle.normal').data(condenseChart ? [] : dates, date => date).join(enter => enter.append('circle').attr('class', 'normal').attr('fill', statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.color).attr('stroke', statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.color).attr('cx', date => xScale(parseIndiaDate(date))).attr('cy', date => yScale(isDiscrete ? 0 : getTimeseriesStatistic(date, statistic))).attr('r', 2)).transition(t).attr('cx', date => xScale(parseIndiaDate(date))).attr('cy', date => yScale(getTimeseriesStatistic(date, statistic)));\n\n      const areaPath = (dates, allZero = false) => area().curve(curveStep).x(date => xScale(parseIndiaDate(date))).y0(yScale(0)).y1(allZero ? yScale(0) : date => yScale(getTimeseriesStatistic(date, statistic, false)))(dates);\n\n      svg.selectAll('.trend-area').data(T && chartType === 'delta' && !isNonLinear && condenseChart ? [dates] : []).join(enter => enter.append('path').attr('class', 'trend-area').call(enter => enter.attr('d', dates => areaPath(dates, true)).transition(t).attr('d', areaPath)), update => update.call(update => update.transition(t).attrTween('d', function (dates) {\n        const previous = select(this).attr('d');\n        const current = areaPath(dates);\n        return interpolatePath(previous, current);\n      })), exit => exit.call(exit => exit.transition(t).attr('d', dates => areaPath(dates, true)).remove())).transition(t).attr('opacity', isMovingAverage ? 0.3 : 1);\n      svg.selectAll('.stem').data(T && chartType === 'delta' && !isNonLinear && !condenseChart ? dates : [], date => date).join(enter => enter.append('line').attr('class', 'stem').attr('stroke-width', 4).attr('x1', date => xScale(parseIndiaDate(date))).attr('y1', yScale(0)).attr('x2', date => xScale(parseIndiaDate(date))).attr('y2', yScale(0)), update => update, exit => exit.call(exit => exit.transition(t).attr('x1', date => xScale(parseIndiaDate(date))).attr('x2', date => xScale(parseIndiaDate(date))).attr('y1', yScale(0)).attr('y2', yScale(0)).remove())).transition(t).attr('x1', date => xScale(parseIndiaDate(date))).attr('y1', yScale(0)).attr('x2', date => xScale(parseIndiaDate(date))).attr('y2', date => yScale(getTimeseriesStatistic(date, statistic, false))).attr('opacity', isMovingAverage ? 0.2 : 1);\n\n      const linePath = (movingAverage = isMovingAverage, curve = curveMonotoneX) => line().curve(curve).x(date => xScale(parseIndiaDate(date))).y(date => yScale(getTimeseriesStatistic(date, statistic, movingAverage)));\n\n      svg.select('.trend').selectAll('path').data(T && (chartType === 'total' || isNonLinear || isMovingAverage) ? [dates] : []).join(enter => enter.append('path').attr('class', 'trend').attr('fill', 'none').attr('stroke-width', 4).attr('d', linePath()).call(enter => enter.transition(t).attr('opacity', 1)), update => update.call(update => update.transition(t).attrTween('d', function (date) {\n        const previous = select(this).attr('d');\n        const current = linePath()(date);\n        return interpolatePath(previous, current);\n      }).attr('opacity', 1)), exit => exit.call(exit => exit.transition(t).attr('opacity', 0).remove())).attr('stroke', (statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.color) + (condenseChart ? '99' : '50'));\n      svg.select('.trend-background').selectAll('path').data(T && chartType === 'delta' && isNonLinear && isMovingAverage ? [dates] : []).join(enter => enter.append('path').attr('class', 'trend-background').attr('fill', 'none').attr('stroke-width', 4).attr('d', linePath(false, curveLinear)).call(enter => enter.transition(t).attr('opacity', 0.2)), update => update.call(update => update.transition(t).attrTween('d', function (date) {\n        const previous = select(this).attr('d');\n        const current = linePath(false, curveLinear)(date);\n        return interpolatePath(previous, current);\n      }).attr('opacity', 0.2)), exit => exit.call(exit => exit.transition(t).attr('opacity', 0).remove())).attr('stroke', (statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.color) + (condenseChart ? '99' : '50'));\n      svg.selectAll('*').attr('pointer-events', 'none');\n      svg.on('mousemove', mousemove).on('touchmove', event => mousemove(event.touches[0])).on('mouseout touchend', mouseout);\n    });\n  }, [width, height, chartType, isMovingAverage, condenseChart, xScale, yScales, statistics, getTimeseriesStatistic, dates]);\n  useEffect(() => {\n    statistics.forEach((statistic, i) => {\n      const ref = refs.current[i];\n      const svg = select(ref);\n      const statisticConfig = STATISTIC_CONFIGS[statistic];\n      const yScale = yScales[i];\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n      svg.selectAll('circle.condensed').data(condenseChart && highlightedDate ? [highlightedDate] : [], date => date).join(enter => enter.append('circle').attr('class', 'condensed').attr('fill', statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.color).attr('stroke', statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.color).attr('pointer-events', 'none').attr('cx', date => xScale(parseIndiaDate(date))).attr('cy', date => yScale(getTimeseriesStatistic(date, statistic))).attr('r', 4)).transition(t).attr('cx', date => xScale(parseIndiaDate(date))).attr('cy', date => yScale(getTimeseriesStatistic(date, statistic)));\n\n      if (!condenseChart) {\n        svg.selectAll('circle').attr('r', date => date === highlightedDate ? 4 : 2);\n      }\n    });\n  }, [condenseChart, highlightedDate, xScale, yScales, statistics, getTimeseriesStatistic]);\n  const getTimeseriesStatisticDelta = useCallback(statistic => {\n    var _STATISTIC_CONFIGS$st2;\n\n    if (!highlightedDate) return;\n    const currCount = getTimeseriesStatistic(highlightedDate, statistic);\n    if (((_STATISTIC_CONFIGS$st2 = STATISTIC_CONFIGS[statistic]) === null || _STATISTIC_CONFIGS$st2 === void 0 ? void 0 : _STATISTIC_CONFIGS$st2.hideZero) && currCount === 0) return;\n    const prevDate = dates[dates.findIndex(date => date === highlightedDate) - 1];\n    const prevCount = getTimeseriesStatistic(prevDate, statistic);\n    return currCount - prevCount;\n  }, [dates, highlightedDate, getTimeseriesStatistic]);\n  const trail = useMemo(() => statistics.map((statistic, index) => ({\n    animationDelay: `${index * 250}ms`\n  })), [statistics]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Timeseries\",\n    children: statistics.map((statistic, index) => {\n      const total = getTimeseriesStatistic(highlightedDate, statistic);\n      const delta = getTimeseriesStatisticDelta(statistic, index);\n      const statisticConfig = STATISTIC_CONFIGS[statistic];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('svg-parent fadeInUp', `is-${statistic}`),\n        style: trail[index],\n        ref: index === 0 ? wrapperRef : null,\n        children: [highlightedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames('stats', `is-${statistic}`),\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"title\",\n            children: t(capitalize(statisticConfig.displayName))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: formatDate(highlightedDate, 'dd MMMM')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: !noRegionHighlightedDistrictData || !(statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.hasPrimary) ? formatNumber(total, statisticConfig.format !== 'short' ? statisticConfig.format : 'long', statistic) : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: !noRegionHighlightedDistrictData || !(statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.hasPrimary) ? `${delta > 0 ? '+' : ''}${formatNumber(delta, statisticConfig.format !== 'short' ? statisticConfig.format : 'long', statistic)}` : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: element => {\n            refs.current[index] = element;\n          },\n          preserveAspectRatio: \"xMidYMid meet\",\n          children: [/*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"x-axis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"x-axis2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"y-axis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"trend-background\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"trend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)]\n      }, statistic, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 544,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timeseries, \"YC8anv0lElREfdXRmT3VVhirGK0=\", false, function () {\n  return [useTranslation, useMeasure];\n});\n\n_c = Timeseries;\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(currProps.chartType, prevProps.chartType)) {\n    return false;\n  } else if (!equal(currProps.isUniform, prevProps.isUniform)) {\n    return false;\n  } else if (!equal(currProps.isLog, prevProps.isLog)) {\n    return false;\n  } else if (!equal(currProps.isMovingAverage, prevProps.isMovingAverage)) {\n    return false;\n  } else if (!equal(currProps.regionHighlighted.stateCode, prevProps.regionHighlighted.stateCode)) {\n    return false;\n  } else if (!equal(currProps.regionHighlighted.districtName, prevProps.regionHighlighted.districtName)) {\n    return false;\n  } else if (!equal(currProps.noRegionHighlightedDistrictData, prevProps.noRegionHighlightedDistrictData)) {\n    return false;\n  } else if (!equal(currProps.endDate, prevProps.endDate)) {\n    return false;\n  } else if (!equal(currProps.statistics, prevProps.statistics)) {\n    return false;\n  } else if (!equal(currProps.dates, prevProps.dates)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default _c2 = /*#__PURE__*/memo(Timeseries, isEqual);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Timeseries\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website /covid19india-react-master/src/components/Timeseries.js"],"names":["D3_TRANSITION_DURATION","PRIMARY_STATISTICS","STATISTIC_CONFIGS","capitalize","formatNumber","formatDate","getStatistic","parseIndiaDate","classnames","bisector","extent","axisBottom","axisRight","interpolatePath","scaleTime","scaleLinear","scaleLog","select","pointer","area","line","curveLinear","curveMonotoneX","curveStep","differenceInDays","equal","memo","useCallback","useEffect","useRef","useMemo","useState","useTranslation","useMeasure","margin","top","right","bottom","left","yScaleShrinkFactor","numTicksX","width","Timeseries","statistics","timeseries","dates","endDate","chartType","isUniform","isLog","isMovingAverage","noRegionHighlightedDistrictData","t","refs","wrapperRef","height","highlightedDate","setHighlightedDate","length","getTimeseriesStatistic","date","statistic","movingAverage","condenseChart","T","days","chartRight","axisWidth","Math","max","xScale","clamp","domain","range","yScales","chartBottom","addScaleBuffer","scale","log","pow","uniformScaleMin","uniformScaleMax","reduce","res","push","map","yScaleUniformLinear","min","nice","yScaleUniformLog","includes","scaleMin","scaleMax","format","isDiscrete","xAxis","g","attr","call","ticks","xAxis2","yScale","tickValues","tickSize","style","yAxis","tickFormat","num","tickPadding","mousemove","event","xm","invert","isNaN","bisectDate","index","dateLeft","dateRight","mouseout","forEach","i","ref","current","svg","transition","duration","statisticConfig","isNonLinear","nonLinear","selectAll","data","join","enter","append","color","areaPath","allZero","curve","x","y0","y1","update","attrTween","previous","exit","remove","linePath","y","on","touches","getTimeseriesStatisticDelta","currCount","hideZero","prevDate","findIndex","prevCount","trail","animationDelay","total","delta","displayName","hasPrimary","element","isEqual","prevProps","currProps","regionHighlighted","stateCode","districtName"],"mappings":"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","sourcesContent":["import {\n  D3_TRANSITION_DURATION,\n  PRIMARY_STATISTICS,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {\n  capitalize,\n  formatNumber,\n  formatDate,\n  getStatistic,\n  parseIndiaDate,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisRight} from 'd3-axis';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport {scaleTime, scaleLinear, scaleLog} from 'd3-scale';\nimport {select, pointer} from 'd3-selection';\nimport {area, line, curveLinear, curveMonotoneX, curveStep} from 'd3-shape';\nimport 'd3-transition';\nimport {differenceInDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport {memo, useCallback, useEffect, useRef, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useMeasure} from 'react-use';\n\n// Chart margins\nconst margin = {top: 15, right: 35, bottom: 25, left: 25};\n// Buffer space along y-axis\nconst yScaleShrinkFactor = 0.7;\nconst numTicksX = (width) => (width < 480 ? 4 : 6);\n\nfunction Timeseries({\n  statistics,\n  timeseries,\n  dates,\n  endDate,\n  chartType,\n  isUniform,\n  isLog,\n  isMovingAverage,\n  noRegionHighlightedDistrictData,\n}) {\n  const {t} = useTranslation();\n  const refs = useRef([]);\n  const [wrapperRef, {width, height}] = useMeasure();\n\n  const [highlightedDate, setHighlightedDate] = useState(\n    dates[dates.length - 1]\n  );\n  useEffect(() => {\n    setHighlightedDate(dates[dates.length - 1]);\n  }, [dates]);\n\n  const getTimeseriesStatistic = useCallback(\n    (date, statistic, movingAverage = isMovingAverage) => {\n      return getStatistic(timeseries?.[date], chartType, statistic, {\n        movingAverage,\n      });\n    },\n    [chartType, isMovingAverage, timeseries]\n  );\n\n  const condenseChart = useMemo(() => {\n    const T = dates.length;\n    const days = differenceInDays(\n      parseIndiaDate(dates[T - 1]),\n      parseIndiaDate(dates[0])\n    );\n    // Chart extremes\n    const chartRight = width - margin.right;\n    // Bar widths\n    const axisWidth = Math.max(0, chartRight - margin.left) / (1.25 * days);\n    return axisWidth < 4;\n  }, [width, dates]);\n\n  const xScale = useMemo(() => {\n    const T = dates.length;\n    const chartRight = width - margin.right;\n\n    return scaleTime()\n      .clamp(true)\n      .domain([\n        parseIndiaDate(dates[0] || endDate),\n        parseIndiaDate(dates[T - 1] || endDate),\n      ])\n      .range([margin.left, chartRight]);\n  }, [width, endDate, dates]);\n\n  const yScales = useMemo(() => {\n    const chartBottom = height - margin.bottom;\n\n    const addScaleBuffer = (scale, log = false) => {\n      const domain = scale.domain();\n      if (log) {\n        scale.domain([\n          domain[0],\n          domain[0] * Math.pow(domain[1] / domain[0], 1 / yScaleShrinkFactor),\n        ]);\n      } else {\n        scale.domain([\n          domain[0],\n          domain[0] + (domain[1] - domain[0]) / yScaleShrinkFactor,\n        ]);\n      }\n      return scale;\n    };\n\n    const [uniformScaleMin, uniformScaleMax] = extent(\n      dates.reduce((res, date) => {\n        res.push(\n          ...PRIMARY_STATISTICS.map((statistic) =>\n            getTimeseriesStatistic(date, statistic)\n          )\n        );\n        return res;\n      }, [])\n    );\n\n    const yScaleUniformLinear = addScaleBuffer(\n      scaleLinear()\n        .clamp(true)\n        .domain([Math.min(0, uniformScaleMin), Math.max(1, uniformScaleMax)])\n        .range([chartBottom, margin.top])\n        .nice(4)\n    );\n\n    const yScaleUniformLog = addScaleBuffer(\n      scaleLog()\n        .clamp(true)\n        .domain([1, Math.max(10, uniformScaleMax)])\n        .range([chartBottom, margin.top])\n        .nice(4),\n      true\n    );\n\n    return statistics.map((statistic) => {\n      if (isUniform) {\n        if (\n          chartType === 'total' &&\n          isLog &&\n          PRIMARY_STATISTICS.includes(statistic)\n        ) {\n          return yScaleUniformLog;\n        } else if (PRIMARY_STATISTICS.includes(statistic)) {\n          return yScaleUniformLinear;\n        }\n      }\n\n      const [scaleMin, scaleMax] = extent(dates, (date) =>\n        getTimeseriesStatistic(date, statistic)\n      );\n\n      if (chartType === 'total' && isLog) {\n        return addScaleBuffer(\n          scaleLog()\n            .clamp(true)\n            .domain([1, Math.max(10, scaleMax)])\n            .range([chartBottom, margin.top])\n            .nice(4),\n          true\n        );\n      } else {\n        return addScaleBuffer(\n          scaleLinear()\n            .clamp(true)\n            .domain([\n              Math.min(0, scaleMin),\n              STATISTIC_CONFIGS[statistic].format === '%'\n                ? Math.min(100, Math.max(1, scaleMax))\n                : Math.max(1, scaleMax),\n            ])\n            .range([chartBottom, margin.top])\n            .nice(4)\n        );\n      }\n    });\n  }, [\n    height,\n    chartType,\n    isUniform,\n    isLog,\n    statistics,\n    dates,\n    getTimeseriesStatistic,\n  ]);\n\n  useEffect(() => {\n    if (!width || !height) return;\n\n    const T = dates.length;\n    // Chart extremes\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n\n    const isDiscrete = chartType === 'delta' && !isMovingAverage;\n\n    const xAxis = (g) =>\n      g\n        .attr('class', 'x-axis')\n        .call(axisBottom(xScale).ticks(numTicksX(width)));\n\n    const xAxis2 = (g, yScale) => {\n      g.attr('class', 'x-axis2')\n        .call(axisBottom(xScale).tickValues([]).tickSize(0))\n        .select('.domain')\n        .style('transform', `translate3d(0, ${yScale(0)}px, 0)`);\n\n      if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n      else g.select('.domain').attr('opacity', 0);\n    };\n\n    const yAxis = (g, yScale, format) =>\n      g.attr('class', 'y-axis').call(\n        axisRight(yScale)\n          .ticks(4)\n          .tickFormat((num) => formatNumber(num, format))\n          .tickPadding(4)\n      );\n\n    function mousemove(event) {\n      const xm = pointer(event)[0];\n      const date = xScale.invert(xm);\n      if (!isNaN(date)) {\n        const bisectDate = bisector((date) => parseIndiaDate(date)).left;\n        const index = bisectDate(dates, date, 1);\n        const dateLeft = dates[index - 1];\n        const dateRight = dates[index];\n        setHighlightedDate(\n          date - parseIndiaDate(dateLeft) < parseIndiaDate(dateRight) - date\n            ? dateLeft\n            : dateRight\n        );\n      }\n    }\n\n    function mouseout(event) {\n      setHighlightedDate(dates[T - 1]);\n    }\n\n    /* Begin drawing charts */\n    statistics.forEach((statistic, i) => {\n      const ref = refs.current[i];\n      const svg = select(ref);\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n      const yScale = yScales[i];\n      const statisticConfig = STATISTIC_CONFIGS[statistic];\n      const format =\n        STATISTIC_CONFIGS[statistic].format === '%' ? '%' : 'short';\n      const isNonLinear = !!STATISTIC_CONFIGS[statistic]?.nonLinear;\n\n      /* X axis */\n      svg\n        .select('.x-axis')\n        .style('transform', `translate3d(0, ${chartBottom}px, 0)`)\n        .transition(t)\n        .call(xAxis);\n\n      svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n\n      /* Y axis */\n      svg\n        .select('.y-axis')\n        .style('transform', `translate3d(${chartRight}px, 0, 0)`)\n        .transition(t)\n        .call(yAxis, yScale, format);\n\n      /* Path dots */\n      svg\n        .selectAll('circle.normal')\n        .data(condenseChart ? [] : dates, (date) => date)\n        .join((enter) =>\n          enter\n            .append('circle')\n            .attr('class', 'normal')\n            .attr('fill', statisticConfig?.color)\n            .attr('stroke', statisticConfig?.color)\n            .attr('cx', (date) => xScale(parseIndiaDate(date)))\n            .attr('cy', (date) =>\n              yScale(isDiscrete ? 0 : getTimeseriesStatistic(date, statistic))\n            )\n            .attr('r', 2)\n        )\n        .transition(t)\n        .attr('cx', (date) => xScale(parseIndiaDate(date)))\n        .attr('cy', (date) => yScale(getTimeseriesStatistic(date, statistic)));\n\n      const areaPath = (dates, allZero = false) =>\n        area()\n          .curve(curveStep)\n          .x((date) => xScale(parseIndiaDate(date)))\n          .y0(yScale(0))\n          .y1(\n            allZero\n              ? yScale(0)\n              : (date) => yScale(getTimeseriesStatistic(date, statistic, false))\n          )(dates);\n\n      svg\n        .selectAll('.trend-area')\n        .data(\n          T && chartType === 'delta' && !isNonLinear && condenseChart\n            ? [dates]\n            : []\n        )\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('class', 'trend-area')\n              .call((enter) =>\n                enter\n                  .attr('d', (dates) => areaPath(dates, true))\n                  .transition(t)\n                  .attr('d', areaPath)\n              ),\n          (update) =>\n            update.call((update) =>\n              update.transition(t).attrTween('d', function (dates) {\n                const previous = select(this).attr('d');\n                const current = areaPath(dates);\n                return interpolatePath(previous, current);\n              })\n            ),\n          (exit) =>\n            exit.call((exit) =>\n              exit\n                .transition(t)\n                .attr('d', (dates) => areaPath(dates, true))\n                .remove()\n            )\n        )\n        .transition(t)\n        .attr('opacity', isMovingAverage ? 0.3 : 1);\n\n      svg\n        .selectAll('.stem')\n        .data(\n          T && chartType === 'delta' && !isNonLinear && !condenseChart\n            ? dates\n            : [],\n          (date) => date\n        )\n        .join(\n          (enter) =>\n            enter\n              .append('line')\n              .attr('class', 'stem')\n              .attr('stroke-width', 4)\n              .attr('x1', (date) => xScale(parseIndiaDate(date)))\n              .attr('y1', yScale(0))\n              .attr('x2', (date) => xScale(parseIndiaDate(date)))\n              .attr('y2', yScale(0)),\n          (update) => update,\n          (exit) =>\n            exit.call((exit) =>\n              exit\n                .transition(t)\n                .attr('x1', (date) => xScale(parseIndiaDate(date)))\n                .attr('x2', (date) => xScale(parseIndiaDate(date)))\n                .attr('y1', yScale(0))\n                .attr('y2', yScale(0))\n                .remove()\n            )\n        )\n        .transition(t)\n        .attr('x1', (date) => xScale(parseIndiaDate(date)))\n        .attr('y1', yScale(0))\n        .attr('x2', (date) => xScale(parseIndiaDate(date)))\n        .attr('y2', (date) =>\n          yScale(getTimeseriesStatistic(date, statistic, false))\n        )\n        .attr('opacity', isMovingAverage ? 0.2 : 1);\n\n      const linePath = (\n        movingAverage = isMovingAverage,\n        curve = curveMonotoneX\n      ) =>\n        line()\n          .curve(curve)\n          .x((date) => xScale(parseIndiaDate(date)))\n          .y((date) =>\n            yScale(getTimeseriesStatistic(date, statistic, movingAverage))\n          );\n\n      svg\n        .select('.trend')\n        .selectAll('path')\n        .data(\n          T && (chartType === 'total' || isNonLinear || isMovingAverage)\n            ? [dates]\n            : []\n        )\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('class', 'trend')\n              .attr('fill', 'none')\n              .attr('stroke-width', 4)\n              .attr('d', linePath())\n              .call((enter) => enter.transition(t).attr('opacity', 1)),\n          (update) =>\n            update.call((update) =>\n              update\n                .transition(t)\n                .attrTween('d', function (date) {\n                  const previous = select(this).attr('d');\n                  const current = linePath()(date);\n                  return interpolatePath(previous, current);\n                })\n                .attr('opacity', 1)\n            ),\n          (exit) =>\n            exit.call((exit) => exit.transition(t).attr('opacity', 0).remove())\n        )\n        .attr('stroke', statisticConfig?.color + (condenseChart ? '99' : '50'));\n\n      svg\n        .select('.trend-background')\n        .selectAll('path')\n        .data(\n          T && chartType === 'delta' && isNonLinear && isMovingAverage\n            ? [dates]\n            : []\n        )\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('class', 'trend-background')\n              .attr('fill', 'none')\n              .attr('stroke-width', 4)\n              .attr('d', linePath(false, curveLinear))\n              .call((enter) => enter.transition(t).attr('opacity', 0.2)),\n          (update) =>\n            update.call((update) =>\n              update\n                .transition(t)\n                .attrTween('d', function (date) {\n                  const previous = select(this).attr('d');\n                  const current = linePath(false, curveLinear)(date);\n                  return interpolatePath(previous, current);\n                })\n                .attr('opacity', 0.2)\n            ),\n          (exit) =>\n            exit.call((exit) => exit.transition(t).attr('opacity', 0).remove())\n        )\n        .attr('stroke', statisticConfig?.color + (condenseChart ? '99' : '50'));\n\n      svg.selectAll('*').attr('pointer-events', 'none');\n      svg\n        .on('mousemove', mousemove)\n        .on('touchmove', (event) => mousemove(event.touches[0]))\n        .on('mouseout touchend', mouseout);\n    });\n  }, [\n    width,\n    height,\n    chartType,\n    isMovingAverage,\n    condenseChart,\n    xScale,\n    yScales,\n    statistics,\n    getTimeseriesStatistic,\n    dates,\n  ]);\n\n  useEffect(() => {\n    statistics.forEach((statistic, i) => {\n      const ref = refs.current[i];\n      const svg = select(ref);\n      const statisticConfig = STATISTIC_CONFIGS[statistic];\n      const yScale = yScales[i];\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n      svg\n        .selectAll('circle.condensed')\n        .data(\n          condenseChart && highlightedDate ? [highlightedDate] : [],\n          (date) => date\n        )\n        .join((enter) =>\n          enter\n            .append('circle')\n            .attr('class', 'condensed')\n            .attr('fill', statisticConfig?.color)\n            .attr('stroke', statisticConfig?.color)\n            .attr('pointer-events', 'none')\n            .attr('cx', (date) => xScale(parseIndiaDate(date)))\n            .attr('cy', (date) =>\n              yScale(getTimeseriesStatistic(date, statistic))\n            )\n            .attr('r', 4)\n        )\n        .transition(t)\n        .attr('cx', (date) => xScale(parseIndiaDate(date)))\n        .attr('cy', (date) => yScale(getTimeseriesStatistic(date, statistic)));\n\n      if (!condenseChart) {\n        svg\n          .selectAll('circle')\n          .attr('r', (date) => (date === highlightedDate ? 4 : 2));\n      }\n    });\n  }, [\n    condenseChart,\n    highlightedDate,\n    xScale,\n    yScales,\n    statistics,\n    getTimeseriesStatistic,\n  ]);\n\n  const getTimeseriesStatisticDelta = useCallback(\n    (statistic) => {\n      if (!highlightedDate) return;\n\n      const currCount = getTimeseriesStatistic(highlightedDate, statistic);\n      if (STATISTIC_CONFIGS[statistic]?.hideZero && currCount === 0) return;\n\n      const prevDate =\n        dates[dates.findIndex((date) => date === highlightedDate) - 1];\n\n      const prevCount = getTimeseriesStatistic(prevDate, statistic);\n      return currCount - prevCount;\n    },\n    [dates, highlightedDate, getTimeseriesStatistic]\n  );\n\n  const trail = useMemo(\n    () =>\n      statistics.map((statistic, index) => ({\n        animationDelay: `${index * 250}ms`,\n      })),\n    [statistics]\n  );\n\n  return (\n    <div className=\"Timeseries\">\n      {statistics.map((statistic, index) => {\n        const total = getTimeseriesStatistic(highlightedDate, statistic);\n        const delta = getTimeseriesStatisticDelta(statistic, index);\n        const statisticConfig = STATISTIC_CONFIGS[statistic];\n        return (\n          <div\n            key={statistic}\n            className={classnames('svg-parent fadeInUp', `is-${statistic}`)}\n            style={trail[index]}\n            ref={index === 0 ? wrapperRef : null}\n          >\n            {highlightedDate && (\n              <div className={classnames('stats', `is-${statistic}`)}>\n                <h5 className=\"title\">\n                  {t(capitalize(statisticConfig.displayName))}\n                </h5>\n                <h5>{formatDate(highlightedDate, 'dd MMMM')}</h5>\n                <div className=\"stats-bottom\">\n                  <h2>\n                    {!noRegionHighlightedDistrictData ||\n                    !statisticConfig?.hasPrimary\n                      ? formatNumber(\n                          total,\n                          statisticConfig.format !== 'short'\n                            ? statisticConfig.format\n                            : 'long',\n                          statistic\n                        )\n                      : '-'}\n                  </h2>\n                  <h6>\n                    {!noRegionHighlightedDistrictData ||\n                    !statisticConfig?.hasPrimary\n                      ? `${delta > 0 ? '+' : ''}${formatNumber(\n                          delta,\n                          statisticConfig.format !== 'short'\n                            ? statisticConfig.format\n                            : 'long',\n                          statistic\n                        )}`\n                      : ''}\n                  </h6>\n                </div>\n              </div>\n            )}\n            <svg\n              ref={(element) => {\n                refs.current[index] = element;\n              }}\n              preserveAspectRatio=\"xMidYMid meet\"\n            >\n              <g className=\"x-axis\" />\n              <g className=\"x-axis2\" />\n              <g className=\"y-axis\" />\n              <g className=\"trend-background\" />\n              <g className=\"trend\" />\n            </svg>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(currProps.chartType, prevProps.chartType)) {\n    return false;\n  } else if (!equal(currProps.isUniform, prevProps.isUniform)) {\n    return false;\n  } else if (!equal(currProps.isLog, prevProps.isLog)) {\n    return false;\n  } else if (!equal(currProps.isMovingAverage, prevProps.isMovingAverage)) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.districtName,\n      prevProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.noRegionHighlightedDistrictData,\n      prevProps.noRegionHighlightedDistrictData\n    )\n  ) {\n    return false;\n  } else if (!equal(currProps.endDate, prevProps.endDate)) {\n    return false;\n  } else if (!equal(currProps.statistics, prevProps.statistics)) {\n    return false;\n  } else if (!equal(currProps.dates, prevProps.dates)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(Timeseries, isEqual);\n"]},"metadata":{},"sourceType":"module"}