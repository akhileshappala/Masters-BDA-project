"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var PropTypes = _interopRequireWildcard(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*!
  Modus React Bootstrap 
  A React-based component library developed as a common, open source platform for all of Trimbleâ€™s web applications built on React.
  Extends React-Bootstrap v1.6.5
  Copyright (c) 2022 Trimble Inc.
 */

const propTypes = {
  /**
   * The visual variant
   *
   * @type {'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light'}
   */
  variant: PropTypes.string,
  /**
   * message text
   *
   */
  label: PropTypes.string,
  /**
   * Icon must be either a valid JSX element or a modus icon, ex: 'info_outlined'. Icon: `ReactElement | string`
   *
   */
  icon: PropTypes.element,
  /**
   * Controls the visual state.
   *
   * @controllable onClose
   */
  show: PropTypes.bool
};
const defaultProps = {
  show: true
};
const prefix = 'message';
const Message = /*#__PURE__*/(0, React.forwardRef)(({
  variant,
  message,
  icon,
  show,
  className,
  ...props
}, ref) => {
  const iconElement = typeof icon === 'string' ? /*#__PURE__*/(0, _jsxRuntime.jsx)("i", {
    className: "modus-icons",
    "aria-hidden": "true",
    children: icon
  }) : icon;
  const msg = /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    ...props,
    ref: ref,
    className: (0, _classnames.default)(prefix, variant && `${prefix}-${variant}`, className),
    children: [iconElement, message, props.children]
  });
  return show ? msg : null;
});
Message.displayName = 'Message';
Message.defaultProps = defaultProps;
Message.propTypes = propTypes;
var _default = Message;
exports.default = _default;
module.exports = exports.default;