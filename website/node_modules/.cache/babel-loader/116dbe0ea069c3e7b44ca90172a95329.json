{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/HeaderCell.js\",\n    _s = $RefreshSig$();\n\nimport Tooltip from './Tooltip';\nimport { STATISTIC_CONFIGS } from '../constants';\nimport { toTitleCase } from '../utils/commonFunctions';\nimport { InfoIcon, SortAscIcon, SortDescIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport { memo, useCallback, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLongPress } from 'react-use';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StateHeaderCell({\n  handleSort,\n  sortData,\n  setSortData,\n  statistic\n}) {\n  _s();\n\n  var _statisticConfig$tabl, _statisticConfig$tabl2;\n\n  const {\n    t\n  } = useTranslation();\n  const wasLongPressed = useRef(false);\n\n  const onLongPress = () => {\n    if (sortData.sortColumn === statistic) {\n      wasLongPressed.current = true;\n      setSortData(produce(sortData, sortDataDraft => {\n        sortDataDraft.delta = !sortData.delta;\n      }));\n    }\n  };\n\n  const longPressEvent = useLongPress(onLongPress, {\n    isPreventDefault: false\n  });\n  const handleClick = useCallback(statistic => {\n    if (wasLongPressed.current) {\n      wasLongPressed.current = false;\n    } else {\n      handleSort(statistic);\n    }\n  }, [handleSort]);\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames('cell', 'heading'),\n    onClick: handleClick.bind(this, statistic),\n    ...longPressEvent,\n    children: [sortData.sortColumn === statistic && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('sort-icon', {\n        [`is-${statistic}`]: sortData.delta\n      }),\n      children: sortData.isAscending ? /*#__PURE__*/_jsxDEV(SortAscIcon, {\n        size: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(SortDescIcon, {\n        size: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), (statisticConfig === null || statisticConfig === void 0 ? void 0 : (_statisticConfig$tabl = statisticConfig.tableConfig) === null || _statisticConfig$tabl === void 0 ? void 0 : _statisticConfig$tabl.notes) && /*#__PURE__*/_jsxDEV(Tooltip, {\n      message: t(statisticConfig.tableConfig.notes),\n      children: /*#__PURE__*/_jsxDEV(InfoIcon, {\n        size: 14\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: t(statisticConfig === null || statisticConfig === void 0 ? void 0 : (_statisticConfig$tabl2 = statisticConfig.tableConfig) === null || _statisticConfig$tabl2 === void 0 ? void 0 : _statisticConfig$tabl2.displayName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StateHeaderCell, \"DZ68nmVLCeQzogNfXsWl0V38Zms=\", false, function () {\n  return [useTranslation, useLongPress];\n});\n\n_c = StateHeaderCell;\n\nconst isStateHeaderCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.sortData, currProps.sortData)) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport default _c2 = /*#__PURE__*/memo(StateHeaderCell, isStateHeaderCellEqual);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StateHeaderCell\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/HeaderCell.js"],"names":["Tooltip","STATISTIC_CONFIGS","toTitleCase","InfoIcon","SortAscIcon","SortDescIcon","classnames","equal","produce","memo","useCallback","useRef","useTranslation","useLongPress","StateHeaderCell","handleSort","sortData","setSortData","statistic","t","wasLongPressed","onLongPress","sortColumn","current","sortDataDraft","delta","longPressEvent","isPreventDefault","handleClick","statisticConfig","bind","isAscending","tableConfig","notes","displayName","isStateHeaderCellEqual","prevProps","currProps"],"mappings":"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","sourcesContent":["import Tooltip from './Tooltip';\n\nimport {STATISTIC_CONFIGS} from '../constants';\nimport {toTitleCase} from '../utils/commonFunctions';\n\nimport {InfoIcon, SortAscIcon, SortDescIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport {memo, useCallback, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLongPress} from 'react-use';\n\nfunction StateHeaderCell({handleSort, sortData, setSortData, statistic}) {\n  const {t} = useTranslation();\n  const wasLongPressed = useRef(false);\n\n  const onLongPress = () => {\n    if (sortData.sortColumn === statistic) {\n      wasLongPressed.current = true;\n      setSortData(\n        produce(sortData, (sortDataDraft) => {\n          sortDataDraft.delta = !sortData.delta;\n        })\n      );\n    }\n  };\n  const longPressEvent = useLongPress(onLongPress, {isPreventDefault: false});\n\n  const handleClick = useCallback(\n    (statistic) => {\n      if (wasLongPressed.current) {\n        wasLongPressed.current = false;\n      } else {\n        handleSort(statistic);\n      }\n    },\n    [handleSort]\n  );\n\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n\n  return (\n    <div\n      className={classnames('cell', 'heading')}\n      onClick={handleClick.bind(this, statistic)}\n      {...longPressEvent}\n    >\n      {sortData.sortColumn === statistic && (\n        <div\n          className={classnames('sort-icon', {\n            [`is-${statistic}`]: sortData.delta,\n          })}\n        >\n          {sortData.isAscending ? (\n            <SortAscIcon size={12} />\n          ) : (\n            <SortDescIcon size={12} />\n          )}\n        </div>\n      )}\n      {statisticConfig?.tableConfig?.notes && (\n        <Tooltip message={t(statisticConfig.tableConfig.notes)}>\n          <InfoIcon size={14} />\n        </Tooltip>\n      )}\n      <div>\n        {t(\n         statisticConfig?.tableConfig?.displayName\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst isStateHeaderCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.sortData, currProps.sortData)) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport default memo(StateHeaderCell, isStateHeaderCellEqual);"]},"metadata":{},"sourceType":"module"}