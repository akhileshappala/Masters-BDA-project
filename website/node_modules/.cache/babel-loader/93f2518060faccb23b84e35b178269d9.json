{"ast":null,"code":"var _jsxFileName = \"/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/ActionsPanel.js\",\n    _s = $RefreshSig$();\n\nimport Tooltip from './Tooltip';\nimport { formatDate, retry } from '../utils/commonFunctions';\nimport { BellIcon, BellSlashIcon, HistoryIcon } from '@primer/octicons-react';\nimport { useMemo, useCallback, lazy, Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = /*#__PURE__*/lazy(_c = () => retry(() => import('./Timeline')));\n_c2 = Timeline;\n\nconst ActionsPanel = ({\n  lastUpdatedDate,\n  newUpdate,\n  isTimelineMode,\n  setIsTimelineMode,\n  showUpdates,\n  date,\n  setDate,\n  dates,\n  setNewUpdate,\n  setShowUpdates\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const trail = useMemo(() => {\n    const styles = [];\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${500 + index * 250}ms`\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n  const handleTimelineClick = useCallback(() => {\n    setIsTimelineMode(true);\n    if (showUpdates) setShowUpdates(!showUpdates);\n  }, [setIsTimelineMode, setShowUpdates, showUpdates]);\n  const handleBellClick = useCallback(() => {\n    if (!showUpdates) setNewUpdate(false);\n    setShowUpdates(!showUpdates);\n  }, [showUpdates, setShowUpdates, setNewUpdate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ActionsPanel\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ActionsPanel, \"TsZUhR+4MyHtebMZD47tSp5GqkI=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = ActionsPanel;\nexport default ActionsPanel;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Timeline$lazy\");\n$RefreshReg$(_c2, \"Timeline\");\n$RefreshReg$(_c3, \"ActionsPanel\");","map":{"version":3,"sources":["/Users/ssakhilesha/Documents/GitHub/Masters-BDA-project/website/covid19/src/components/ActionsPanel.js"],"names":["Tooltip","formatDate","retry","BellIcon","BellSlashIcon","HistoryIcon","useMemo","useCallback","lazy","Suspense","useTranslation","Timeline","ActionsPanel","lastUpdatedDate","newUpdate","isTimelineMode","setIsTimelineMode","showUpdates","date","setDate","dates","setNewUpdate","setShowUpdates","t","trail","styles","map","element","index","push","animationDelay","handleTimelineClick","handleBellClick"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,SAAQC,UAAR,EAAoBC,KAApB,QAAgC,0BAAhC;AAEA,SAAQC,QAAR,EAAkBC,aAAlB,EAAiCC,WAAjC,QAAmD,wBAAnD;AACA,SAAQC,OAAR,EAAiBC,WAAjB,EAA8BC,IAA9B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAAQC,cAAR,QAA6B,eAA7B;;AAEA,MAAMC,QAAQ,gBAAGH,IAAI,MAAC,MAAMN,KAAK,CAAC,MAAM,OAAO,YAAP,CAAP,CAAZ,CAArB;MAAMS,Q;;AAEN,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,eADoB;AAEpBC,EAAAA,SAFoB;AAGpBC,EAAAA,cAHoB;AAIpBC,EAAAA,iBAJoB;AAKpBC,EAAAA,WALoB;AAMpBC,EAAAA,IANoB;AAOpBC,EAAAA,OAPoB;AAQpBC,EAAAA,KARoB;AASpBC,EAAAA,YAToB;AAUpBC,EAAAA;AAVoB,CAAD,KAWf;AAAA;;AACJ,QAAM;AAACC,IAAAA;AAAD,MAAMb,cAAc,EAA1B;AAEA,QAAMc,KAAK,GAAGlB,OAAO,CAAC,MAAM;AAC1B,UAAMmB,MAAM,GAAG,EAAf;AAEA,KAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUC,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChCH,MAAAA,MAAM,CAACI,IAAP,CAAY;AACVC,QAAAA,cAAc,EAAG,GAAE,MAAMF,KAAK,GAAG,GAAI;AAD3B,OAAZ;AAGA,aAAO,IAAP;AACD,KALD;AAMA,WAAOH,MAAP;AACD,GAVoB,EAUlB,EAVkB,CAArB;AAYA,QAAMM,mBAAmB,GAAGxB,WAAW,CAAC,MAAM;AAC5CS,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,QAAIC,WAAJ,EAAiBK,cAAc,CAAC,CAACL,WAAF,CAAd;AAClB,GAHsC,EAGpC,CAACD,iBAAD,EAAoBM,cAApB,EAAoCL,WAApC,CAHoC,CAAvC;AAKA,QAAMe,eAAe,GAAGzB,WAAW,CAAC,MAAM;AACxC,QAAI,CAACU,WAAL,EAAkBI,YAAY,CAAC,KAAD,CAAZ;AAClBC,IAAAA,cAAc,CAAC,CAACL,WAAF,CAAd;AACD,GAHkC,EAGhC,CAACA,WAAD,EAAcK,cAAd,EAA8BD,YAA9B,CAHgC,CAAnC;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArCD;;GAAMT,Y;UAYQF,c;;;MAZRE,Y;AAuCN,eAAeA,YAAf","sourcesContent":["import Tooltip from './Tooltip';\n\nimport {formatDate, retry} from '../utils/commonFunctions';\n\nimport {BellIcon, BellSlashIcon, HistoryIcon} from '@primer/octicons-react';\nimport {useMemo, useCallback, lazy, Suspense} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nconst Timeline = lazy(() => retry(() => import('./Timeline')));\n\nconst ActionsPanel = ({\n  lastUpdatedDate,\n  newUpdate,\n  isTimelineMode,\n  setIsTimelineMode,\n  showUpdates,\n  date,\n  setDate,\n  dates,\n  setNewUpdate,\n  setShowUpdates,\n}) => {\n  const {t} = useTranslation();\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${500 + index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const handleTimelineClick = useCallback(() => {\n    setIsTimelineMode(true);\n    if (showUpdates) setShowUpdates(!showUpdates);\n  }, [setIsTimelineMode, setShowUpdates, showUpdates]);\n\n  const handleBellClick = useCallback(() => {\n    if (!showUpdates) setNewUpdate(false);\n    setShowUpdates(!showUpdates);\n  }, [showUpdates, setShowUpdates, setNewUpdate]);\n\n  return <div className=\"ActionsPanel\"></div>;\n};\n\nexport default ActionsPanel;\n"]},"metadata":{},"sourceType":"module"}