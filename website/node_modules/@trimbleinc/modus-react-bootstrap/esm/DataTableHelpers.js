/*!
  Modus React Bootstrap 
  A React-based component library developed as a common, open source platform for all of Trimbleâ€™s web applications built on React.
  Extends React-Bootstrap v1.6.5
  Copyright (c) 2022 Trimble Inc.
 */

import * as React from 'react';
import IndeterminateCheckbox from './IndeterminateCheckbox';

// constants
import { jsx as _jsx } from "react/jsx-runtime";
export const DATATABLE_CHECKBOX_SELECTOR_ID = 'selector';
export const DATATABLE_DEFAULT_PAGE_SIZES = [10, 20, 30, 40, 50];

// components
export const checkBoxSelectionHook = (hooks, tableId, multipleRowSelection) => {
  hooks.visibleColumns.push(columns => [{
    id: DATATABLE_CHECKBOX_SELECTOR_ID,
    disableResizing: true,
    disableGroupBy: true,
    Cell: ({
      row
    }) => /*#__PURE__*/_jsx(IndeterminateCheckbox, {
      ...row.getToggleRowSelectedProps(),
      id: `${tableId}_${DATATABLE_CHECKBOX_SELECTOR_ID}_row"${row.id}`
    }),
    ...(multipleRowSelection && {
      Header: ({
        getToggleAllRowsSelectedProps
      }) => /*#__PURE__*/_jsx(IndeterminateCheckbox, {
        ...getToggleAllRowsSelectedProps(),
        id: `${tableId}_${DATATABLE_CHECKBOX_SELECTOR_ID}_header`
      })
    })
  }, ...columns]);
};

// functions
export const stateReducer = {
  stateReducer: (newState, action) => {
    if (action.type === 'toggleRowSelected') {
      newState.selectedRowIds = action.value && {
        [action.id]: true
      };
    }
    return newState;
  }
};
export const getFlexColumnStyles = column => ({
  flex: column.width ? `${column.width} 0 auto` : undefined
});
export const getCellStyles = (props, {
  cell
}) => [props, {
  style: getFlexColumnStyles(cell.column)
}];